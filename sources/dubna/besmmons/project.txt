*LIBRA:23,24
*CALL ASPID*D:MACROS
#МАКРО ПЧ #А0 #КПБ #СГ19 #ЛА19 #КОНМАК
#ОНСЦ
#БС16
#Ц #Б Т_Е_Х_Н_И_Ч_Е_С_К_И_Й___П_Р_О_Е_К_Т #А0
#БС3 #Б #Ц П_Р_О_Ц_Е_С_С_О_Р_А__-__Э_М_У_Л_Я_Т_О_Р_А
#БС3 _
#Ц #Б "_М_К_Б_-_8_6_0_1_" #А0
#БС5
#Ц #М ПОЯСНИТЕЛЬНАЯ ЗАПИСКА #А0
#БС2
#НСЦ1 #ДСК62 #НОВСЦ _
#НОВСЦ _
#НА #А0 _ #А0 #Б #Ц С_О_Д_Е_Р_Ж_А_Н_И_Е #М
#НА #А0 _ #А0 _
#А0 1.ОБЩИЕ ПОЛОЖЕНИЯ
#А0 2.ФИЗИЧЕСКОЕ И МЕТОДИЧЕСКОЕ ОБОСНОВАНИЕ
#А0 3.ОСНОВНЫЕ МЕТОДИЧЕСКИЕ И ТЕХНИЧЕСКИЕ
 ХАРАКТЕРИСТИКИ ПРОЦЕССОРА - ЭМУЛЯТОРА
#А3 3.1.ЦЕНТРАЛЬНЫЙ ПРОЦЕССОР
#А3 3.2.@О_@З_@У
#А3 3.3.О ВНЕШНИХ УСТРОЙСТВАХ
#А6 3.3.1.МАГНИТНАЯ ЛЕНТА
#А6 3.3.2.МАГНИТНЫЙ ДИСК
#А3 3.4.ПУЛЬТ-ПРОЦЕССОР
#А3 3.5.ОПИСАНИЕ ОБЩЕЙ ШИНЫ
#А6 3.5.1.ЗАХВАТ ШИНЫ
#А6 3.5.2.ПРОЦЕСС ОБМЕНА
#А6 3.5.3.ОБРАБОТКА ПРЕРЫВАНИЙ
#А6 3.5.4.СПЕЦИАЛЬНЫЕ СИГНАЛЫ ОБЩЕЙ ШИНЫ
#А6 3.5.5.СИГНАЛЫ ОБЩЕЙ ШИНЫ
#А0 4.ФУНКЦИОНАЛЬНОЕ ОПИСАНИЕ ПРОЦЕССОРА - ЭМУЛЯТОРА
#А3 4.1.ФОРМИРОВАНИЕ ИСПОЛНИТЕЛЬНЫХ АДРЕСОВ
#А3 4.2.СТРУКТУРА ПАМЯТИ
#А3 4.3.ПРЕДСТАВЛЕНИЕ ЧИСЕЛ
#А6 4.3.1.ПРЕДСТАВЛЕНИЕ ЧИСЛА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А6 4.3.2.ПРЕДСТАВЛЕНИЕ ЧИСЕЛ @Б@Э@С@М-6
#А6 4.3.3.ЦЕЛЫЕ 64 И 32-РАЗРЯДНЫЕ ЧИСЛА
#А3 4.4.ФОРМАТ КОМАНД
#А6 4.4.1.КОМАНДЫ НОВОГО РЕЖИМА
#А6 4.4.2.КОМАНДЫ ЭМУЛЯТОРА @Б@Э@С@М-6
#А9 4.4.2.1.АРИФМЕТИЧЕСКИЕ КОМАНДЫ ЭМУЛЯТОРА
#А9 4.4.2.2.КОМАНДЫ ПЕРЕСЫЛОК
#А9 4.4.2.3.УСЛОВНЫЕ ПЕРЕХОДЫ В @Р@Э
#А9 4.4.2.4.ЛОГИЧЕСКИЕ И СДВИГОВЫЕ КОМАНДЫ
#А3 4.5.ТЕГИ
#А3 4.6.ПРИПИСКА И ЗАЩИТА ПАМЯТИ
#А3 4.7.РЕГИСТРЫ
#А3 4.8.СИСТЕМА ПРЕРЫВАНИЙ И ЭКСТРАКОДОВ
#А6 4.8.1.ПОРЯДОК ДЕЙСТВИЙ ПРИ ПРЕРЫВАНИЯХ
#А6 4.8.2.ПОРЯДОК ДЕЙСТВИЙ ПРИ ЭКСТРАКОДАХ
#А6 4.8.3.СПИСОК ПРЕРЫВАНИЙ И ПРИЧИНЫ ИХ ВОЗНИКНОВЕНИЯ
#А0 5.СИСТЕМА КОМАНД
#А3 5.1.КОМАНДЫ ПЕРЕСЫЛОК
#А3 5.2.АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А3 5.3.ЛОГИЧЕСКИЕ КОМАНДЫ
#А3 5.4.ИНДЕКСНЫЕ КОМАНДЫ @Б@Э@С@М-6
#А3 5.5.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ @Б@Э@С@М-6
#А3 5.6.КОМАНДЫ С РЕГИСТРОМ РЕЖИМОВ
#А3 5.7.КОМАНДЫ С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ
#А3 5.8.КОМАНДЫ С @Р@М@Р
#А3 5.9.ИНДЕКСНЫЕ КОМАНДЫ
#А3 5.10.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ
#А3 5.11.ЦЕЛАЯ 64-РАЗРЯДНАЯ АРИФМЕТИКА
#А3 5.12.ОПЕРАЦИИ НАД ПОЛУСЛОВАМИ
#А3 5.13.ОПЕРАЦИИ НАД 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ
#А3 5.14.ОПЕРАЦИИ НАД БАЙТАМИ
#А3 5.15.ОПЕРАЦИИ НАД БИТАМИ
#А3 5.16.АРИФМЕТИКА С ДВОЙНОЙ ТОЧНОСТЬЮ
#А3 5.17.ПРИВИЛЕГИРОВАННЫЕ КОМАНДЫ
#А3 5.18.КОМАНДЫ ОСНОВНОГО ФОРМАТА #Б ЭЛЬБРУС-Б #М
#А3 5.19.КОМАНДЫ ДОПОЛНИТЕЛЬНОГО ФОРМАТА #Б ЭЛЬБРУС-Б #М
#А3 5.20.СВОДНАЯ ТАБЛИЦА КОМАНД @М@К@Б-8601
#А3 5.21.СКОРОСТЬ ИСПОЛНЕНИЯ КОМАНД @М@К@Б-8601
#А3 5.22.ТАБЛИЦЫ КОДОВ КОМАНД
#А3 5.23.ТИПЫ ДАННЫХ @М@К@Б-8601 И ОПЕРАЦИИ С НИМИ
#А0 6.ОПИСАНИЕ ПРОЦЕССОРА - ЭМУЛЯТОРА НА МИКРОУРОВНЕ
#А3 6.1.БЛОК МИКРОПРОГРАММНОГО УПРАВЛЕНИЯ
#А3 6.2.ФОРМАТ МИКРОКОМАНДЫ
#А3 6.3.ТАБЛИЦЫ ПОЛЕЙ МИКРОПРОГРАММНОГО СЛОВА И ИХ НАЗНАЧЕНИЯ
#А3 6.4.НЕКОТОРЫЕ #СГ3 @Б@И@С, ВХОДЯЩИЕ В СОСТАВ @Ц@П, И ИХ
 ИСПОЛЬЗОВАНИЕ #СГ0
#А6 6.4.1.БЛОК ОБМЕНА ИНФОРМАЦИЕЙ
#А6 6.4.2.МИКРОПРОЦЕССОРНАЯ СЕКЦИЯ
#А6 6.4.3.СХЕМА УПРАВЛЕНИЯ СОСТОЯНИЕМ И СДВИГАМИ
#А3 6.5.ОБРАБОТКА ПРЕРЫВАНИЙ НА МИКРОУРОВНЕ
#А3 6.6.СТАТУСНЫЙ РЕГИСТР @Ц@П
#А3 6.7.АДРЕСАЦИЯ РЕГИСТРОВ И ПАМЯТИ @Ц@П ДЛЯ ДОСТУПА #СГ3
 ИЗ @П@П И КОМАНДАМИ #Б RMOD &И WMOD #М #СГ0
#А0 7.ЗАМЕЧАНИЯ
#НОВСЦ _ #СГ0
#А0 #Б #Ц 1._ОБЩИЕ__ПОЛОЖЕНИЯ
#НА ПРОЦЕССОР_-_ЭМУЛЯТОР
 #Б "М_К_Б_-_8601" #М РАЗРАБАТЫВАЕТСЯ
 И ИЗГОТАВЛИВАЕТСЯ
 В #Б _Л_В_Т_А__ О_И_Я_И_ #М С УЧАСТИЕМ
 @ОПЫТНОГО ПРОИЗВОДСТВА _@О_@И_@Я_@И.
#ПЕРН #Б АВТОРЫ: #М @ДАВЫДОВ @А.Л.,
 @ЕМЕЛИН @И.А., @КАДЫКОВ @В.М.,
 @ЛЕВЧАНОВСКИЙ @Ф.В.,
 @ЛОМИДЗЕ @О.Н.,
 @ПОПОВ @М.Ю.,
 @САПОЖНИКОВ @А.П., @САПОЖНИКОВА @Т.Ф.,
 @СИЛИН @И.Н.
#ПЕРН #Б ОТВЕТСТВЕННЫЕ РУКОВОДИТЕЛИ:
#А0 #М ИНЖЕНЕРНАЯ ЧАСТЬ: @ЛЕВЧАНОВСКИЙ @Ф.В.
#А0 ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ: @СИЛИН @И.Н.
#НА #ПЕРН #Б ЦЕЛЬ ПРОЕКТА: #М СОЗДАТЬ УНИВЕРСАЛЬНУЮ
 @Э@В@М, ПРОГРАММНО СОВМЕСТИМУЮ С _@Б_@Э_@С_@М_-_6_ И ТЕМ
 САМЫМ СОХРАНИТЬ НАКОПЛЕННОЕ ЗА ДЛИТЕЛЬНЫЙ
 ПЕРИОД ЕЕ ЭКСПЛУАТАЦИИ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ.
 УСТРАНИТЬ ПРИСУЩИЕ #Б _Э_В_М_ _Б_Э_С_М_-_6 #М
 ОСНОВНЫЕ НЕДОСТАТКИ: КОРОТКИЙ АДРЕС, МАЛЫЙ
 ПОРЯДОК ЧИСЕЛ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ, НЕДОСТАТОЧНЫЙ
 ОБ'ЕМ ОПЕРАТИВНОЙ ПАМЯТИ.
#НА В ПРОЕКТИРУЕМОМ ПРОЦЕССОРЕ-ЭМУЛЯТОРЕ
 С ТОЧКИ ЗРЕНИЯ ВЫПОЛНЕНИЯ КОМАНД ПРЕДУСМАТРИВАЕТСЯ
 ВОЗМОЖНОСТЬ ЕГО
 РАБОТЫ В СЛЕДУЮЩИХ ТРЕХ РЕЖИМАХ:
#ПЕРН А).РЕЖИМ ИСПОЛНЕНИЯ КОМАНД _@Б_@Э_@С_@М_-_6;
#ПЕРН Б).РЕЖИМ ИСПОЛНЕНИЯ КОМАНД
 ВЫЧИСЛИТЕЛЬНОЙ СИСТЕМЫ #Б ЭЛЬБРУС-Б; #М _
#ПЕРН В).РЕЖИМ ИСПОЛНЕНИЯ НОВОГО СПИСКА
 КОМАНД (РАСШИРЕНИЕ КОМАНД #Б Б_Э_С_М_-_6 _&И
 _ЭЛЬБРУС-Б). #М _
#НА ПЕРВЫЙ РЕЖИМ ПОЗВОЛИТ РАБОТАТЬ
 С ПРОГРАММАМИ, НАПИСАННЫМИ
 ДЛЯ #Б _Б_Э_С_М_-_6. #М ВО ВТОРОМ РЕЖИМЕ ВОЗМОЖНО ПРИМЕНЕНИЕ
 ПРОЦЕССОРА-ЭМУЛЯТОРА В КАЧЕСТВЕ ПРОГРАММНО
 СОВМЕСТИМОЙ МЛАДШЕЙ МОДЕЛИ
 ВЫЧИСЛИТЕЛЬНОЙ СИСТЕМЫ #Б ЭЛЬБРУС-Б. #М В НОВЫЙ
 СПИСОК КОМАНД ВВОДЯТСЯ КОМАНДЫ,
 НЕОБХОДИМЫЕ ДЛЯ РАБОТЫ С ЦЕЛОЧИСЛЕННОЙ
 АРИФМЕТИКОЙ, КОМАНДЫ, ОБЕСПЕЧИВАЮЩИЕ
 ОБРАБОТКУ ОТДЕЛЬНЫХ ПОЛЕЙ 64-РАЗРЯДНОГО
 СЛОВА, КОМАНДЫ С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ
 И ДР., СПОСОБСТВУЮЩИЕ
 УЛУЧШЕНИЮ РАБОЧИХ ХАРАКТЕРИСТИК ПРОЦЕССОРА.
#НА АППАРАТНО ПРОЦЕССОР-ЭМУЛЯТОР ВЫПОЛНЯЕТСЯ
 С ПРИВЛЕЧЕНИЕМ СОВРЕМЕННОЙ ТЕХНОЛОГИИ МИКРОПРОЦЕССОРНЫХ
 @Б@И@С, СХЕМ ИНТЕГРАЛЬНОЙ ПАМЯТИ
 БОЛЬШОГО ОБ'ЕМА И
 ПРОГРАММИРУЕМЫХ ЛОГИЧЕСКИХ МАТРИЦ.
#НА В АРХИТЕКТУРУ ПРОЦЕССОРА-ЭМУЛЯТОРА
 ВВОДИТСЯ ТЕГ, ЧТО БУДЕТ СПОСОБСТВОВАТЬ
 СОЗДАНИЮ ЭФФЕКТИВНОЙ СИСТЕМЫ ПРОГРАММНОГО
 ОБЕСПЕЧЕНИЯ, ПОСЛОВНОЙ ЗАЩИТЕ ПАМЯТИ
 ОТ НЕСАНКЦИОНИРОВАННОГО ДОСТУПА
 И УДОБСТВУ ОТЛАДКИ ПРОГРАММ ПОЛЬЗОВАТЕЛЕМ.
#НА ПРЕДУСМАТРИВАЕТСЯ ТАКЖЕ ВОЗМОЖНОСТЬ
 РАБОТЫ В МНОГОПРОЦЕССОРНОМ
 И МУЛЬТИПРОГРАММНОМ РЕЖИМАХ, ВВОДЯТСЯ
 СРЕДСТВА ДЛЯ РАБОТЫ В РЕЖИМЕ РЕАЛЬНОГО
 ВРЕМЕНИ.
 ПРОИЗВОДИТЕЛЬНОСТЬ ДВУХПРОЦЕССОРНОГО
 ВАРИАНТА ОЦЕНИВАЕТСЯ РАВНОЙ ПРОИЗВОДИТЕЛЬНОСТИ
 @Б_@Э_@С_@М_-_6.
#НА ДАННАЯ РАБОТА ПРОВОДИТСЯ ВПЕРВЫЕ.
#НА РАБОТЫ, АНАЛОГИЧНЫЕ ПРЕДСТАВЛЕННОМУ ПРОЕКТУ,
 В НАШЕЙ СТРАНЕ И В СТРАНАХ-УЧАСТНИЦАХ НЕ
 ПРОВОДИЛИСЬ.
 ИЗВЕСТНЫ РЕАЛИЗОВАННЫЕ ПРОЕКТЫ В #Б США &И ЦЕРН #М
 ПРОЦЕССОРОВ-ЭМУЛЯТОРОВ 168@Е И 38@Е,
 ЭМУЛИРУЮЩИХ УРЕЗАННЫЙ СПИСОК
 КОМАНД (ТОЛЬКО ЦЕЛОЧИСЛЕННАЯ
 АРИФМЕТИКА) #Б ЭВМ IВМ 370/168 &И SYSTEM 38.
#НА #Б ЗАИНТЕРЕСОВАННЫЕ НАУЧНЫЕ
 УЧРЕЖДЕНИЯ И ОРГАНИЗАЦИИ: #М ИНСТИТУТ @АТОМНОЙ @ЭНЕРГИИ ИМ.
 И.В.КУРЧАТОВА, ИНСТИТУТ
 @ТОЧНОЙ @МЕХАНИКИ И @ВЫЧИСЛИТЕЛЬНОЙ
 @ТЕХНИКИ ИМ. ЛЕБЕДЕВА, ЗАВОД "@С@А@М".
 ФОРМЫ СОТРУДНИЧЕСТВА В НАСТОЯЩЕЕ ВРЕМЯ НЕ
 УСТАНОВЛЕНЫ.
#НА #НА #НА #ВС8 _
#А0 #Б #Ц 2._ФИЗИЧЕСКОЕ_И_МЕТОДИЧЕСКОЕ_ОБОСНОВАНИЕ #М
#НА #НА #Б АКТУАЛЬНОСТЬ. #М УЧИТЫВАЯ ТО, ЧТО #Б _Э_В_М_
 _Б_Э_С_М_-_6 #М ПРОМЫШЛЕННОСТЬЮ БОЛЬШЕ НЕ
 ВЫПУСКАЕТСЯ И В @О@И@Я@И ПЛАНИРУЕТСЯ ЕЕ ВЫВОД
 ИЗ ЭКСПЛУАТАЦИИ,
 ПУТЬ АППАРАТНОЙ МОДЕРНИЗАЦИИ ЭТОЙ МАШИНЫ
 ПРЕДСТАВЛЯЕТСЯ ЭКОНОМИЧЕСКИ
 БОЛЕЕ ЦЕЛЕСООБРАЗНЫМ,
 ЧЕМ ПЕРЕНОС И ПЕРЕРАБОТКА ОГРОМНОГО
 ОБ'ЕМА ОРИГИНАЛЬНОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ
 НА ДРУГИЕ ТИПЫ @Э@В@М.
#НА АРХИТЕКТУРА _@Б_@Э_@С_@М_-_6, НЕСМОТРЯ
 НА ДЛИТЕЛЬНЫЙ ПЕРИОД ЕЕ ЭКСПЛУАТАЦИИ,
 ДОСТАТОЧНО СОВРЕМЕННА
 И МОЖЕТ БЫТЬ ПЕРЕВЕДЕНА НА
 НОВУЮ ТЕХНОЛОГИЧЕСКУЮ БАЗУ
 БОЛЬШИХ ИНТЕГРАЛЬНЫХ СХЕМ БЕЗ
 СУЩЕСТВЕННЫХ ЗАТРАТ РЕСУРСОВ И СИЛ.
 МАЛЫЕ ГЕОМЕТРИЧЕСКИЕ РАЗМЕРЫ
 РАЗРАБАТЫВАЕМОГО ПРОЦЕССОРА-ЭМУЛЯТОРА
 ОТКРЫВАЮТ ВОЗМОЖНОСТИ ЕГО ИСПОЛЬЗОВАНИЯ В
 КАЧЕСТВЕ МОЩНОЙ @Э@В@М
 ИНДИВИДУАЛЬНОГО ПОЛЬЗОВАНИЯ НЕ ТОЛЬКО КАК ВЫЧИСЛИТЕЛЯ,
 НО И В СИСТЕМАХ УПРАВЛЕНИЯ ЭКСПЕРИМЕНТАЛЬНЫМИ
 ФИЗИЧЕСКИМИ УСТАНОВКАМИ, СПЕКТРАЛЬНОМ АНАЛИЗЕ,
 ТРИГГЕРАХ ВТОРОГО УРОВНЯ, АВТОМАТИЗИРОВАННЫХ
 РАБОЧИХ МЕСТАХ ПРОЕКТИРОВЩИКА И Т.&Д.
#НА #Б ВЫБОР ЭЛЕМЕНТНОЙ БАЗЫ. #М
 САМЫМ ВЫСОКИМ ПОКАЗАТЕЛЕМ ПО ПАРАМЕТРАМ
 "БЫСТРОДЕЙСТВИЕ - СТЕПЕНЬ ИНТЕГРАЦИИ -
 ПОТРЕБЛЯЕМАЯ МОЩНОСТЬ - СТРУКТУРНЫЙ БАЗИС"
 НА СЕГОДНЯШНИЙ ДЕНЬ ОБЛАДАЕТ @Т@Т@Л-ТЕХНОЛОГИЯ,
 ПОЭТОМУ АППАРАТНУЮ РЕАЛИЗАЦИЮ
 ПРОЦЕССОРА-ЭМУЛЯТОРА ЦЕЛЕСООБРАЗНО
 ВЫПОЛНИТЬ, ОПИРАЯСЬ НА ЭТУ
 ТЕХНОЛОГИЮ.
 В СХЕМОТЕХНИЧЕСКИХ
 РЕШЕНИЯХ ПРОЕКТА БУДУТ
 ИСПОЛЬЗОВАНЫ СЛЕДУЮЩИЕ
 СЕРИИ ИНТЕГРАЛЬНЫХ СХЕМ:
 К1804, К1802, К580, К589, К531, К555, К541, К565, К556.
 В БУДУЩЕМ ВОЗМОЖЕН ПЕРЕХОД
 НА @Э@С@Л-ТЕХНОЛОГИЮ, ЧТО ПОЗВОЛИТ В 2-3 РАЗА УВЕЛИЧИТЬ
 БЫСТРОДЕЙСТВИЕ ПРОЦЕССОРА-ЭМУЛЯТОРА.
#НА НА ЭТАПАХ ПРОЕКТИРОВАНИЯ И ИЗГОТОВЛЕНИЯ
 ПРЕДПОЛАГАЕТСЯ ИСПОЛЬЗОВАНИЕ СИСТЕМЫ
 ЛОГИЧЕСКОГО МОДЕЛИРОВАНИЯ "@П@У@Л@Ь@С"
 И СИСТЕМЫ АВТОМАТИЗИРОВАННОГО
 ПРОЕКТИРОВАНИЯ ПЕЧАТНЫХ ПЛАТ "@Т@Е@Х@П@Р@О".
 СИСТЕМА "@П@У@Л@Ь@С" ПОЗВОЛЯЕТ СОЗДАТЬ
 МАТЕМАТИЧЕСКУЮ МОДЕЛЬ КАК ОТДЕЛЬНЫХ
 БЛОКОВ, ТАК И В ЦЕЛОМ ВСЕГО
 ПРОЦЕССОРА-ЭМУЛЯТОРА, ЧТО ЗНАЧИТЕЛЬНО
 УСКОРИТ ЕГО КОМПЛЕКСНУЮ ОТЛАДКУ.
#НА #НА #НА #ВС8 _
#А0 #Б #Ц 3._ОСНОВНЫЕ МЕТОДИЧЕСКИЕ И ТЕХНИЧЕСКИЕ
#А0 #Ц ХАРАКТЕРИСТИКИ ПРОЦЕССОРА_-_ЭМУЛЯТОРА
#НА #НА ПРОЕКТИРУЕМАЯ @Э@В@М
 ЯВЛЯЕТСЯ МИКРОПРОГРАММНО УПРАВЛЯЕМОЙ
 МАШИНОЙ ОБЩЕГО НАЗНАЧЕНИЯ С МОДУЛЬНОЙ ОРГАНИЗАЦИЕЙ.
 ОСНОВНЫМИ МОДУЛЯМИ, ВХОДЯЩИМИ В СОСТАВ МАШИНЫ,
 ЯВЛЯЮТСЯ: @ОПЕРАТИВНОЕ @ЗАПОМИНАЮЩЕЕ @УСТРОЙСТВО (@О@З@У),
 @ЦЕНТРАЛЬНЫЙ @ПРОЦЕССОР (@Ц@П)
 (МОЖЕТ БЫТЬ НЕСКОЛЬКО),
 КОНТРОЛЛЕРЫ ДЛЯ СВЯЗИ С ВНЕШНИМИ УСТРОЙСТВАМИ (@К@В@У),
 А ТАКЖЕ @ПУЛЬТОВОЙ @ПРОЦЕССОР (@П@П).
 СВЯЗЬ МЕЖДУ НИМИ ОСУЩЕСТВЛЯЕТСЯ ЧЕРЕЗ ОБЩУЮ ШИНУ ДАННЫХ.
 КРОМЕ ТОГО, ДЛЯ ЗАГРУЗКИ
 МИКРОПРОГРАММ И ДЛЯ ИСПОЛНЕНИЯ
 ФУНКЦИЙ ИНЖЕНЕРНОГО ПУЛЬТА МАШИНЫ
 СУЩЕСТВУЕТ ДОПОЛНИТЕЛЬНАЯ ПОСЛЕДОВАТЕЛЬНАЯ ЛИНИЯ
 СВЯЗИ МЕЖДУ ПУЛЬТОВЫМ ПРОЦЕССОРОМ И ЦЕНТРАЛЬНЫМИ
 ПРОЦЕССОРАМИ.
#НА #НА
#А0 ____________________--------------------
#А0 ____________________I_____О__З__У______I
#А0 ____________________--------------------
#А0 _____________________________А
#А0 _____________________________I
#А0 _____________________________V
#А0 ==============================================================
#А0 __________ОБЩАЯ__ШИНА__(АДРЕС,_ДАННЫЕ,_УПРАВЛЕНИЕ)_____
#А0 ==============================================================
#А0 ___А____________А___________А______________А_____________А
#А0 ___I____________I___________I______________I_____________I
#А0 ___V____________V___________V______________V_____________V
#А0 -------_____--------_____--------______---------_____---------
#А0 I_П_П_I_____I_ЦП_1_I_..._I_ЦП_N_I______I_КВУ_1_I_..._I_КВУ64_I
#А0 ---А---_____----А---_____---А----______---------_____---------
#А0 ___I____________I___________I
#А0 ___V____________V___________V
#А0 ---------------------------------
#А0 __ПОСЛЕДОВАТЕЛЬНАЯ_ЛИНИЯ_СВЯЗИ
#НОВСЦ _
#Б #А0 #Ц 3.1._ЦЕНТРАЛЬНЫЙ ПРОЦЕССОР
#НА #НА ЦЕНТРАЛЬНЫЙ ПРОЦЕССОР (@Ц@П)
 ПРЕДНАЗНАЧЕН
 ДЛЯ ИСПОЛНЕНИЯ КОМАНД, ЗАПИСАННЫХ В @О@З@У.
#НА ФУНКЦИИ @Ц@П:
#ПЕРН 1._ВЫЧИСЛЕНИЕ ФИЗИЧЕСКИХ АДРЕСОВ КОМАНД И ОПЕРАНДОВ;
#ПЕРН 2._ЧТЕНИЕ ИЗ @О@З@У МАШИННЫХ КОМАНД;
#ПЕРН 3._ПРИВЕДЕНИЕ КОМАНД К ЕДИНОМУ ВНУТРЕННЕМУ ВИДУ;
#ПЕРН 4._ИЗВЛЕЧЕНИЕ ОПЕРАНДОВ;
#ПЕРН 5._ВЫПОЛНЕНИЕ КОМАНД;
#ПЕРН 6._ЗАПИСЬ РЕЗУЛЬТАТОВ В ПАМЯТЬ.
#НА ЦЕНТРАЛЬНЫЙ ПРОЦЕССОР (@Ц@П)
 СОСТОИТ ИЗ:
#А0 _
#А0 _-_БЛОКА МИКРОПРОЦЕССОРНЫХ
 СЕКЦИЙ (@М@П@С), СОДЕРЖАЩЕГО
 @А@Л@У И РЕГИСТРОВОЕ ЗАПОМИНАЮЩЕЕ
 УСТРОЙСТВО (@Р@З@У);
#А0 _-_БЛОКА МИКРОПРОГРАММНОГО УПРАВЛЕНИЯ,
 СОСТОЯЩЕГО ИЗ ПРЕОБРАЗОВАТЕЛЕЙ НАЧАЛЬНОГО
 АДРЕСА (@П@Н@А),
 СХЕМЫ УПРАВЛЕНИЯ АДРЕСОМ МИКРОКОМАНДЫ
 (@С@У@А@М), УПРАВЛЯЮЩЕЙ ПАМЯТИ
 МИКРОПРОГРАММ #Б (ППЗУ И ОЗУ МП),
 #М КОНВЕЙЕРНОГО РЕГИСТРА (@К@Р);
#А0 _-_@П@П@З@У КОНСТАНТ;
#А0 _-_АРИФМЕТИЧЕСКИХ
 БЛОКОВ, ИСПОЛНЯЮЩИХ
 УМНОЖЕНИЕ (@У@М@Н), СДВИГИ, ПОИСК ЛЕВОЙ ЕДИНИЦЫ
 (@П@Л@Е) И ПОДСЧЕТ ЧИСЛА ЕДИНИЦ (@N @Е@Д);
#А0 _-_БЛОКОВ ОБМЕНА ИНФОРМАЦИЕЙ
 С ОБЩЕЙ ШИНОЙ НА 64 РАЗРЯДА
 ДЛЯ КОМАНД И ДАННЫХ И НА 8 РАЗРЯДОВ ДЛЯ ТЕГА (@Б@О@И);
#А0 _-_@О@З@У МОДИФИКАТОРОВ;
#А0 _-_СТАНДАРТИЗАТОРА КОМАНД,
 ПРИВОДЯЩЕГО КОМАНДЫ
 @Б@Э@С@М-6 К ОБЩЕМУ
 ВИДУ С 8-РАЗРЯДНЫМ КОДОМ ОПЕРАЦИИ,
 И СХЕМЫ РАЗМНОЖЕНИЯ ЗНАКА АДРЕСНОЙ
 ЧАСТИ КОМАНДЫ (@А@К);
#А0 _-_РЕГИСТРОВ:
#А3 ИСПОЛНИТЕЛЬНОГО АДРЕСА,
#А3 НОМЕРА ГРУППЫ МОДИФИКАТИРОВ (@Р@Н@Г),
#А3 НОМЕРА ПРОЦЕССА (@Р@Н@П),
#А3 РЕГИСТРА СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА,
#А3 ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА,
#А3 РЕГИСТРА АСТРОНОМИЧЕСКОГО ВРЕМЕНИ,
#А3 ТАЙМЕРА АСТРОНОМИЧЕСКОГО ВРЕМЕНИ;
#А0 _-_БЛОКА ПРИПИСОК АДРЕСОВ;
#А0 _-_БЛОКА ОБРАБОТКИ ВНЕШНИХ И
 ВНУТРЕННИХ ПРЕРЫВАНИЙ;
#А0 _-_БЛОКА МОДИФИКАЦИИ ПРИОРИТЕТОВ
 СТРАНИЦ, СОДЕРЖАЩЕГО РЕГИСТР
 ФИЗИЧЕСКОЙ СТРАНИЦЫ (@Р@Ф@С),
 @О@З@У ПРИЗНАКОВ #Б БОБР, БИЗМ, БМСП &И ОЗУ
 #М ПРИОРИТЕТОВ СТРАНИЦ;
#А0 _-_АРБИТРА;
#А0 _-_БЛОКА СВЯЗИ С ПУЛЬТОВЫМ ПРОЦЕССОРОМ,
 СОСТОЯЩЕГО ИЗ @О@З@У ОБМЕНА,
 МИКРОПРОЦЕССОРА СО СВОИМИ @П@П@З@У И @О@З@У
 ДЛЯ ОБСЛУЖИВАНИЯ ЛИНИИ СВЯЗИ
 С ПУЛЬТОВЫМ ПРОЦЕССОРОМ И ЗАГРУЗКИ
 МИКРОПРОГРАММ;
#А0 _-_ОСТАНОВА ПО АДРЕСУ;
#А0 _-_ТАКТОВОГО ГЕНЕРАТОРА.
#НОВСЦ _
#А0 #Ц СТРУКТУРНАЯ СХЕМА @Ц@П
#А0 _
#А0 ===А====100=РАЗРЯДОВ========А====ОБЩАЯ=ШИНА===================
#А0 _Х_I8_____________________Х_I64
#А0 ---V----____----------------V----------------____----------
#А0 I_БОИ__I____I_____________Б_О_И_____________I____I________I
#А0 I_ТЕГ:_I____I__RG0__:__RG1__:__RG2__:__RG3__I____I__ППЗУ__I
#А0 I1-КОМ.I____I__ФИЗ._:КОМАНДА:ОПЕРАНД:РЕЗУЛЬ-I____I__КОН-__I
#А0 I2-OПEPI____I_АДРЕС_:__Л,П__:_______:__ТАТ__I____I_СТАНТ__I
#А0 I3-РЕЗ.I____---------------------------------____----------
#А0 -СА--В--______А_С__А_В________А_А____________________I
#А0 _II__А__-----_I64__I64________I64____________________I64
#А0 _VV__I__IKЭШI-I____I__________V______________________V
#А0 ПРЕР.I__-----_I__==+===ШИНА=D===============64=РАЗРЯДА========
#А0 _ПО__I__------V-_А_I______I________А_____А_____А_____А_____А
#А0 ТЕГУ_I__IСТАНД.I_I_I______I64______I32___I64___I64___I7____I7
#А0 _____I__IKOMAHДI_I_I______V________I_____I_____I_____I_____I
#А0 _____I__--------_I_I_-----------_-----_-----_-----_-----_-----
#А0 _____I__I_I__I_32I_I_I___МПС___I_IOЗYI_IСД-I_I___I_I___I_I_N_I
#А0 _____I__I4I__V20_I_I_I_РЗУ:АЛУ_I_IMOДI_IBИГI_IYMHI_IПЛEI_IЕД.I
#А0 _____I__V_I__-----_I_------IIII-_-----_----А_-----_-----_-----
#А0 _____I__ИPI__IАК_I_I_I_____VVVV____А___А___I___А_____А_____А
#А0 _____I____I__-----_I_I__D_------___I___I__----_I_____I_____I
#А0 _____I8___I8_______I_I__<-ICYCCI___I32_I__IПCI_I64___I64___I32
#А0 _____I____I________I_I64__--А---___I___I__-А--_I_____I_____I
#А0 _____V____I________V_V______I4_____I___I64_I7__I_____I_____I
#А0 ==========+====ШИНА=У================64=РАЗРЯДА===============
#А0 I_I___А___I________А____I___I____I________________________А__
#А0 I_I32_I___---------+----+---+---_I_-----__________________I
#А0 I_I___I____________I____I8__I5_I_->I_ШФI--------__________V__
#А0 I_I_-----___-----__I__--V--_I__I___-----__I____I12____--------
#А0 I_I_IРГ.I___I___I__I__IPHПI_I__--->IПHAI__I__--V---___I__ОЗУ_I
#А0 I_->IИCПI-->IOЗYI<--__-----_V______IKOПI--I__ICYAMI___IOБMEHAI
#А0 I___IAДPI___IПР.I_______I_-----____-----__I__------___--------
#А0 I___-----___-----_______V_IPHГI____IПHAI__I____I<----_____А
#А0 I_____I__------------___D_--I--____II/OI--I____V____I_____I
#А0 I_____-->IОСТ.ПО_AДPI-->____V6_____-----__I__------_I_____V
#А0 I10______------------HALT___D__--->IПHAI__I__IППЗYI_I_--------
#А0 I____->D_______________________VECTIINTI--I__I_OЗYI_I_I_БЛОК_I
#А0 I____I______--------_______________-----__I__I_МП_I_I-I_CBЯЗИI
#А0 I____I______I_БОБР_I__2____________IПHAI__I__------_I_I_С_ПП_I
#А0 I_-------___I_БИЗМ_I<--->D_________IГР.I---____I____I_--------
#А0 ->I_РФС_I-->I------I__1____________-----_______I<----_____I
#А0 __-------___I_БМСП_I<--->D___________________--V---_______V___
#А0 _____I______--------_________________________I_КР_I______К_ПП
#А0 _____I______-------__________________________------
#А0 _____I______I_ОЗУ_I<---У_____________________I....I
#А0 _____------>IПPИOPI--->D_____________________V....V
#А0 ____________I_СТР.I________________________УПРАВЛЕНИЕ
#А0 ____________-------__________________________________
#А0 _
#А0 ___------____УПР-------_____У_-------_____КОП_--------_УПР-Е
#А0 -->IБЛOKI____-->IТАКТ.I____-->I_ТАЙ-I_____АРБ.I______I__БОИ,
#А0 ...IПРЕ-I_______IГЕНЕ-I->1____I_МЕР,I->D__--->IAPБИTPI------>
#А0 -->IРЫВ.I--->___IPATOPI->2____IЧАСЫ_I-->______I______IМАГИСТ-
#А0 ___------VЕСТ___-------...____-------ПРЕР.____--------_РАЛЬЮ
#НА #НА #ВС5 #Б _
#А0 #Ц 3.2.__О__З__У
#НА #НА МАКСИМАЛЬНАЯ ЕМКОСТЬ ОПЕРАТИВНОГО
 ЗАПОМИНАЮЩЕГО УСТРОЙСТВА - 1 МИЛЛИОН
 72_-_РАЗРЯДНЫХ СЛОВ (9 МБАЙТ).
 В @О@З@У ИСПОЛЬЗУЕТСЯ
 @Б@И@С ДИНАМИЧЕСКОЙ
 ПАМЯТИ @К565@Р@У5 ЕМКОСТЬЮ 64К_-_1Р. &СЛОВ.
 В СВЯЗИ С ПОВЫШЕННЫМ КОЭФФИЦИЕНТОМ
 ОТКАЗОВ УКАЗАННОЙ @Б@И@С
 НЕОБХОДИМ БЛОК КОРРЕКЦИИ
 И ИСПРАВЛЕНИЯ ОШИБОК - ГЕНЕРАТОР
 КОДА @ХЕММИНГА.
#НА ОПЕРАТИВНОЕ ЗАПОМИНАЮЩЕЕ УСТРОЙСТВО
 ДОЛЖНО РАБОТАТЬ В СЛЕДУЮЩИХ РЕЖИМАХ:
#ПЕРН 1._РЕГЕНЕРАЦИЯ ПАМЯТИ;
#ПЕРН 2._ЧТЕНИЕ СЛОВА С КОРРЕКЦИЕЙ
 1-КРАТНОЙ ОШИБКИ,
 ПЕРЕЗАПИСЬ ИСПРАВЛЕННОГО СЛОВА
 И ФИКСАЦИЯ
 ОШИБОК КРАТНОСТИ 2 И БОЛЕЕ;
#ПЕРН 3._ЗАПИСЬ СЛОВА С ПРОВЕРКОЙ И БЕЗ
 ПРОВЕРКИ БИТА ТЕГА "ЗАПРЕЩЕННАЯ ЗАПИСЬ"
 (ПРИ ПРОВЕРКЕ НЕОБХОДИМО ПРЕДВАРИТЕЛЬНОЕ
 СЧИТЫВАНИЕ СЛОВА);
#ПЕРН 4._ЧТЕНИЕ СЕМАФОРНОГО СЛОВА;
#ПЕРН 5._ЧТЕНИЕ И ЗАПИСЬ В РЕЖИМЕ
 БЛОЧНОЙ ПЕРЕДАЧИ;
#ПЕРН 6._ТЕСТИРОВАНИЕ ГЕНЕРАТОРА @ХЕММИНГА.
#НА ТЕСТИРОВАНИЕ ГЕНЕРАТОГА @ХЕММИНГА
 ОСУЩЕСТВЛЯЕТСЯ С ПОМОЩЬЮ
 СТАТУСНОГО РЕГИСТРА @О@З@У,
 УСТАНОВЛЕННОГО В БЛОКЕ УПРАВЛЕНИЯ.
#НА ЗАЧЕНИЯ РАЗРЯДА СТАТУСНОГО РЕГИСТРА @О@З@У:
#ПЕРН _1_-_ЗАПРЕТ ЗАПИСИ КОНТРОЛЬНОГО
 КОДА @ХЕММИНГА В МАТРИЦУ @О@З@У;
#ПЕРН _0_-_НОРМАЛЬНЫЙ РЕЖИМ.
#НА ПОД НОРМАЛЬНЫМ РЕЖИМОМ
 ПОДРАЗУМЕВАЮТСЯ РЕЖИМЫ 1-5.
 АДРЕСУЮТСЯ К СТАТУСНОМУ РЕГИСТРУ
 КАК КО ВНЕШНЕМУ УСТРОЙСТВУ (@В@У).
#НА #ВС5 _
#А0 #Ц #Б АДРЕСА РЕГИСТРОВ В БЛОКЕ УПРАВЛЕНИЯ ПАМЯТЬЮ: #М
#ПЕРН FFFF FFFF_-_РЕГИСТР СИНДРОМА (ТОЛЬКО ЧТЕНИЕ);
#ПЕРН FFFF FFFE_-_РЕГИСТР АДРЕСА @О@З@У (ТОЛЬКО ЧТЕНИЕ);
#ПЕРН FFFF FFFD_-_СТАТУСНЫЙ РЕГИСТР @О@З@У.
#ПЕРН 14FFF, 14FFE, 14FFD - АДРЕСА ЭТИХ ЖЕ РЕГИСТОВ ДЛЯ ПУЛЬТОВОГО
 ПРОЦЕССОРА, ДОСТУПНЫХ ЧЕРЕЗ ЕГО ПРИПИСКУ.
#НА #НА #ВС8 _
#Б #А0 #Ц 3.3._О ВНЕШНИХ УСТРОЙСТВАХ
#НА #НА КАЖДЫЙ ТИП УСТРОЙСТВ (ДИСКИ, ЛЕНТЫ, ТЕРМИНАЛЫ)
 ПОДКЛЮЧАЕТСЯ К МАШИНЕ ЧЕРЕЗ СВОЙ КОНТРОЛЛЕР.
 С КАЖДЫМ КОНТРОЛЛЕРОМ СВЯЗАНО НЕКОТОРОЕ КОЛИЧЕСТВО
 ПОСЛЕДОВАТЕЛЬНЫХ "АДРЕСОВ ФИЗИЧЕСКОЙ ПАМЯТИ"
 ИЗ ДИАПАЗОНА  [F0000_Н_-_FFFFF_Н].
#НА
 СТРУКТУРА АДРЕСА  ВНЕШНИХ УСТРОЙСТВ :
#ПЕРН 16:13 РАЗРЯДЫ - НОМЕР КОНТРОЛЛЕРА = 0,1,...,15;
#ПЕРН 12:1 _РАЗРЯДЫ - АДРЕС ВНУТРИ КОНТРОЛЛЕРА.
#НА
 ЧАСТЬ АДРЕСОВ, СВЯЗАННЫХ С КАЖДЫМ КОНТРОЛЛЕРОМ,
 ПРЕДНАЗНАЧАЕТСЯ ДЛЯ ЗАДАНИЯ НА ОБМЕН,
 И СОДЕРЖАТ ТАКЖЕ АДРЕСА РЕГИСТРА СОСТОЯНИЯ
 И РЕГИСТРА МАСКИ
 ВСЕХ УСТРОЙСТВ, ПОДКЛЮЧЕННЫХ К ДАННОМУ КОНТРОЛЛЕРУ.
 ДОПУСКАЕТСЯ ВОЗМОЖНОСТЬ ПРИПИСКИ ЭТОЙ "ПАМЯТИ"
 К ВИРТУАЛЬНЫМ СТРАНИЦАМ ПОЛЬЗОВАТЕЛЕЙ, ТЕМ САМЫМ
 ОТКРЫВАЯ ДЛЯ НИХ ВОЗМОЖНОСТЬ САМОСТОЯТЕЛЬНОГО
 УПРАВЛЕНИЯ ОТДЕЛЬНЫМИ ВНЕШНИМИ УСТРОЙСТВАМИ.
 ДРУГАЯ ЧАСТЬ АДРЕСОВ КОНТРОЛЛЕРА МОЖЕТ
 ПРЕДСТАВЛЯТЬ ИЗ СЕБЯ ОБМЕННЫЙ БУФЕР
 ВНЕШНЕГО УСТРОЙСТВА, КОТОРЫЙ ТАКЖЕ
 МОЖНО "ПРИПИСАТЬ" К ПРОЦЕССУ.
#НА В ЗАКАЗЕ НА ОБМЕН НАХОДИТСЯ СЛЕДУЮЩАЯ ИНФОРМАЦИЯ:
#ПЕРН 1._КОД ОПЕРАЦИИ (8 БИТ);
#ПЕРН 2._ФИЗИЧЕСКИЙ АДРЕС НАЧАЛА МАССИВА В ПАМЯТИ (20 БИТ);
#ПЕРН 3._ДЛИНА ОБМЕННОЙ ПОРЦИИ В БАЙТАХ (16 БИТ);
#ПЕРН 4._ПОЛЕ ДОПОЛНИТЕЛЬНОЙ ИНФОРМАЦИИ (20 БИТ);
#ПЕРН 5._РЕЖИМ И НАПРАВЛЕНИЕ ОБМЕНА (16 БИТ);
#ПЕРН 6._АДРЕС НА ВНЕШНЕМ УСТРОЙСТВЕ (32 БИТА);
#ПЕРН 7._БИТ ЗАПУСКА КОНТРОЛЛЕРА (1 БИТ).
#НА ТАКИМ ОБРАЗОМ, ЗАКАЗ НА РАБОТУ ВНЕШНЕГО УСТРОЙСТВА
 ДОЛЖЕН ЗАНИМАТЬ КАК МИНИМУМ 2 СЛОВА.
#НА ПОСКОЛЬКУ К КАЖДОМУ КОНТРОЛЛЕРУ МОЖЕТ БЫТЬ ПОДКЛЮЧЕНО
 В ОБЩЕМ СЛУЧАЕ НЕСКОЛЬКО УСТРОЙСТВ, ЖЕЛАТЕЛЬНО ПО КАЖДОМУ
 ИЗ ЭТИХ УСТРОЙСТВ ИМЕТЬ В КАЧЕСТВЕ РЕГИСТРА СОСТОЯНИЯ ЦЕЛОЕ СЛОВО.
 В ЛЮБОЙ МОМЕНТ ВРЕМЕНИ РЕГИСТР СОСТОЯНИЯ ДОЛЖЕН СООТВЕТСТВОВАТЬ
 ТЕКУЩЕМУ СОСТОЯНИЮ СООТВЕТСТВУЮЩЕГО УСТРОЙСТВА.
#НА АДРЕСА КОНТРОЛЛЕРА @FH ИСПОЛЬЗУЮТСЯ
 ЦЕНТРАЛЬНЫМ ИЛИ ПУЛЬТОВЫМ
 ПРОЦЕССРОАМИ ДЛЯ ДОСТУПА
 К СТАТУСНОМУ РЕГИСТРУ ИЛИ АДРЕСНОМУ
 РЕГИСТРУ
 ОБЩЕЙ
 ПАМЯТИ, А ТАКЖЕ
 К АСТРОНОМИЧЕСКИМ ЧАСАМ И ТАЙМЕРУ
 АСТРОНОМИЧЕСКОГО ВРЕМЕНИ.
#НА #НА #ВС8 _
#А0 #Ц 3.3.1._МАГНИТНАЯ ЛЕНТА #А0
#НА НАИБОЛЕЕ ЦЕЛЕСООБРАЗНО
 В ПРОЦЕССОРЕ - ЭМУЛЯТОРЕ ПРИМЕНЯТЬ
 ЛЕНТЫ С @Е@С_-_ФОРМАТОМ ЗАПИСИ,
 РАБОТАЮЩИЕ НА ПЛОТНОСТИ 800-1600 БИТ/ДЮЙМ.
 ДЛЯ УПРАВЛЕНИЯ ЛЕНТАМИ ДОЛЖЕН ИСПОЛЬЗОВАТЬСЯ ЛЕНТОЧНЫЙ КОНТРОЛЛЕР
 ТИПА @С@М @Э@В@М.
#НА МИНИМАЛЬНЫЙ НАБОР ОПЕРАЦИЙ :
#ПЕРН _1._ЧТЕНИЕ БЛОКА
#ПЕРН _2._ЗАПИСЬ БЛОКА ЗАДАННОЙ ДЛИНЫ (В БАЙТАХ)
#ПЕРН _3._ДВИЖЕНИЕ ВПЕРЕД НА 1 БЛОК
#ПЕРН _4._ДВИЖЕНИЕ НАЗАД НА 1 БЛОК
#ПЕРН _5._ЗАПИСЬ МАРКЕРА
#ПЕРН _6._ПОИСК МАРКЕРА В ПРЯМОМ НАПРАВЛЕНИИ
#ПЕРН _7._ПОИСК МАРКЕРА В ОБРАТНОМ НАПРАВЛЕНИИ
#ПЕРН _8._СТИРАНИЕ (ПО СЧЕТЧИКУ БАЙТОВ)
#ПЕРН _9._ПЕРЕМОТКА
#ПЕРН 10._РАЗГРУЗКА
#НА РЕЖИМ #Б НМЛ БЭСМ-6 #М ПРЕДПОЛАГАЕТСЯ ИМИТИРОВАТЬ ПРОГРАММНО
 ПРИ НАЛИЧИИ СЛЕДУЮЩИХ ВОЗМОЖНОСТЕЙ КОНТРОЛЛЕРА :
#ПЕРН 1._ОБМЕН ДОЛЖЕН СОВЕРШАТЬСЯ В ЗАВИСИМОСТИ ОТ ЗАДАННОГО
 РЕЖИМА, КАК С ТЕГАМИ СЛОВ, ТАК И БЕЗ НИХ.
#ПЕРН 2._ДОЛЖЕН БЫТЬ РЕЖИМ ЧТЕНИЯ, КОГДА В ПАМЯТЬ ПОПАДАЕТ ВСЕ:
 @Ц@К@С, @П@К@С, БИТЫ ЧЕТНОСТИ КАЖДОГО БАЙТА (ИХ МОЖНО СОБИРАТЬ
 В ТЕГЕ СЛОВА!).
#ПЕРН 3._В ЗАКАЗЕ НА ОБМЕН КРОМЕ 20-РАЗРЯДНОГО ФИЗИЧЕСКОГО АДРЕСА
 НАЧАЛА ОБМЕННОЙ ПОРЦИИ МОЖНО ДОПОЛНИТЕЛЬНО УКАЗЫВАТЬ ЕЩЕ
 И НОМЕР ФИЗИЧЕСКОЙ СТРАНИЦЫ, ГДЕ ПРОДОЛЖАЕТСЯ МАССИВ ИНФОРМАЦИИ.
#ПЕРН 4._ОКОНЧАНИЕ ОБМЕНА ПРОИСХОДИТ ПО КОНЦУ БЛОКА НА ЛЕНТЕ
 ЛИБО ПО ИСЧЕРПАНИЮ ЗАДАННОГО СЧЕТЧИКА БАЙТОВ.
#ПЕРН 5._НЕПРЕМЕННЫМ УСЛОВИЕМ ДОЛЖНО БЫТЬ НАЛИЧИЕ СЧЕТЧИКА
 ПРОЧИТАННЫХ БАЙТОВ И ПРИЗНАКА, ЧТО СЧИТАН МАРКЕР.
 РЕЖИМА ЧТЕНИЯ С НАЛОЖЕНИЕМ ЗДЕСЬ НЕ ПОТРЕБУЕТСЯ.
#НА #ВС8 _
#А0 #Ц 3.3.2._МАГНИТНЫЙ ДИСК (@Н@М@Д)
#НА
#А0 #Ц СЛУЖЕБНАЯ ИНФОРМАЦИЯ НА ДИСКЕ:
#ПЕРН 1._РЕГИСТР НОМЕРА МОДУЛЯ;
#ПЕРН 2._РЕГИСТР АДРЕСА СЛУЖЕБНЫХ СЛОВ;
#ПЕРН 3._РЕГИСТР НОМЕРА ФИЗИЧЕСКОЙ СТРАНИЦЫ
 С ИНФОРМАЦИЕЙ;
#ПЕРН 4._РЕГИСТРЫ МОНОПОЛИЗАЦИИ (ПО ЧИСЛУ МОДУЛЕЙ),
 ГДЕ ЗАПИСЫВАЕТСЯ НОМЕР ПРОЦЕССА И НОМЕР ПРОЦЕССОРА,
 ЗАХВАТИВШЕГО ДИСК;
#ПЕРН 5._КОМАНДНЫЙ РЕГИСТР КОНТРОЛЛЕРА;
#ПЕРН 6._РЕГИСТР СОСТОЯНИЯ КОНТРОЛЛЕРА.
#НА ЗАМЕЧАНИЕ: РЕГИСТРЫ НОМЕРА ФИЗИЧЕСКОЙ СТРАНИЦЫ,
 НОМЕРА МОДУЛЯ, АДРЕСА СЛУЖЕБНЫХ СЛОВ И МОНОПОЛИЗАЦИИ
 НАХОДЯТСЯ НА ОДНОЙ СТРАНИЦЕ, КОМАНДНЫЙ РЕГИСТР И
 РЕГИСТР СОСТОЯНИЯ - НА ДРУГОЙ.
#НА #ВС7 _
#А0 #Ц  КОМАНДНЫЙ РЕГИСТР КОНТРОЛЛЕРА СОДЕРЖИТ:
#НА
#А3 -_КОМАНДУ;
#А3 -_АДРЕС ПО ДИСКУ;
#А3 -_ПРИЗНАК ЗАПУСКА ОБМЕНА;
#А3 -_ПРИЗНАК ОБМЕНА С ТЕГОМ;
#А3 -_ПРИЗНАК РАЗРЕШЕНИЯ ПРЕРЫВАНИЯ ПО ИЗМЕНЕНИЮ
#А5 ГОТОВНОСТИ (СТОИТ ЛИ ДИСК, ЕСТЬ ЛИ ПИТАНИЕ);
#А3 -_ПРИЗНАК РАЗРЕШЕНИЯ ПРЕРЫВАНИЯ ПО КОНЦУ ОБМЕНА.
#НА #ВС7 _
#А0 #Ц РЕГИСТР СОСТОЯНИЯ КОНТРОЛЛЕРА СОДЕРЖИТ:
#НА _
#А3 -_ТИП ОШИБКИ;
#А3 -_ТЕКУЩУЮ КОМАНДУ;
#А3 -_АДРЕС ЗАМЕНЯЮЩЕЙ ДОРОЖКИ;
#А3 -_ПРИЗНАК ЗАМЕНЫ ДОРОЖЕК;
#А3 -_ПРИЗНАК ОКОНЧАНИЯ ОПЕРАЦИИ;
#А3 -_ТЕКУЩИЙ АДРЕС ПО ДИСКУ.
#НА #ВС7 _
#А0 #Ц ТИПЫ ОШИБОК:
#НА
#А3 -_НЕТ ПИТАНИЯ;
#А3 -_НЕТ ДИСКА;
#А3 -_НЕТ ГОТОВНОСТИ;
#А3 -_ОШИБКА В ДОРОЖКЕ;
#А3 -_НЕТ ЦИЛИНДРА;
#А3 -_ПОПЫТКА ПОВТОРНОГО ОБМЕНА;
#А3 -_НЕПРАВИЛЬНЫЙ ЗАКАЗ ОБМЕНА;
#НА #ВС6 _
#А0 #Ц КОМАНДЫ:
#НА
#А3 -_ПОДВОД #Б (SЕЕК); #М _
#А3 -_УСТАНОВКА ГОЛОВОК НА НУЛЕВОЙ ЦИЛИНДР ИЛИ
#А5 КАЛИБРОВКА #Б (CALIBR); #М _
#А3 -_ЧТЕНИЕ #Б (READ); #М _
#А3 -_ЗАПИСЬ #Б (WRITE); #М _
#А3 -_СРАВНЕНИЕ С ПАМЯТЬЮ #Б (VERIFY); #М _
#А3 -_ФОРМАТИРОВАНИЕ ИЛИ РАЗМЕТКА (ЗАПИСЬ ЗАГОЛОВКОВ
#А5 БЕЗ ПОИСКА) #Б (FORMAT); #М _
#А3 -_УСТАНОВКА И СНЯТИЕ МОНОПОЛИЗАЦИИ ОТДЕЛЬНОГО
#А5 МОДУЛЯ #Б (MONOPOL) #М _
#А3 -_КОМАНДА СБРОСА С ЗАДЕРЖКОЙ НА ОДИН ОБМЕН.
#А5 ОНА НЕ ДОЛЖНА ВЛИЯТЬ НА ТЕКУЩИЙ ОБМЕН В ТЕЧЕНИЕ
#А5 ДОСТАТОЧНО БОЛЬШОГО ВРЕМЕНИ.
#НА #НА #Б #ВС8 _
#А0 #Ц 3.4._ПУЛЬТ_-_ПРОЦЕССОР
#НА
 ПУЛЬТОВОЙ ПРОЦЕССОР ПРЕДСТАВЛЯЕТ ИЗ СЕБЯ
 ПРОГРАММИРУЕМЫЙ ТЕРМИНАЛ С СОБСТВЕННОЙ ПАМЯТЬЮ,
 ВОЗМОЖНОСТЬЮ ДОСТУПА К ОСНОВНОЙ ПАМЯТИ
 И КО ВСЕМ РЕГИСТРАМ ЦЕНТРАЛЬНОГО ПРОЦЕССОРА.
 ПУЛЬТОВОЙ ПРОЦЕССОР ВЫПОЛНЯЕТ СЛЕДУЮЩИЕ ФУНКЦИИ:
#ПЕРН 1._ЗАГРУЗКА ПАМЯТИ МИКРОПРОГРАММ @Ц@П.
#ПЕРН 2._ИМИТАЦИЯ ИНЖЕНЕРНОГО ПУЛЬТА МАШИНЫ:
 СЧИТЫВАНИЕ И ЗАПИСЬ СОДЕРЖИМОГО РЕГИСТРОВ @Ц@П,
 ЗАПУСК МИКРОПРОГРАММННЫХ ТЕСТОВ.
#ПЕРН 3._ВВОД ДВОИЧНЫХ ПРОГРАММ В ОБЩУЮ ПАМЯТЬ.
#ПЕРН 4._ЗАПУСК ДИСПЕТЧЕРА ИЛИ ТЕСТОВ НА @Ц@П.
#ПЕРН 5._"ПУЛЬТОВАЯ" ОТЛАДКА ПРОГРАММ В @Ц@П:
 ПОШАГОВОЕ ВЫПОЛНЕНИЕ КОМАНД,
 ОСТАНОВ ПО АДРЕСУ.
#ПЕРН 6._ОБСЛУЖИВАНИЕ ОПЕРАТОРСКОГО ТЕРМИНАЛА.
#НА ПУЛЬТОВОЙ ПРОЦЕССОР МОЖЕТ ПРЕРЫВАТЬ @Ц@П
 ИЛИ ПРИОСТАНАВЛИВАТЬ ЕГО РАБОТУ.
 В СВОЮ ОЧЕРЕДЬ, ДЕЯТЕЛЬНОСТЬ САМОГО @П@П МОЖЕТ БЫТЬ
 ПРЕРВАНА ПО ОДНОЙ ИЗ СЛЕДУЮЩИХ ПРИЧИН :
#ПЕРН 1._ПО ЗАПРОСУ ОТ @Ц@П;
#ПЕРН 2._ПО АВАРИИ В @Ц@П;
#ПЕРН 3._ПО СБОЮ В ПАМЯТИ;
#ПЕРН 4._ПО ИНИЦИАТИВЕ ОПЕРАТОРА.
#НА В СВЯЗИ С РАЗНОРОДНОСТЬЮ ИСПОЛНЯЕМЫХ
 ФУНКЦИЙ,
 ОБМЕН ИНФОРМАЦИЕЙ @П@П С
 РАЗЛИЧНЫМИ УЗЛАМИ МАШИНЫ
 ОСУЩЕСТВЛЯЕТСЯ 2 СПОСОБАМИ:
#ПЕРН 1.ЧЕРЕЗ ПОСЛЕДОВАТЕЛЬНУЮ
 ЛИНИЮ СВЯЗИ - С ЦЕНТРАЛЬНЫМИ ПРОЦЕССОРАМИ
 (ЕСЛИ ИХ НЕСКОЛЬКО) ДЛЯ ДОСТУПА
 К РЕГИСТРАМ И ПАМЯТИ @Ц@П, ПАМЯТИ
 МИКРОПРОГРАММ, ДЛЯ ОРГАНИЗАЦИИ ПУЛЬТОВОГО ОСТАНОВА;
#ПЕРН 2.ЧЕРЕЗ ОБЩУЮ ШИНУ ДАННЫХ - ДЛЯ
 ОБМЕНА С ОБЩЕЙ ПАМЯТЬЮ И ВНЕШНИМИ
 УСТРОЙСТВАМИ, ПОДКЛЮЧЕННЫМИ К ОБЩЕЙ ШИНЕ.
#НА ДЛЯ РЕАЛИЗАЦИИ ФУНКЦИЙ ОПЕРАТОРСКОГО
 ТЕРМИНАЛА
 ОБМЕН ИНФОРМАЦИЕЙ МЕЖДУ @П@П И СИСТЕМОЙ
 ПРЕДПОЛАГАЕТСЯ ОСУЩЕСТВЛЯТЬ СЛЕДУЮЩИМ ОБРАЗОМ.
 СИСТЕМА, СФОРМИРОВАВ СООБЩЕНИЕ ПО
 ИЗВЕСТНОМУ АДРЕСУ @О@З@У, ПОСЫЛАЕТ
 ЗАПРОС @П@П, КОТОРЫЙ, ПОЛУЧИВ ЗАПРОС И ЗНАЯ АДРЕС,
 ПРИНИМАЕТ СООБЩЕНИЕ.
 АНАЛОГИЧНО НАОБОРОТ.
#А0 #ВС6 _
#А0 #Ц #Б АДРЕСА _В_У_ В ПУЛЬТОВОМ ПРОЦЕССОРЕ: #М
#НА FFFF_FFFC_-_РЕГИСТР МАСКИ ПРЕРЫВАНИЙ ОТ @П@П (ТОЛЬКО ЗАПИСЬ)
#НА FFFF_FFFB_-_ТАЙМЕР АСТРОНОМИЧЕСКОГО ВРЕМЕНИ (РГ.R@G3, 64Р.)
#НА FFFF_FFFA_-_РЕГИСТР ОБМЕНА С @П@П (РГ.R@G2, 64Р.)
#НА FFFF_FFF9_-_РЕГИСТР ОБМЕНА С @П@П (РГ.R@G1, 64Р.)
#НА FFFF_FFF8_-_ЧАСЫ АСТРОНОМИЧЕСКОГО ВРЕМЕНИ (РГ.R@G0, 64Р.)
#НА FFFF_0000_:_FFFF_07FF_-_ПАМЯТЬ ДВОЙНОГО ДОСТУПА В @П@П, 72Р.
#НА #НА #Б #ВС7 _
#А0 #Ц 3.5._ОПИСАНИЕ ОБЩЕЙ ШИНЫ
#НА ОБМЕН ИНФОРМАЦИЕЙ МЕЖДУ БЛОКАМИ @Э@В@М
 (ПРОЦЕССОР, ПУЛЬТОВОЙ ПРОЦЕССОР, ОБЩАЯ ПАМЯТЬ, КОНТРОЛЛЕРЫ
 ВНЕШНИХ УСТРОЙСТВ) ОСУЩЕСТВЛЯЕТСЯ ЧЕРЕЗ
 ОБЩУЮ ШИНУ АСИНХРОННО-СИНХРОННОГО ТИПА (ОБМЕН
 ИНФОРМАЦИЕЙ МЕЖДУ ПУЛЬТОВЫМ
 ПРОЦЕССОРОМ И ЦЕНТРАЛЬНЫМИ
 МОЖЕТ ПОИСХОДИТЬ ТАКЖЕ ПО
 ПОСЛЕДОВАТЕЛЬНОЙ ЛИНИИ СВЯЗИ).
 ВСЕ БЛОКИ @Э@В@М МОГУТ БЫТЬ КАК ВЕДУЩИМИ,
 ТАК И ВЕДОМЫМИ, КРОМЕ БЛОКА ОБЩЕЙ ПАМЯТИ,
 КОТОРЫЙ ВСЕГДА ВЕДОМЫЙ.
 АСИНХРОННО-СИНХРОННЫЙ ТИП ОБМЕНА ПОЗВОЛЯЕТ ЛЕГКО СВЯЗЫВАТЬ
 БЛОКИ С РАЗНЫМ БЫСТРОДЕЙСТВИЕМ ПРИ ЗАТРАТЕ
 МИНИМАЛЬНЫХ АППАРАТНЫХ СРЕДСТВ ДЛЯ ВЫХОДА
 НА ШИНУ. АСИНХРОНИЗМ ОБМЕНА ПОДДЕРЖИВАЕТСЯ
 СИГНАЛАМИ @B@R@Q (ЗАПРОС ШИНЫ),
 @B@U@S@Y (ШИНА ЗАНЯТА), #Б BRDC, BWRC, BRMWC #М
 (КОМАНДЫ ЧТЕНИЯ, ЗАПИСИ, ЧТЕНИЯ-МОДИФИКАЦИИ-ЗАПИСИ) И
 @А@С@К (ПОДТВЕРЖДЕНИЕ ОБМЕНА), ДЛИТЕЛЬНОСТЬ
 КОТОРЫХ МОЖЕТ ДИСКРЕТНО ИЗМЕНЯТЬСЯ НА ОПРЕДЕЛЕННОЕ
 ЧИСЛО ПЕРИОДОВ СИНХРОСИГНАЛА ШИНЫ @B@C@L@K (СМ.
 СИГНАЛЫ ОБЩЕЙ ШИНЫ).
#НА #ВС6 _
#А0 #Ц 3.5.1._ЗАХВАТ ШИНЫ
#НА ЗАХВАТ ШИНЫ ОСУЩЕСТВЛЯЕТСЯ СПЕЦИАЛЬНЫМ
 БЛОКОМ - АРБИТРОМ.
 ИЗВЕСТНЫ МНОГИЕ ВАРИАНТЫ СХЕМ АРБИТРАЖА ОБЩЕЙ ШИНЫ.
 ЭТО ПОСЛЕДОВАТЕЛЬНЫЙ, ПАРАЛЛЕЛЬНЫЙ, ДЕЦЕНТРАЛИЗОВАННЫЙ
 С ЖЕСТКИМ ПРИОРИТЕТОМ, ДЕМОКРАТИЧНЫЙ ДЕЦЕНТРАЛИЗОВАННЫЙ
 И ДРУГИЕ АРБИТРЫ. КАЖДЫЙ СПОСОБ ИМЕЕТ
 СВОИ ДОСТОИНСТВА И НЕДОСТАТКИ.
 В ДАННОЙ @Э@В@М РЕАЛИЗОВАН ДЕЦЕНТРАЛИЗОВАННЫЙ АРБИТРАЖ.
 ОСНОВНАЯ ИДЕЯ АРБИТРАЖА ЗАКЛЮЧАЕТСЯ В СЛЕДУЮЩЕМ.
 ЕСЛИ ШИНА СВОБОДНА (СИГНАЛ @B@U@S@Y ВЫСОКОГО УРОВНЯ),
 ТО КАЖДЫЙ ИЗ БЛОКОВ, ТРЕБУЮЩИХ ОБЩУЮ ШИНУ, ВЫДАЕТ СИГНАЛЫ
 #Б BRQ0:BRQ7 #М С КОДОМ СВОЕГО ПРИОРИТЕТА И
 ОДНОВРЕМЕННО СЧИТЫВАЕТ КОД ПРИОРИТЕТА,
 УСТАНОВИВШИЙСЯ НА ШИНЕ. ЕСЛИ КОД ПРИОРИТЕТА,
 СЧИТАННЫЙ С ШИНЫ, РАВЕН КОДУ СОБСТВЕННОГО
 ПРИОРИТЕТА, ТО БЛОК ЗАХВАТЫВАЕТ ШИНУ,
 В ПРОТИВНОМ СЛУЧАЕ ЖДЕТ СЛЕДУЮЩЕГО ЦИКЛА ЗАХВАТА.
 БЛОК, ПОЛУЧИВШИЙ ШИНУ, УСТАНАВЛИВАЕТ
 СИГНАЛ @B@U@S@Y И НАЧИНАЕТ ОБМЕН.
 ПРИ ПОЯВЛЕНИИ СИГНАЛА @А@С@К ОБМЕН ЗАКАНЧИВАЕТСЯ
 И ШИНА ОТПУСКАЕТСЯ. ЭТО ТАК НАЗЫВАЕМЫЙ ОДНОАКТНЫЙ ОБМЕН.
 В СЛУЧАЯХ ЭКСТРЕННОЙ ПЕРЕДАЧИ ИНФОРМАЦИИ БЛОКУ НЕОБХОДИМО
 УСТАНОВИТЬ СИГНАЛ @B@T@R (БЛОЧНАЯ ПЕРЕДАЧА),
 ЗАПРЕЩАЮЩИЙ СБРОС @B@U@S@Y НА ВРЕМЯ УДЕРЖАНИЯ
 СИГНАЛА @B@T@R.
 КОДЫ ПРИОРИТЕТОВ @B@R@Q0:@B@R@Q7 НА ОБЩЕЙ ШИНЕ
 ЛОГИЧЕСКИ СУММИРУЮТСЯ (ПРОВОДНОЕ @И@Л@И) И ИМЕЮТ
 СЛЕДУЮЩИЙ ВИД:
#А0 _
#А0 0___0000_0000_-_САМЫЙ ВЫСОКИЙ ПРИОРИТЕТ
#А0 1___0000_0001__________(СИГНАЛ АКТИВНЫЙ НИЗКИЙ)
#А0 2___0000_0011
#А0 ._._._._._._.
#А0 6___0111_1111
#А0 7___1111_1111_-_САМЫЙ НИЗКИЙ ПРИОРИТЕТ
#НА НАПРИМЕР, КОД ЛОГИЧЕСКОЙ СУММЫ 1 И 6 ПРИОРИТЕТОВ
 РАВЕН КОДУ 1 ПРИОРИТЕТА.
 КОД ПРИОРИТЕТА УСТАНАВЛИВАЕТСЯ С ПОМОЩЬЮ
 ПЕРЕКЛЮЧАТЕЛЯ, РАСПОЛОЖЕННОГО НА ПЛАТЕ.
#НА #ВС7 _
#А0 #Ц 3.5.2._ПРОЦЕСС ОБМЕНА
#НА С ЦЕЛЬЮ УМЕНЬШЕНИЯ КОЛИЧЕСТВА ПРОВОДНИКОВ
 ОБЩЕЙ ШИНЫ 20-РАЗРЯДНАЯ АДРЕСНАЯ ШИНА (@А0:@А19)
 СОВМЕЩЕНА С ШИНОЙ ДАННЫХ, ПОЭТОМУ
 ПРОЦЕСС ОБМЕНА ПРОИСХОДИТ В 2 ФАЗЫ:
 ФАЗЫ ПЕРЕДАЧИ АДРЕСА И ФАЗЫ ПЕРЕДАЧИ ДАННЫХ.
 ФАЗА ПЕРЕДАЧИ АДРЕСА СОПРОВОЖДАЕТСЯ СИГНАЛОМ
 @A@S@T@B (СТРОБ АДРЕСА).
 НАПРАВЛЕНИЕ ПЕРЕДАЧИ ДАННЫХ ОПРЕДЕЛЯЮТ СИГНАЛЫ
 #Б BRDC &И BWRC. #М @СИГНАЛ ЧТЕНИЕ-МОДИФИКАЦИЯ-ЗАПИСЬ
 #Б (BRMWC) #М ИСПОЛЬЗУЕТСЯ ЛИШЬ ПРИ ОБРАЩЕНИИ К
 СЕМАФОРНОЙ ЯЧЕЙКЕ ОБЩЕЙ ПАМЯТИ. ЭТИ СИГНАЛЫ
 ВЫДАЕТ ВЕДУЩИЙ БЛОК, Т.&Е. &БЛОК,
 ИНИЦИИРУЮЩИЙ ОБМЕН. КОНЕЦ БЛАГОПОЛУЧНОГО
 СЧИТЫВАНИЯ ИЛИ ЗАПИСИ ИНФОРМАЦИИ ПОДТВЕРЖДАЕТ
 ВЕДОМЫЙ БЛОК СИГНАЛОМ @А@С@К,
 ПОСЛЕ ЧЕГО ВЕДУЩИЙ БЛОК ДЕЗАКТИВИРУЕТ ОБМЕН.
#НА ПРИ ОБРАЩЕНИИ К БЛОКУ ОБЩЕЙ ПАМЯТИ ВОЗМОЖНЫ
 СЛЕДУЮЩИЕ НЕНОРМАЛЬНЫЕ СИТУАЦИИ:
#ПЕРН 1._ЗАПИСЬ ДАННЫХ В ВЫБРАННУЮ ЯЧЕЙКУ @О@З@У
 ЗАПРЕЩЕНА;
#ПЕРН 2._БЛОК КОРРЕКЦИИ ОШИБОК (ГЕНЕРАТОР КОДА @ХЕММИНГА)
 ОБНАРУЖИЛ ДВОЙНУЮ ИЛИ МНОГОКРАТНУЮ ОШИБКУ;
#ПЕРН 3._ОБРАЩЕНИЕ К ФИЗИЧЕСКИ НЕСУЩЕСТВУЮЩЕЙ
 МАТРИЦЕ ПАМЯТИ.
#НА ДЛЯ ПРИВЯЗКИ ТАКИХ СЛУЧАЕВ К КОНКРЕТНОМУ АКТИВНОМУ
 ВЕДУЩЕМУ БЛОКУ КАЖДАЯ СИТУАЦИЯ СОПРОВОЖДАЕТСЯ СВОИМ СИГНАЛОМ
 #Б (PWRI, DERI, AMBI) #М НА ОБЩЕЙ ШИНЕ,
 КОТОРЫЕ ФИКСИРУЮТСЯ НА ТРИГГЕРАХ СХЕМЫ-АРБИТРА
 ЭТОГО БЛОКА ПЕРЕДНИМ ФРОНТОМ СИГНАЛА @А@С@К.
#НА #ВС8 _
#А0 #Ц 3.5.3._ОБРАБОТКА ПРЕРЫВАНИЙ
#НА ДЛЯ ЭКОНОМИИ ПРОВОДНИКОВ ОБЩЕЙ ШИНЫ ПРЕРЫВАНИЯ ОТ
 КОНТРОЛЛЕРОВ ВНЕШНИХ УСТРОЙСТВ ТАКЖЕ ПЕРЕДАЮТСЯ ПО ШИНЕ
 ДАННЫХ (@D0:@D63).
 ВСЕ ПРЕРЫВАНИЯ КОНКРЕТНОГО КОНТРОЛЛЕРА
 ВНЕШНЕГО УСТРОЙСТВА
 ЛОГИЧЕСКИ СУММИРУЮТСЯ И ПОСТУПАЮТ НА ШИНУ @I@R@Q
 (ЗАПРОС ПРЕРЫВАНИЯ), НА КОТОРОЙ МОГУТ ТАКЖЕ СУММИРОВАТЬСЯ
 (ПРОВОДНОЕ @И@Л@И) ЗАПРОСЫ НА ПРЕРЫВАНИЕ И ОТ ДРУГИХ
 КОНТРОЛЛЕРОВ.
 РЕАГИРУЯ НА СИГНАЛ @I@R@Q,
 ПРОЦЕССОР ВЫДАЕТ, ПРЕДВАРИТЕЛЬНО ЗАХВАТИВ
 ОБЩУЮ ШИНУ, СИГНАЛ @I@N@T@A (ПОДТВЕРЖДЕНИЕ
 ПРЕРЫВАНИЯ), КОТОРЫЙ СОВМЕСТНО С @B@R@D@C
 ОТКРЫВАЕТ ШИННЫЕ
 ФОРМИРОВАТЕЛИ ДЛЯ ВЫДАЧИ АКТИВНЫХ ПРЕРЫВАНИЙ НА
 ШИНУ ДАННЫХ.
 ДЛЯ СБРОСА АКТИВНЫХ ПРЕРЫВАНИЙ ОТ ОДНОГО ИЛИ
 НЕСКОЛЬКИХ КОНТРОЛЛЕРОВ ОДНОВРЕМЕННО ПРОЦЕССОР
 ПРОИЗВОДИТ ВЫДАЧУ ПРИНЯТЫХ ПРЕРЫВАНИЙ НА ШИНУ ДАННЫХ,
 СОПРОВОЖДАЯ ИХ СИГНАЛАМИ #Б INTA &И BWRC.#М _
#НА #ВС8 _
#А0 #Ц 3.5.4._СПЕЦИАЛЬНЫЕ СИГНАЛЫ ОБЩЕЙ ШИНЫ
#НА @I@N@I@T - ОБЩИЙ СБРОС СИСТЕМЫ. ЭТИМ
 СИГНАЛОМ @Э@В@М ПРИВОДИТСЯ В НАЧАЛЬНОЕ
 СОСТОЯНИЕ ПОСЛЕ ВКЛЮЧЕНИЯ ПИТАНИЯ,
 ФАТАЛЬНЫХ ОШИБОК И ПР.
#ПЕРН @U@C@M@W - БЛОКИРОВКА ПРОВЕРКИ ТЕГА ПРИ
 ЗАПИСИ. БЛОКИРУЕТ ПРЕРЫВАНИЕ ОТ @О@З@У
 "ЗАПРЕЩЕННАЯ ЗАПИСЬ" (@P@W@R@I) И
 РАЗРЕШАЕТ ЗАПИСЬ В ЯЧЕЙКУ ПАМЯТИ ДАЖЕ В ТОМ
 СЛУЧАЕ, ЕСЛИ УСТАНОВЛЕН БИТ ТЕГА "ЗАПРЕЩЕННАЯ ЗАПИСЬ".
#ПЕРН #Б BCLK &И /BCLK - #М ПАРАФАЗНЫЙ СИГНАЛ
 СИНХРОСЕРИИ ОБЩЕЙ ШИНЫ. ЧАСТОТА СИГНАЛА
 МЕНЬШЕ ИЛИ РАВНА 10 МГЦ. ТАК КАК ЭТО САМЫЙ ВЫСОКОЧАСТОТНЫЙ
 СИГНАЛ ОБЩЕЙ ШИНЫ, ДЛЯ УМЕНЬШЕНИЯ ПЕРЕКРЕСТНЫХ
 ПОМЕХ С ДРУГИМИ ШИНАМИ ОН ВЫДАЕТСЯ В ВИДЕ ПАРАФАЗНОГО ТОКА.
 НАГРУЗКА НА КОНЦАХ ШИН @B@C@L@K - 50 ОМ. ВОЗМОЖНО ИСПОЛЬЗОВАНИЕ
 @И@С ПРИЕМНИКА И ПЕРЕДАТЧИКА ТИПА @К170@У@П2 И @К170@А@П2.
#НА #ВС8 _
#А0 #Ц 3.5.5._СИГНАЛЫ ОБЩЕЙ ШИНЫ
#ПЕРН 1.@A@D0:@A@D19 (TS) - АДРЕС, ДАННЫЕ *)
#ПЕРН 2.@D20:@D63 (TS) - ДАННЫЕ *)
#ПЕРН 3./@B@R@Q0:/@B@R@Q7 (ОК) - ЗАПРОСЫ @О@Ш
#ПЕРН 4./@B@U@S@Y (ОК) - ШИНА ЗАНЯТА
#ПЕРН 5./@А@С@К (ОК) - ПОДТВЕРЖДЕНИЕ ОБМЕНА
#ПЕРН 6./@B@R@D@C (ОК) - КОМАНДА "ЧТЕНИЕ"
#ПЕРН 7./@B@W@R@C (ОК) - КОМАНДА "ЗАПИСЬ"
#ПЕРН 8./@B@R@M@W@C (ОК) - КОМАНДА "ЧТЕНИЕ-МОДИФИКАЦИЯ-ЗАПИСЬ"
#ПЕРН 9./@I@N@T@A (ОК) - ПОДТВЕРЖДЕНИЕ ПРЕРЫВАНИЯ
#ПЕРН 10./@I@R@Q (ОК) - ЗАПРОС ПРЕРЫВАНИЯ ОТ КОНТРОЛЛЕРОВ
 ВНЕШНИХ УСТРОЙСТВ
#ПЕРН 11./@S@E@R@I (ОК) - ПРЕРЫВАНИЕ ПУЛЬТОВОМУ
 ПРОЦЕССОРУ "ОДНОКРАТНАЯ ОШИБКА"
#ПЕРН 12./@P@W@R@I (ОК) - ПРЕРЫВАНИЕ "ЗАПРЕЩЕННАЯ ЗАПИСЬ" ОЗУ
#ПЕРН 13./@D@E@R@I (ОК) - ПРЕРЫВАНИЕ "МНОГОКРАТНАЯ ОШИБКА" ОЗУ
#ПЕРН 14./@A@M@B@I (ОК) - ПРЕРЫВАНИЕ "ОТСУТСТВУЮЩИЙ БЛОК ПАМЯТИ" ОЗУ
#ПЕРН 15./@B@T@R (ОК) - РЕЖИМ БЛОЧНОЙ ПЕРЕДАЧИ
#ПЕРН 16./@A@S@T@B (ОК) - СТРОБ АДРЕСА (ФАЗА ПЕРЕДАЧИ НА @О@Ш АДРЕСА)
#ПЕРН 17./@U@C@M@W (ОК) - БЛОКИРОВКА ПРОВЕРКИ ТЕГА ПРИ ЗАПИСИ
 (UNCONDITIONAL MEMORY WRITE)
#А0 (19 РАЗРЯД РЕГИСТРА РЕЖИМОВ - @Б@П@Т@З).
#ПЕРН 18./@I@N@I@T (ОК) - ИНИЦИАЛИЗАЦИЯ (ОБЩИЙ СБРОС СИСТЕМЫ)
#ПЕРН 19.@B@C@L@K - СИНХРОСЕРИЯ @О@Ш (ТОК)
#ПЕРН 20./@B@C@L@K -_____-__"__-
#ПЕРН 21./@Р@З@В0:@Р@З@В2 - РЕЗЕРВНЫЕ ШИНЫ
#ПЕРН 22.@Т0:@Т7 (TS) - РАЗРЯДЫ ТЕГА *)
#НА ПРИМЕЧАНИЕ. *) - ШИНЫ С ТРЕМЯ СОСТОЯНИЯМИ. ВСЕ ОСТАЛЬНЫЕ -
 С ВЫХОДОМ "ОТКРЫТЫЙ КОЛЛЕКТОР". СИМВОЛ "/" - УКАЗАТЕЛЬ
 СИГНАЛА НИЗКОГО АКТИВНОГО УРОВНЯ.
#НА #НА #ВС9 _
#Б #А0 #Ц 4._ФУНКЦИОНАЛЬНОЕ ОПИСАНИЕ ПРОЦЕССОРА_-_ЭМУЛЯТОРА
#НА #А0
#А0 #Ц 4.1._ФОРМИРОВАНИЕ ИСПОЛНИТЕЛЬНЫХ АДРЕСОВ #А0
#НА У КАЖДОЙ ПРОГРАММЫ, ИСПОЛНЯЮЩЕЙСЯ
 В МАШИНЕ, ИМЕЕТСЯ 15 ИНДЕКС-РЕГИСТРОВ ИЛИ МОДИФИКАТОРОВ @М,
 ПРЕДНАЗНАЧЕННЫХ ДЛЯ МОДИФИКАЦИИ АДРЕСА, УКАЗАННОГО В КОМАНДЕ.
 РАЗРЯДНОСТЬ ИНДЕКСНЫХ РЕГИСТРОВ - 32.
 МОДИФИКАЦИЯ ВЫПОЛНЯЕТСЯ СЛОЖЕНИЕМ СОДЕРЖИМОГО УКАЗАННОГО В КОМАНДЕ
 ИНДЕКС-РЕГИСТРА С АДРЕСНОЙ ЧАСТЬЮ КОМАНДЫ.
 В РЕЖИМЕ ЭМУЛЯЦИИ БЭСМ-6 (@Р@Э)
 ИЗ АДРЕСНОЙ ЧАСТИ КОМАНДЫ
 ИСПОЛЬЗУЮТСЯ
 МЛАДШИЕ 15 РАЗРЯДОВ, В НОВОМ РЕЖИМЕ - 20 РАЗРЯДОВ,
 20-ЫЙ РАЗРЯД АДРЕСНОЙ ЧАСТИ КОМАНДЫ
 ПЕРЕД МОДИФИКАЦИЕЙ РАЗМНОЖАЕТСЯ
 ДО 32 РАЗРЯДА.
#НА ИМЕЮТСЯ СПЕЦИАЛЬНЫЕ КОМАНДЫ @U@T@C И @W@T@C,
 ПОЗВОЛЯЮЩИЕ ОСУЩЕСТВЛЯТЬ МОДИФИКАЦИЮ АДРЕСА СЛЕДУЮЩЕЙ ЗА НИМИ
 КОМАНДЫ.
 В ЭТИХ СЛУЧАЯХ ДЛЯ МОДИФИКАЦИИ ИСПОЛЬЗУЮТСЯ СООТВЕТСТВЕННО
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС ИЛИ КОД 1-32 РАЗРЯДОВ СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ КОМАНД @U@T@C И @W@T@C, КОТОРЫЙ ЗАНОСИТСЯ В СПЕЦИАЛЬНЫЙ
 РЕГИСТР @С  С НОМЕРОМ 16.
 ОДНОВРЕМЕННО УСТАНАВЛИВАЕТСЯ ПРИЗНАК ИЗМЕНЕНИЯ АДРЕСА @П@И@А В
 РЕГИСТРЕ РЕЖИМОВ @Р@Р,
 ИСПОЛЬЗУЕМЫЙ В СЛЕДУЮЩЕЙ КОМАНДЕ.
#НА #ВС5 _
 ТАКИМ ОБРАЗОМ,
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС БОЛЬШИНСТВА КОМАНД (Т.&Н. &АДРЕС ТИПА @U)
 ЕСТЬ:
#НА #А0 #Ц #Б U_=_N_+_М_(ПИА=0)___ИЛИ___U_=_N_+_М_+_С_(ПИА=1)
#М _
#НА #ВС6 _ АДРЕС ТИПА @V ЕСТЬ:
#НА #А0 #Ц #Б V_=_N_(ПИА=0)___ИЛИ___V_=_N_+_С_(ПИА=1)
#НА ГДЕ @N - АДРЕСНАЯ ЧАСТЬ КОМАНДЫ, @С - ЗНАЧЕНИЕ 16
 ИНДЕКС-РЕГИСТРА.
#НА ЗНАЧЕНИЕ  16 РЕГИСТРА ДОБАВЛЯЕТСЯ К ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ ТОЛЬКО ПРИ @П@И@А, УСТАНОВЛЕННОМ В "1".
 ВСЕ КОМАНДЫ, КРОМЕ @U@T@C И @W@T@C, ГАСЯТ ЭТОТ ПРИЗНАК.
 С ПОМОЩЬЮ КОМАНД @U@T@C И @W@T@C МОЖЕТ
 ОСУЩЕСТВЛЯТЬСЯ МОДИФИКАЦИЯ ЛЮБОЙ КРАТНОСТИ.
#НА #НА
#Б МАГАЗИННОЕ ОБРАЩЕНИЕ.
#М В МАШИНЕ ОБЕСПЕЧЕНА ВОЗМОЖНОСТЬ
 АДРЕСАЦИИ К ЛЮБОМУ УЧАСТКУ ОПЕРАТИВНОЙ ПАМЯТИ
 ПО ПРИНЦИПУ #Б "МАГАЗИНА".#М
 ИНДЕКСНЫЙ РЕГИСТР 15 ЯВЛЯЕТСЯ СЧЕТЧИКОМ
 МАГАЗИНА И СОДЕРЖИТ АДРЕС ПЕРВОГО СВОБОДНОГО СЛОВА
 ЭТОЙ ОБЛАСТИ ПАМЯТИ. ПРИ ЗАПИСИ СОДЕРЖИМОГО
 СУММАТОРА В ПАМЯТЬ "МАГАЗИННЫМ СПОСОБОМ"
 ОНО ЗАНОСИТСЯ В ПЕРВОЕ СВОБОДНОЕ
 СЛОВО МАГАЗИНА, И СЧЕТЧИК МАГАЗИНА
 УВЕЛИЧИВАЕТСЯ НА 1. ПРИ МАГАЗИННОЙ ВЫБОРКЕ ИЗ ПАМЯТИ
 СЧЕТЧИК МАГАЗИНА УМЕНЬШАЕТСЯ НА 1, И СОДЕРЖИМОЕ
 СЛОВА С ПОЛУЧИВШИМСЯ АДРЕСОМ ВЫБИРАЕТСЯ
 НА СУММАТОР, А СООТВЕТСТВУЮЩЕЕ СЛОВО
 СТАНОВИТСЯ ДОСТУПНЫМ
 ДЛЯ ОЧЕРЕДНОЙ ЗАПИСИ В МАГАЗИН.
 ОБРАЩЕНИЕ К ПАМЯТИ "МАГАЗИННЫМ СПОСОБОМ"
 ВОЗМОЖНО ВО ВСЕХ КОМАНДАХ, ТРЕБУЮЩИХ
 ЗАПИСИ В ПАМЯТЬ ИЛИ ЧТЕНИЯ ИЗ ПАМЯТИ
  #Б ЦЕЛОГО СЛОВА, #М  ЕСЛИ
 В КОМАНДЕ В РАЗРЯДАХ НОМЕРА ИНДЕКС-РЕГИСТРА
 УКАЗАН 15-ЫЙ РЕГИСТР  И ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ
 (АДРЕС ТИПА @V)
 СОДЕРЖИТ НУЛЕВОЙ КОД.
 ИНАЧЕ
 ОБРАЩЕНИЕ К @О@З@У ПРОИСХОДИТ ПО
 ИСПОЛНИТЕЛЬНОМУ АДРЕСУ (ТИПА @U) БЕЗ ИЗМЕНЕНИЯ
 СЧЕТЧИКА МАГАЗИНА.
#НА КРОМЕ ТОГО, СУЩЕСТВУЮТ СПЕЦИАЛЬНЫЕ
 #Б МАГАЗИННЫЕ КОМАНДЫ, #М  ПРИ
 ВЫПОЛНЕНИИ КОТОРЫХ СОБСТВЕННО ОПЕРАЦИИ
 ПРЕДШЕСТВУЕТ ЗАПИСЬ В "МАГАЗИННУЮ ПАМЯТЬ"
 СОДЕРЖИМОГО СУММАТОРА (@X@T@S, @I@T@S),
 ИЛИ ОПЕРАЦИЯ СОПРОВОЖДАЕТСЯ ПОСЛЕДУЮЩИМ
 ЧТЕНИЕМ ИЗ "МАГАЗИННОЙ ПАМЯТИ" #Б (SТХ, STI, UZAS, UIAS). #М
 СОДЕРЖИМОЕ РАЗРЯДОВ НОМЕРА ИНДЕКС-РЕГИСТРА
 И АДРЕСНОЙ ЧАСТИ В ТАКОЙ КОМАНДЕ ОПРЕДЕЛЯЮТ
 АДРЕС САМОЙ ОПЕРАЦИИ И НЕ ВЛИЯЮТ НА
 ОБРАЩЕНИЕ К "МАГАЗИНУ".
#НА #НА #ВС8 _
#А0 #Ц #Б 4.2._СТРУКТУРА ПАМЯТИ
#НА ПАМЯТЬ МАШИНЫ СОСТОИТ ИЗ 64-960К
 72-РАЗРЯДНЫХ СЛОВ
 (ЧАСТЬ 20-РАЗРЯДНОГО АДРЕСА
 ИСПОЛЬЗУЕТСЯ ДЛЯ ВНЕШНИХ
 УСТРОЙСТВ).
 НУМЕРАЦИЯ РАЗРЯДОВ В СЛОВЕ - СПРАВА НАЛЕВО.
#НА #ВС5 _
#А0 _72..65_64______............_________1
#А0 I------I------------------------------I
#А0 I__ТЕГ_I_____ИНФОРМАЦИОННАЯ_ЧАСТЬ_____I
#А0 I------I------------------------------I
#А0 #НА
 ИНФОРМАЦИОННАЯ ЧАСТЬ СЛОВА СОДЕРЖИТ ЛИБО ОДНО 64-РАЗРЯДНОЕ ЧИСЛО,
 ЛИБО ДВА 32-РАЗРЯДНЫХ ЦЕЛЫХ ЧИСЛА,
 ЛИБО 4 16-РАЗРЯДНЫХ ФРАГМЕНТА,
 ЛИБО 8 БАЙТОВ,
 ЛИБО 64 БИТА,
 ЛИБО ДВЕ КОМАНДЫ.
 РАЗРЯДНОСТЬ КОМАНДЫ: 32 - В НОВОМ РЕЖИМЕ, 24 - В РЕЖИМЕ ЭМУЛЯЦИИ
 #Б БЭСМ-6. #М
#НА #НА #ВС13 _
#А0 #Ц #Б 4.3._ПРЕДСТАВЛЕНИЕ ЧИСЕЛ
#НА #А0
#Ц 4.3.1. ПРЕДСТАВЛЕНИЕ ЧИСЛА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ. #А0
#НА
#А0 _64_63__...__54_53_52____........____1
#А0 I--I-----------I--I-------------------I
#А0 I__I__ПОРЯДОК__I__I_____МАНТИССА______I
#А0 I--I-----------I--I-------------------I
#А0 _:______________:
#А0 _:______________:
#А0 ЗНАК ПОРЯДКА___ЗНАК МАНТИССЫ
#НА
 ПОЛОЖИТЕЛЬНАЯ МАНТИССА ПРЕДСТАВЛЯЕТСЯ В ПРЯМОМ КОДЕ С "0" В
 РАЗРЯДЕ ЗНАКА.
 ОТРИЦАТЕЛЬНАЯ МАНТИССА ПРЕДСТАВЛЯЕТСЯ В ДОПОЛНИТЕЛЬНОМ КОДЕ С "1"
 В РАЗРЯДЕ ЗНАКА.
#НА ПОЛОЖИТЕЛЬНЫЙ ПОРЯДОК ПРЕДСТАВЛЯЕТСЯ В ПРЯМОМ КОДЕ
 С "1" В РАЗРЯДЕ ЗНАКА.
 ОТРИЦАТЕЛЬНЫЙ ПОРЯДОК - В ДОПОЛНИТЕЛЬНОМ КОДЕ С "0" В РАЗРЯДЕ ЗНАКА.
 ИНЫМИ СЛОВАМИ, ПОРЯДОК @Е ПРЕДСТАВЛЯЕТСЯ В 11 СТАРШИХ РАЗРЯДАХ
 СЛОВА КОДОМ _4000В_+_@Е.
#НА #ВС12 _
#А0 #Ц 4.3.2. ПРЕДСТАВЛЕНИЕ ЧИСЕЛ @Б@Э@С@М-6
#НА 48-РАЗРЯДНОЕ ЧИСЛО СТАРОЙ #Б БЭСМ-6 #М
 ПОЛУЧАЕТСЯ ИЗ ОБЩЕГО ПРЕДСТАВЛЕНИЯ УСЕЧЕНИЕМ СТАРШИХ 4 РАЗРЯДОВ
 ПОРЯДКА И МЛАДШИХ 12 РАЗРЯДОВ МАНТИССЫ:
#НА
#А0 _64_63..60_59_._54_53_52____....____13_12_..._1
#А0 I--I------I-------I--I----------------I--------I
#А0 IПOIXXXXXXI_РЯДОК_I__I____МАНТИССА____IXXXXXXXXI
#А0 I--I------I-------I--I----------------I--------I
#НА ТАКОЕ ПРЕДСТАВЛЕНИЕ ДАЕТ ВОЗМОЖНСТЬ:
#ПЕРН А). ПРОИЗВОДИТЬ АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ
 ОДИНАКОВО КАК В НОВОМ РЕЖИМЕ, ТАК И В РЕЖИМЕ ЭМУЛЯЦИИ #Б БЭСМ-6. #М
#ПЕРН Б). РАСШИРЯТЬ ДИАПАЗОН ПОРЯДКОВ И УВЕЛИЧИВАТЬ ТОЧНОСТЬ
 ВЫЧИСЛЕНИЙ
 В РЕЖИМЕ ЭМУЛЯЦИИ.
#НА "ЦЕЛЫЕ С ПОРЯДКОМ"  ЧИСЛА #Б БЭСМ-6 #М ИМЕЮТ 11-РАЗРЯДНЫЙ
 ПОРЯДОК 4120В И НУЛЕВОЙ КОД В 1-12 РАЗРЯДАХ МАНТИССЫ.
#НА ПЕРЕПОЛНЕНИЕ ПРИ ОПЕРАЦИЯХ НАД ЧИСЛАМИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
 МОЖЕТ БЫТЬ В ТОМ СЛУЧАЕ, ЕСЛИ ПОРЯДОК РЕЗУЛЬТАТА ОПЕРАЦИИ
 ПОСЛЕ НОРМАЛИЗАЦИИ ПОЛУЧАЕТСЯ БОЛЬШЕ 11 РАЗРЯДОВ.
 ПЕРЕПОЛНЕНИЕ МОЖЕТ БЫТЬ ПРИ ОПЕРАЦИЯХ СЛОЖЕНИЯ ИЛИ ВЫЧИТАНИЯ
 БОЛЬШИХ ЧИСЕЛ, ПРИ ДЕЛЕНИИ НА МАЛЕНЬКИЕ ЧИСЛА И "0" И ПРИ УМНОЖЕНИИ,
 ЕСЛИ РЕЗУЛЬТАТ ОПЕРАЦИИ 64-РАЗРЯДНЫЙ.
 ПРИ ПЕРЕПОЛНЕНИИ УСТАНАВЛИВАЕТСЯ В "1" ПРИЗНАК
 ПЕРЕПОЛНЕНИЯ @O@V@R, ДОСТУПНЫЙ  ДЛЯ ОПРОСА
 ИЗ ПРОГРАММЫ, И ПРОИСХОДИТ ВНУТРЕННЕЕ ПРЕРЫВАНИЕ,
 КОТОРОЕ МОЖЕТ БЫТЬ БЛОКИРОВАНО ПРИЗНАКОМ @Б@П@П В РЕГИСТРЕ
 РЕЖИМОВ @Р@Р @Ц@П.
#НА
#ВС10 _ #А0 #Ц 4.3.3. ЦЕЛЫЕ 64 И 32-РАЗРЯДНЫЕ ЧИСЛА.
#НА
#А0 ___32___31_30_....__1__________64___63_62_......_2_1_
#А0 _I----I--------------I_______I----I-----------------I
#А0 _IЗHAKI__Ч_И_С_Л_О___I_______IЗHAKI____Ч_И_С_Л_О____I
#А0 _I----I--------------I_______I----I-----------------I
#НА
 ПОЛОЖИТЕЛЬНЫЕ ЧИСЛА ПРЕДСТАВЛЯЮТСЯ В ПРЯМОМ КОДЕ С "0" ЗНАКА,
 ОТРИЦАТЕЛЬНЫЕ - В ДОПОЛНИТЕЛЬНОМ КОДЕ С "1" ЗНАКА.
 ДЛЯ ВЫПОЛНЕНИЯ АРИФМЕТИКИ С ТАКИМИ ЧИСЛАМИ ПРЕДПОЛАГАЮТСЯ
 ОТДЕЛЬНЫЕ НАБОРЫ ОПЕРАЦИЙ, РАБОТАЮЩИХ ТОЛЬКО В НОВОМ РЕЖИМЕ.
 В СЛУЧАЕ ПЕРЕПОЛНЕНИЯ УСТАНАВЛИВАЕТСЯ В "1" ПРИЗНАК @O@V@R,
 ДОСТУПНЫЙ ДЛЯ ОПРОСА ИЗ ПРОГРАММЫ.
 А ПРИ ПЕРЕНОСЕ ИЗ ЗНАКОВОГО РАЗРЯДА В ЛОГИЧЕСКИХ КОМАНДАХ -
 ПРИЗНАК ПЕРЕНОСА @С.
 ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#НА 32-РАЗРЯДНЫЕ ЧИСЛА РАЗМЕЩАЮТСЯ ПО 2 В СЛОВЕ.
 ОНИ МОГУТ ПРЯМО АДРЕСОВАТЬСЯ СПЕЦИАЛЬНЫМИ КОМАНДАМИ (В НОВОМ РЕЖИМЕ),
 ИСПОЛНИТЕЛЬНЫЕ АДРЕСА В КОТОРЫХ 21-РАЗРЯДНЫЕ (ЗА СЧЕТ
 ИНДЕКС-РЕГИСТРОВ).
 АНАЛОГИЧНО, В НОВОМ РЕЖИМЕ СУЩЕСТВУЮТ  КОМАНДЫ ДЛЯ РАБОТЫ
 С 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ, БАЙТАМИ И БИТАМИ.
 РАЗРЯДНОСТЬ ИСПОЛНИТЕЛЬНОГО АДРЕСА У ЭТИХ КОМАНД
 РАВНА СООТВЕТСТВЕННО 22,_23 ИЛИ 26.
#НА #НА #ВС7 _
#Ц #Б 4.4. ФОРМАТ КОМАНД #М #А0
#НА
#А0 #Ц 4.4.1. КОМАНДЫ НОВОГО РЕЖИМА
#НА КОМАНДЫ В ОБОИХ РЕЖИМАХ ОТЛИЧАЮТСЯ ОТ ЧИСЕЛ
 ЗНАЧЕНИЕМ ОДНОГО ИЗ БИТОВ ТЕГА.
 ЕЩЕ ОДИН БИТ В ТЕГЕ РАЗЛИЧАЕТ КОМАНДУ, РАБОТАЮЩУЮ В НОВОМ
 РЕЖИМЕ, ОТ КОМАНДЫ ЭМУЛЯТОРА #Б БЭСМ-6. #М
#НА В НОВОМ РЕЖИМЕ ДЛИНА КАЖДОЙ КОМАНДЫ - 32 БИТА.
 В ОДНОМ СЛОВЕ РАЗМЕЩАЕТСЯ 2 КОМАНДЫ.
 ФОМАТ КОМАНД ИМЕЕТ 2 СТРУКТЫРЫ:
#НА #А0 #ВС8 _  #Ц КОМАНДЫ ОСНОВНОГО ФОРМАТА:__________
#НА _
#А0 _32___...___29_28_..._21_20_______..._______1
#А0 I-------------I---------I--------------------I
#А0 I_МОДИФИКАТОР_I__К_О_П__I________АДРЕС_______I
#А0 I-------------I---------I--------------------I
#НА #А0 #ВС8 _ #Ц КОМАНДЫ ДОПОЛНИТЕЛЬНОГО ФОРМАТА:__________
#НА _
#А0 _32___...___29_28_..._21_20_..._13_12_...___1
#А0 I-------------I---------I---------I----------I
#А0 I_МОДИФИКАТОР_I___3F____I__К_О_П__I__АДРЕС___I
#А0 I-------------I---------I---------I----------I
#НА 20-Й РАЗРЯД АДРЕСА В КОМАНДЕ ОСНОВНОГО ФОРМАТА ЯВЛЯЕТСЯ ЗНАКОВЫМ.
 ПОЛОЖИТЕЛЬНЫЙ АДРЕС ПРЕДСТАВЛЯЕТСЯ В ПРЯМОМ КОДЕ С "0" ЗНАКА,
 ОТРИЦАТЕЛЬНЫЙ - В ДОПОЛНИТЕЛЬНОМ КОДЕ С "1" ЗНАКА.
 ПРЕДПОЛАГАЕТСЯ, ЧТО ПРОГРАММЫ ПОЛЬЗОВАТЕЛЕЙ РАСПОЛАГАЮТСЯ
 В ОБЛАСТИ ПОЛОЖИТЕЛЬНЫХ АДРЕСОВ, А ПРОГРАММЫ
 ОПЕРАЦИОННОЙ СИСТЕМЫ - В ОБЛАСТИ ОТРИЦАТЕЛЬНЫХ АДРЕСОВ.
#НА РАЗРЯДНОСТЬ ВСЕХ ИНДЕКСНЫХ РЕГИСТРОВ (МОДИФИКАТОРОВ) РАВНА 32.
 ПРИ УСТАНОВКЕ АДРЕСА НА ИНДЕКС-РЕГИСТР ЗНАК АДРЕСА (20-Й РАЗРЯД)
 РАЗМНОЖАЕТСЯ В 21-32 РАЗРЯДЫ ИНДЕКС-РЕГИСТРА.
 ПРЕДПОЛАГАЕТСЯ ИМЕТЬ ПОЛНЫЙ НАБОР ОПЕРАЦИЙ ЦЕЛОЧИСЛЕННОЙ
 АРИФМЕТИКИ НАД СОДЕРЖИМЫМ ИНДЕКС-РЕГИСТРОВ.
 КОМАНДЫ В НОВОМ РЕЖИМЕ РАБОТАЮТ С ПОЛНЫМИ 64-РАЗРЯДНЫМИ СЛОВАМИ,
 ЛИБО С 32-РАЗРЯДНЫМИ ПОЛУСЛОВАМИ, ЛИБО С 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ,
 ЛИБО С 8-РАЗРЯДНЫМИ БАЙТАМИ,
 ЛИБО С ОТДЕЛЬНЫМИ БИТАМИ СЛОВА.
#НА #НА #ВС6 _
#А0 #Ц РАЗНЫЕ ЗАМЕЧАНИЯ И ПРЕДЛОЖЕНИЯ : #А0
#ПЕРН А). СЛЕДУЕТ АККУРАТНО ПРОГРАММИРОВАТЬ МИКРОПРОГРАММЫ
 СЛОЖНЫХ КОМАНД (НАПРИМЕР, МАГАЗИННЫХ), ЧТОБЫ НЕ ДОПУСТИТЬ
 НЕОБРАТИМЫХ ИЗМЕНЕНИЙ РЕГИСТРОВ В СЛУЧАЕ ВНУТРЕННЕГО ПРЕРЫВАНИЯ.
#ПЕРН Б). В НОВОМ РЕЖИМЕ НЕ СТОИТ ГАСИТЬ @Р@М@Р БЕЗ ОСОБОЙ
 НЕОБХОДИМОСТИ, КАК ЭТО ДЕЛАЛОСЬ В БЭСМ-6.
#ПЕРН В). 14 РЕГИСТР ДОЛЖЕН СПАСАТЬСЯ ВМЕСТЕ СО ВСЕМИ, И ТОЛЬКО ПОТОМ
 ТУДА СЛЕДУЕТ ЗАПИСАТЬ ИСП.&АДРЕС ЭКСТРАКОДА.
 ПРИЗНАК ОСТАНОВА ПО ВНУТРЕННЕМУ
 ПРЕРЫВАНИЮ ПРИ ВХОДЕ В ЭКСТРАКОД НЕ НУЖЕН.
 ВОЗВРАТ ИЗ ЭКСТРАКОДА МОЖЕТ ПРОИЗВОДИТЬСЯ И НА ПРАВУЮ
 КОМАНДУ СЛОВА.
#ПЕРН Г). ОСОБОЕ ВНИМАНИЕ СЛЕДУЕТ ОБРАТИТЬ НА МЕХАНИЗМ
 ПЕРЕДАЧИ ПАРАМЕТРОВ ПОДПРОГРАММЕ ПРИ ПЕРЕХОДЕ К РЕЖИМУ ЭМУЛЯЦИИ
 И ОБРАТНО, Т.&К. &АДРЕСНАЯ И ИНДЕКСНАЯ ИНФОРМАЦИЯ НАХОДЯТСЯ В РАЗНЫХ
 РАЗРЯДАХ СЛОВА.
 НЕПЛОХИМ ВАРИАНТОМ МОЖЕТ БЫТЬ ОРГАНИЗАЦИЯ ПРЕРЫВАНИЯ ПРИ
 НЕСОВПАДЕНИИ 66 БИТА ТЕГА С ПРИЗНАКОМ @Р@Э В @Р@Р.
 ДОЛЖНО БЫТЬ ДВА ТАКИХ ПРЕРЫВАНИЯ - ОДНО ДЛЯ СУММАТОРА,
 ДРУГОЕ ДЛЯ ОПЕРАНДА.
 В ПРОГРАММЕ РЕАКЦИИ НА ПРЕРЫВАНИЕ МОЖНО ПРОИЗВЕСТИ
 НЕОБХОДИМЫЕ ПРЕОБРАЗОВАНИЯ ОПЕРАНДА ИЛИ СУММАТОРА
 И ДАЖЕ ЗАПИСАТЬ ОБРАТНО (С НОВЫМ ТЕГОМ!).
 ЗДЕСЬ ПРОБЛЕМОЙ МОЖЕТ СТАТЬ ПРОГРАММНОЕ РАСПОЗНАВАНИЕ
 АДРЕСНОЙ И ЧИСЛОВОЙ ИНФОРМАЦИИ.
#НА #ВС6 _
#А0 #Ц 4.4.2. КОМАНДЫ ЭМУЛЯТОРА #Б БЭСМ-6 #М #А0
#НА ДЛИНА КАЖДОЙ КОМАНДЫ - 24 БИТА.
 СТРУКТУРА КОМАНДЫ - ТАКАЯ ЖЕ, КАК У #Б БЭСМ-6. #М
 РАЗМЕЩАЮТСЯ 2 КОМАНДЫ В ОДНОМ 64-РАЗРЯДНОМ СЛОВЕ В ТЕХ ЖЕ
 ПОЗИЦИЯХ, ЧТО И ЧИСЛА:
#НА #ВС6 _
#А0 _64_63__60_59___...___37_36____..._____13_12____1
#А0 I--I------I-------------I----------------I-------I
#А0 IЛEIXXXXXXI_ВАЯ_КОМАНДА_I_ПРАВАЯ КОМАНДА_IXXXXXXXI
#А0 I--I------I-------------I----------------I-------I
#НА
 ЭТО РЕШЕНИЕ ПРОДИКТОВАНО ТЕМ, ЧТО МНОГИЕ ПРОГРАММЫ @Б@Э@С@М-6 ЗАНИМАЮТСЯ
 САМОМОДИФИКАЦИЕЙ. БОЛЕЕ ТОГО, ИНОГДА ЗАПИСЬ КОМАНД ПРОИЗВОДИТСЯ
 ОБЫЧНОЙ КОМАНДОЙ ЗАПИСИ С ПРЕДВАРИТЕЛЬНОЙ УСТАНОВКОЙ РЕЖИМА
 ЗАПИСИ КОМАНД.
#НА #ВС7 _
#А0 #Ц 4.4.2.1. АРИФМЕТИЧЕСКИЕ КОМАНДЫ ЭМУЛЯТОРА
#НА А). ВЫПОЛНЯЮТСЯ НАД ПОЛНОРАЗРЯДНЫМИ ЧИСЛАМИ.
 ПРИ ЭТОМ ВОЗМОЖЕН ВЫХОД ПОРЯДКА РЕЗУЛЬТАТА ЗА ПРЕДЕЛЫ
 ДИАПАЗОНА ЧИСЕЛ #Б БЭСМ-6. #М
 ПРИЗНАКОМ ЭТОГО СЛУЖИТ НЕСОВПАДЕНИЕ КОДА ХОТЯ БЫ В ОДНОМ
 ИЗ 63-60 РАЗРЯДОВ С ИНВЕРТИРОВАННЫМ КОДОМ ЗНАКА ПОРЯДКА.
 ПОЭТОМУ АППАРАТУРА ДОЛЖНА ОТСЛЕЖИВАТЬ ФАКТЫ УПОТРЕБЛЕНИЯ
 ТАКИХ ЧИСЕЛ В КАЧЕСТВЕ ОПЕРАНДОВ ЛОГИЧЕСКИХ КОМАНД И
 КОМАНД СДВИГОВ, ЧТОБЫ НЕ ДОПУСТИТЬ ВОЗМОЖНЫХ ПОТЕРЬ
 "СИЛЬНО ЗНАЧАЩИХ" РАЗРЯДОВ ПОРЯДКА ДЛЯ ПОСЛЕДУЮЩИХ
 АРИФМЕТИЧЕСКИХ ОПЕРАЦИЙ.
 ЭТО СЛЕЖЕНИЕ ВОЗЛАГАЕТСЯ НА АЛГОРИТМЫ ЛОГИЧЕСКИХ И СДВИГОВЫХ
 КОМАНД.
#НА Б). СЛЕДУЕТ ОСТАВИТЬ ВОЗМОЖНОСТЬ ПРЕРЫВАНИЯ
 ПО ПЕРЕПОЛНЕНИЮ ПРИ ВЫХОДЕ ПОРЯДКА РЕЗУЛЬТАТА
 ЗА ДИАПАЗОН ЧИСЕЛ  БЭСМ-6.
 СТАНДАРТНО ОНО ДОЛЖНО БЛОКИРОВАТЬСЯ ПРИЗНАКОМ @Б@Б@Ч  В @Р@Р.
 СЛЕДУЕТ ОСТАВИТЬ ДЛЯ ПОЛЬЗОВАТЕЛЯ ВОЗМОЖНОСТЬ СНЯТИЯ БЛОКИРОВКИ
 ( НО НЕ КОМАНДОЙ_,@N@T@R,_!!! )
 #НА В). ПРИ РАБОТЕ С БЛОКИРОВКОЙ НОРМАЛИЗАЦИИ СЛЕДУЕТ
 ГАСИТЬ МЛАДШИЕ 12 РАЗРЯДОВ МАНТИССЫ РЕЗУЛЬТАТА
 АРИФМЕТИЧЕСКИХ КОМАНД
 СЛОЖЕНИЯ И ВЫЧИТАНИЯ.
 КРОМЕ ТОГО, МОЖЕТ ПОТРЕБОВАТЬСЯ "ЧАСТИЧНАЯ НОРМАЛИЗАЦИЯ"
 ЦЕЛОГО, ИМЕЮЩЕГО ПОРЯДОК 4146В, Т.&Е. &ЧИСЛА, СФОРМИРОВАННОГО
 В НОВОМ РЕЖИМЕ, И ПОДАННОГО НА ВХОД ПОДПРОГРАММЕ, РАБОТАЮЩЕЙ
 В РЕЖИМЕ ЭМУЛЯТОРА.
#НА Г). ОСОБОЕ ВНИМАНИЕ СЛЕДУЕТ УДЕЛИТЬ РАБОТЕ С РЕГИСТРОМ МЛАДШИХ
 РАЗРЯДОВ.
 ПОСЛЕ ИСПОЛНЕНИЯ АРИФМЕТИЧЕСКИХ
 ОПЕРАЦИЙ 1-12 РАЗРЯДЫ СУММАТОРА
 КОПИРУЮТСЯ В СТАРШИЕ РАЗРЯДЫ МАНТИССЫ @Р@М@Р.
#НА #ВС6 _
#А0 #Ц 4.4.2.2. КОМАНДЫ ПЕРЕСЫЛОК
#НА ВСЕГДА РАБОТАЮТ
 С ПОЛНЫМИ СЛОВАМИ.
 ЧТО КАСАЕТСЯ ИНДЕКС-РЕГИСТРОВ, ТО В РЕЖИМЕ ЭМУЛЯТОРА
 СОДЕРЖИМОЕ 16:32 РАЗРЯДОВ ВСЕХ ИНДЕКС-РЕГИСТРОВ
 НЕ ДОЛЖНО ИЗМЕНЯТЬСЯ НИКАКИМИ КОМАНДАМИ.
#НА #ВС6 _
#А0 #Ц 4.4.2.3. УСЛОВНЫЕ ПЕРЕХОДЫ В РЕЖИМЕ ЭМУЛЯТОРА.
#НА "ДЫРЫ" В 64-РАЗРЯДНОМ СЛОВЕ ДОЛЖНЫ БЫТЬ "ПРОЗРАЧНЫ"
 ДЛЯ КОМАНД УСЛОВНЫХ ПЕРЕХОДОВ ПО СОДЕРЖИМОМУ СЛОВА.
 ИНЫМИ СЛОВАМИ, ЗНАЧЕНИЯ 1-12 И 60-63 РАЗРЯДОВ СЛОВА
 НЕ ОКАЗЫВАЮТ НИКАКОГО ВЛИЯНИЯ НА ФОРМИРОВАНИЕ ПРИЗНАКОВ,
 ПО КОТОРЫМ ОСУЩЕСТВЛЯЮТСЯ УСЛОВНЫЕ ПЕРЕХОДЫ
 В РЕЖИМЕ ЭМУЛЯТОРА.
 ТОЧНО ТАК ЖЕ НЕ ВЛИЯЮТ НА ВЫПОЛНЕНИЕ КОМАНД УСЛОВНЫХ
 ПЕРЕХОДОВ ПО ИНДЕКС-РЕГИСТРАМ ЗНАЧЕНИЯ 16:32
 РАЗРЯДОВ РЕГИСТРОВ.
#НА #ВС6 _
#А0 #Ц 4.4.2.4. ЛОГИЧЕСКИЕ И СДВИГОВЫЕ КОМАНДЫ.
#А0 #Ц ПРАВИЛА ИХ ВЫПОЛНЕНИЯ В РЕЖИМЕ ЭМУЛЯТОРА.
#НА А). ЕСЛИ 64 РАЗРЯД ОПЕРАНДА ИЛИ СУММАТОРА СОДЕРЖИТ "0",
 И ХОТЯ БЫ ОДИН ИЗ 63-60 РАЗРЯДОВ СОДЕРЖИТ "0",
 ТО ВМЕСТО ЗНАЧЕНИЯ ОПЕРАНДА (СУММАТОРА) ИСПОЛЬЗУЕТСЯ "0"
 ВО ВСЕХ 64 РАЗРЯДАХ.
 (ОЧЕНЬ МАЛЕНЬКИЕ ЧИСЛА ЗАМЕНЯЮТСЯ НА МАШИННЫЙ НУЛЬ).
#НА Б). ЕСЛИ 64 РАЗРЯД ОПЕРАНДА (СУММАТОРА) СОДЕРЖИТ "1",
 И ХОТЯ БЫ ОДИН ИЗ 63-60 РАЗРЯДОВ СОДЕРЖИТ "1",
 ТО ПРОИСХОДИТ ВНУТРЕННЕЕ ПРЕРЫВАНИЕ "НЕЗАКОННЫЙ ОПЕРАНД".
#НА В). ВЫПОЛНЯЕТСЯ ТРЕБУЕМАЯ ОПЕРАЦИЯ, "НЕ ЧУВСТВУЮЩАЯ"
 ДЫР В 64-РАЗРЯДНОМ СЛОВЕ.
 ТАК, ПРИ ЦИКЛИЧЕСКОМ СЛОЖЕНИИ ПЕРЕНОС ИЗ 59 РАЗРЯДА
 ДОБАВЛЯЕТСЯ К 64-МУ (А НЕ К 60-МУ), А ПЕРЕНОС ИЗ 64
 РАЗРЯДА ДОБАВЛЯЕТСЯ К 13-МУ (А НЕ К 1-МУ).
#НА Г). У РЕЗУЛЬТАТА ОПЕРАЦИИ (СУММАТОРА)
 60-63 РАЗРЯДЫ ЗАПОЛНЯЮТСЯ ИНВЕРТИРОВАННЫМ
 КОДОМ 64 РАЗРЯДА. ТЕМ САМЫМ ФОРМИРУЕТСЯ "ПРАВИЛЬНОЕ"
 ДЛЯ ПОСЛЕДУЮЩИХ ОПЕРАЦИЙ ЧИСЛО.
 СПОСОБ ФОРМИРОВАНИЯ 1-12 РАЗРЯДОВ РЕЗУЛЬТАТА ЗАВИСИТ ОТ КОНКРЕТНОЙ
 ОПЕРАЦИИ. ПРОЩЕ ВСЕГО - ОБНУЛЯТЬ ИХ.
#НА Д). ИЗНАЧАЛЬНАЯ "ПРАВИЛЬНОСТЬ" ЧИСЕЛ ДЛЯ РЕЖИМА ЭМУЛЯТОРА
 ОБЕСПЕЧИВАЕТСЯ ЗАГРУЗЧИКОМ НА ОСНОВЕ ИНФОРМАЦИИ О ТИПЕ МОДУЛЯ
 ЗАГРУЗКИ (НОВЫЙ ИЛИ СТАРЫЙ).
#НА #ВС6 _
#А0 #Ц #Б 4.5. Т_Е_Г_И #М
#НА КАЖДОЕ МАШИННОЕ СЛОВО СНАБЖЕНО ТЕГОМ, ЗАНИМАЮЩИМ 65-72
 РАЗРЯДЫ СЛОВА.
 НАЗНАЧЕНИЕ ОТДЕЛЬНЫХ БИТОВ ТЕГА:
#ПЕРН 65_(1)_-_РАЗЛИЧАЕТ КОМАНДЫ И ЧИСЛА.
#А0 "0" - ЧИСЛО, _"1" - КОМАНДА.
#А0 ПРИ ПОПЫТКЕ ВЫБОРКИ ЧИСЛА В КАЧЕСТВЕ КОМАНДЫ ПРОИСХОДИТ
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ "КОНТРОЛЬ КОМАНДЫ".
 КОМАНДЫ, ТАК ЖЕ КАК И ЧИСЛА, МОГУТ БЫТЬ ИСПОЛЬЗОВАНЫ
 В КАЧЕСТВЕ ОПЕРАНДОВ.
 ПРИ ЗАПИСИ В ПАМЯТЬ 65 РАЗРЯД ТЕГА УСТАНАВЛИВАЕТСЯ РАВНЫМ
 ЗНАЧЕНИЮ ПРИЗНАКА ЗАПИСИ КОМАНД В РЕГИСТРЕ @Р@Р@Р
 (РАСШИРЕНИЕ РЕГИСТРА РЕЖИМОВ), КОПИЯ КОТОРОГО НАХОДИТСЯ В ТЕГЕ
 РЕЗУЛЬТАТА
 (АНАЛОГ ПРИЗНАКА КОМАНДНОЙ СВЕРТКИ В БЭСМ-6).
 ОБЫЧНО В РЕЖИМЕ МАТЕМАТИКА ПРИЗНАК ЗАПИСИ КОМАНД РАВЕН 0.
#ПЕРН 66_(2)_-_РАЗЛИЧАЕТ  2 ГРУППЫ КОМАНД:
#А0 0 - КОМАНДА НОВОГО РЕЖИМА, 1 - КОМАНДА ЭМУЛЯТОРА.
#А0 ДЛЯ ЧИСЕЛ ЕГО МОЖНО ИСПОЛЬЗОВАТЬ АНАЛОГИЧНЫМ ОБРАЗОМ,
 ФОРМИРУЯ ЭТОТ БИТ ПРИ ЗАПИСИ ЧИСЛА В СООТВЕТСТВИИ С
 БИТОМ РЕЖИМА, В КОТОРОМ ВЫПОЛНЯЛАСЬ КОМАНДА ЗАПИСИ.
#ПЕРН 67_(3)_-_РАЗРЕШЕН (0) ИЛИ ЗАПРЕЩЕН (1) ДОСТУП К СЛОВУ
 ПО ЧТЕНИЮ (ЗА ОПЕРАНДОМ).
#ПЕРН 68_(4)_-_РАЗРЕШЕН (0) ИЛИ ЗАПРЕЩЕН (1) ДОСТУП К СЛОВУ
 ПО ЗАПИСИ (ОПЕРАНДА).
#А0 КОМБИНАЦИЯ: "ЧТЕНИЕ ЗАПРЕЩЕНО", А "ЗАПИСЬ РАЗРЕШЕНА"
 МОЖЕТ СОЗДАВАТЬСЯ ЗАГРУЗЧИКОМ ДЛЯ ЛОВЛИ ОБРАЩЕНИЙ
 К НЕИНИЦИАЛИЗИРОВАННЫМ ПЕРЕМЕННЫМ.
#ПЕРН 69_(5)_-_РАЗРЕШЕНА (0) ИЛИ ЗАПРЕЩЕНА (1)
 ВЫБОРКА КОМАНДЫ (Т.&Н. &ОСТАНОВ ПО НОМЕРУ КОМАНДЫ).
#ПЕРН 70_(6)_-_РАЗРЕШЕНА (0) ИЛИ ЗАПРЕЩЕНА (1)
 ПЕРЕДАЧА УПРАВЛЕНИЯ НА ЭТУ КОМАНДУ.
#ПЕРН 71_(7)_-_РЕЗЕРВ.
#ПЕРН 72_(8)_-_ПРИЗНАК
 ПРОГРАММНОЙ (1) ИЛИ АППАРАТНОЙ (0)
 ИНТЕРПРЕТАЦИИ ТЕГА. ПРИ УСТАНОВКЕ 72
 РАЗРЯДА В "1" ПРИСХОДИТ
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ
 "ПРОГРАММНАЯ ИНТЕРПРЕТАЦИЯ ТЕГА КОМАНДЫ"
 ИЛИ "ПРОГРАММНАЯ ИНТЕРПРЕТАЦИЯ ТЕГА ОПЕРАНДА".
#НА ПРИ ЧТЕНИИ ИЗ ПАМЯТИ ТЕГОВСКАЯ ЧАСТЬ СЛОВА
 ПРОВЕРЯЕТСЯ НА ПРЕДМЕТ ВОЗМОЖНОЙ ЗАЩИТЫ И СООТВЕТСТВИЯ
 ЗНАЧЕНИЮ @Р@Э.
 ПРЕРЫВАНИЯ, МОГУЩИЕ ВОЗНИКНУТЬ ПРИ ЭТОМ, БЛОКИРУЮТСЯ
 ПРИЗНАКАМИ @Б@П@Т@Ч И @Б@Ч@О@П.
 ПРИ ЗАПИСИ В ПАМЯТЬ ТЕГ ПИШЕТСЯ ИЗ
 РЕГИСТРА ТЕГА РЕЗУЛЬТАТА, КОТОРЫЙ МОЖЕТ БЫТЬ СФОРМИРОВАН ПРОГРАММНО.
 ПРИ ЗАПИСИ ТАКЖЕ ВОЗМОЖНО ПРЕРЫВАНИЕ ПО ТЕГУ.
 ОНО БЛОКИРУЕТСЯ ПРИЗНАКОМ @Б@П@Т@З.
 ТЕГ РЕЗУЛЬТАТА ЗАПОМИНАЕТСЯ В РЕГИСТРЕ @Р@Р@Р
 (РАСШИРЕНИЕ РЕГИСТРА РЕЖИМОВ).
#НА #НА #ВС8 _
#А0 #Б #Ц 4.6. ПРИПИСКА И ЗАЩИТА ПАМЯТИ #М
#НА
 ПРИ ОБРАЩЕНИИ В ПАМЯТЬ ЗА ЧИСЛАМИ И КОМАНДАМИ
 11:20 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО АДРЕСА СЛОВА
  ОПРЕДЕЛЯЮТ НОМЕР РЕГИСТРА ПРИПИСКИ (@Р@П): 0,1,...,1023
  И ПРИ ОТСУТСТВИИ БЛОКИРОВКИ ПРИПИСКИ
  (@Б@П = 0 В @Р@Р)
   ЗАМЕНЯЮТСЯ В АДРЕСЕ НА СОДЕРЖИМОЕ ПОЛЯ НОМЕРА
 ФИЗИЧЕСКОЙ СТРАНИЦЫ ИЗ ЭТОГО @Р@П.
 ОЧЕВИДНО, ЧТО ЧАСТЬ ВИРТУАЛЬНОЙ ПАМЯТИ ДОЛЖНА ИСПОЛЬЗОВАТЬСЯ
 ДЛЯ ЦЕЛЕЙ ОПЕРАЦИОННОЙ СИСТЕМЫ.
 ПРОГРАММАМ ПОЛЬЗОВАТЕЛЕЙ ЭТА ЧАСТЬ ПАМЯТИ ДОЛЖНА БЫТЬ
 ОГРАНИЧЕННО ДОСТУПНА.
 ПОЭТОМУ ПРЕДЛАГАЕТСЯ В СХЕМУ ПРИПИСКИ ВВЕСТИ ПРОВЕРКУ
 ВИРТУАЛЬНОГО НОМЕРА СТРАНИЦЫ:
#НА В РЕЖИМЕ ДИСПЕТЧЕРА РАЗРЕШАЕТСЯ ОБРАЩАТЬСЯ
 ЗА ЧИСЛАМИ И КОМАНДАМИ КО ВСЕМ
 ВИРТУАЛЬНЫМ СТРАНИЦАМ, В РЕЖИМЕ МАТЕМАТИКА - ТОЛЬКО
 К СТРАНИЦАМ С ПОЛОЖИТЕЛЬНЫМИ НОМЕРАМИ.
 ПРОВЕРКА МОЖЕТ БЫТЬ БЛОКИРОВАНА ПРИЗНАКОМ @Р@О@А В @Р@Р.
 В РЕЖИМЕ ДИСПЕТЧЕРА ОН УСТАНОВЛЕН ВСЕГДА, А ПЕРЕД ВХОДОМ
 В РЕЖИМ МАТЕМАТИКА - УСТАНАВЛИВАЕТСЯ ОПЕРАЦИОННОЙ СИСТЕМОЙ.
#ВС6 _
#НА ФОРМАТ РЕГИСТРА ПРИПИСКИ :
#ПЕРН _1:8 - ПОЛЕ НОМЕРА ПРОЦЕССА (@П@Н@П),
 ИСПОЛЬЗУЮЩЕГО ДАННЫЙ РЕГИСТР ПРИПИСКИ.
 ПРИ ОБРАЩЕНИЯХ В ПАМЯТЬ СОДЕРЖИМОЕ
 @П@Н@П КАЖДЫЙ РАЗ СРАВНИВАЕТСЯ
 С @Р@Н@П - РЕГИСТРОМ НОМЕРА ПРОЦЕССА.
 ПРИ НЕСОВПАДЕНИИ ВОЗНИКАЕТ ПРЕРЫВАНИЕ
 "ЧУЖОЙ @Р@П", ЗА
 ИСКЛЮЧЕНИЕМ СЛУЧАЯ,
 КОГДА В @П@Н@П - ЧИСЛО 255.
 СТРАНИЦА С ЭТИМ НОМЕРОМ
 ДОСТУПНА ВСЕМ ПРОЦЕССАМ.
 Р@Н@П ПЕРЕУСТАНАВЛИВАЕТСЯ
 ПРИ СМЕНЕ
 ПРОЦЕССА НА ПРОЦЕССОРЕ.
#ПЕРН _9 - БИТ ЗАЩИТЫ СТРАНИЦЫ ПО ЗАПИСИ.
#А0 "0" ВЛЕЧЕТ ПРЕРЫВАНИЕ ПРИ ЗАПИСИ В ЛЮБОЕ СЛОВО ИЗ ЭТОЙ СТРАНИЦЫ.
#ПЕРН 10 - БИТ ЗАЩИТЫ СТРАНИЦЫ ПО ОБРАЩЕНИЮ (ЧТЕНИЕ ИЛИ ЗАПИСЬ).
#А0 "0" ВЛЕЧЕТ ПРЕРЫВАНИЕ ПРИ ОБРАЩЕНИИ К
 ЛЮБОМУ СЛОВУ ЭТОЙ СТРАНИЦЫ.
#ПЕРН 11:20 - ПОЛЕ НОМЕРА ФИЗИЧЕСКОЙ СТРАНИЦЫ, ЗАМЕНЯЮЩЕЕ
 СТАРШИЕ РАЗРЯДЫ В ИСПОЛНИТЕЛЬНОМ АДРЕСЕ.
#НА
 СХЕМА ПРИПИСКИ И ЗАЩИТЫ НЕ РАБОТАЕТ ПРИ УСТАНОВЛЕННЫХ
 В "1" ПРИЗНАКАХ @Б@П, @Б@З@О, @Б@З@З, А ТАКЖЕ ДЛЯ НУЛЕВОГО
 ИСПОЛНИТЕЛЬНОГО АДРЕСА.
 НУЛЕВОЙ ИСПОЛНИТЕЛЬНЫЙ АДРЕС ВСЕГДА СОДЕРЖИТ НУЛЕВОЙ КОД.
 В РЕЖИМЕ ДИСПЕТЧЕРА ОБРАЩЕНИЕ К ПАМЯТИ ТАКЖЕ
 ПРОИСХОДИТ ЧЕРЕЗ СХЕМУ ПРИПИСКИ И ЗАЩИТЫ.
 ПРИ ВЫБОРКЕ КОМАНД ИЗ ПАМЯТИ БИТЫ ЗАЩИТЫ НЕ ПРОВЕРЯЮТСЯ.
 ПРОИЗВОДИТСЯ ТОЛЬКО СРАВНЕНИЕ @П@Н@П С @Р@Н@П И, В ОТСУТСТВИЕ @Р@О@А,
 ПРОВЕРКА НА ОТРИЦАТЕЛЬНЫЙ НОМЕР СТРАНИЦЫ.
 #НА ВНИМАНИЕ! В ДАЛЬНЕЙШЕМ ПРЕДЛАГАЕТСЯ
 УВЕЛИЧИТЬ РАЗРЯДНОСТЬ РЕГИСТРОВ ПРИПИСКИ ДО 28:
#ПЕРН 21:24_-_НОМЕР ФИЗИЧЕСКОГО СЕГМЕНТА ПАМЯТИ.
#ПЕРН 25:28_-_НОМЕР ВИРТУАЛЬНОГО (МАТЕМАТИЧЕСКОГО)
 СЕГМЕНТА.
#НА ПРИ ОБРАЩЕНИИ К ПАМЯТИ 21:24 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО
 АДРЕСА
 (МАТЕМАТИЧЕСКОГО) СРАВНИВАЮТСЯ
 С НОМЕРОМ ВИРТУАЛЬНОГО СЕГМЕНТА
 СООТВЕТСТВУЮЩЕЙ СТРАНИЦЫ.
 ПРИ НЕСОВПАДЕНИИ - ПРЕРЫВАНИЕ (МОЖНО И ТО ЖЕ,
 КОТОРОЕ ПРОИСХОДИТ ПРИ НЕСОВПАДЕНИИ НОМЕРА ПРОЦЕССА).
 ПРИ СОВПАДЕНИИ 21:24 РАЗРЯДЫ
 МАТЕМАТИЧЕСКОГО АДРЕСА ЗАМЕНЯЮТСЯ НА НОМЕР
 ФИЗИЧЕСКОГО СЕГМЕНТА ПАМЯТИ ИЗ 21:24 РАЗРЯДОВ @Р@П.
 ТАКИМ ОБРАЗОМ ДОСТИГАЕТСЯ РАСШИРЕНИЕ
 ВИРТУАЛЬНОГО АДРЕСА ДО 128 МБАЙТ.
#НА #НА
 ДЛЯ ПОДДЕРЖКИ АЛГОРИТМА УПРАВЛЕНИЯ ПАМЯТЬЮ
 ИСПОЛЬЗУЕТСЯ СХЕМА АППАРАТНОГО ПЕРЕСЧЕТА ПРИОРИТЕТОВ СТРАНИЦ,
 РЕАЛИЗУЮЩАЯ АЛГОРИТМ РАССТАНОВКИ
 ПРИОРИТЕТОВ В ЗАВИСИМОСТИ
 ОТ ВРЕМЕНИ ОБРАЩЕНИЯ
 К СТРАНИЦЕ ПОСЛЕ ЗАПРОСА
 КОРРЕКЦИИ СПИСКОВ ПРИОРИТЕТОВ СТРАНИЦ.
#НА НА КАЖДУЮ
 ФИЗИЧЕСКУЮ СТРАНИЦУ ПАМЯТИ ОТВОДИТСЯ
 3 БИТА,
 ДОСТУПНЫХ ИЗ ПРОГРАММЫ:
#ПЕРН @Б@О@Б@Р - БИТ, КОТОРЫЙ ДОЛЖЕН УСТАНАВЛИВАТЬСЯ В "1"
 ПРИ КАЖДОМ ОБРАЩЕНИИ К СООТВЕТСТВУЮЩЕЙ ФИЗИЧЕСКОЙ СТРАНИЦЕ.
#ПЕРН @Б@И@З@М - БИТ, КОТОРЫЙ ДОЛЖЕН УСТАНАВЛИВАТЬСЯ В "1"
 ПРИ КАЖДОЙ ЗАПИСИ В ФИЗИЧЕСКУЮ   СТРАНИЦУ.
#ПЕРН @Б@М@С@П - БИТ, ВКЛЮЧАЮЩИЙ СХЕМУ МОДИФИКАЦИИ СПИСКА
 ПРИОРИТЕТОВ ФИЗИЧЕСКИХ СТРАНИЦ.
#НА КРОМЕ ТОГО, ДЛЯ ХРАНЕНИЯ ДВУНАПРАВЛЕННЫХ
 СПИСКОВ ПРИОРИТЕТОВ СТРАНИЦ ИСПОЛЬЗУЕТСЯ
 @О@З@У ПРИОРИТЕТОВ СТРАНИЦ #Б (ОЗУПС0 &И ОЗУПС1)
 #М ОБЩЕЙ ЕМКОСТЬЮ 2К 10-РАЗРЯДНЫХ СЛОВ.
 СТРУКТУРА СПИСКА СЛЕДУЮЩАЯ: ДЛЯ
 СТРАНИЦЫ  С НОМЕРОМ @Р ПО АДРЕСУ,
 РАВНОМУ НОМЕРУ СТРАНИЦЫ, В @О@З@У@П@С0
 СОДЕРЖИТСЯ НОМЕР СТРАНИЦЫ, ПРЕДШЕСТВУЮЩЕЙ @Р
 ПО ПРИОРИТЕТУ,
 А В @О@З@У@П@С1 - НОМЕР СТРАНИЦЫ, СЛЕДУЮЩЕЙ
 ЗА @Р ПО ПРИОРИТЕТУ.
#НА ДЛЯ СТРАНИЦ, НАХОДЯЩИХСЯ В НАЧАЛЕ
 ФИЗИЧЕСКОЙ ПАМЯТИ И СООТВЕТСТВУЮЩИХ
 РЕЗИДЕНТНОЙ ЧАСТИ СИСТЕМЫ,
 ПЕРЕСЧИТЫВАТЬ ПРИОРИТЕТЫ
 НЕТ НЕОБХОДИМОСТИ,
 ПОЭТОМУ ЭТА ЧАСТЬ @О@З@У ПРИОРИТЕТОВ СТРАНИЦ
 ИСПОЛЬЗУЕТСЯ В КАЧЕСТВЕ РАБОЧЕЙ ОБЛАСТИ.
 В СЛОВЕ 0 @О@З@У@П@С0 СОДЕРЖИТСЯ НОМЕР
 СТРАНИЦЫ С МИНИМАЛЬНЫМ ПРИОРИТЕТОМ,
 В @О@З@У@П@С1 - С МАКСИМАЛЬНЫМ
 (В ЭТОМ МЕСТЕ
 СПИСОК "ЗАКОЛЬЦОВАН").
 В СЛОВЕ 1 @О@З@У@П@С0  НАХОДИТСЯ
 НОМЕР СТРАНИЦЫ @N@C, ДЛЯ КОТОРОЙ
 ПРОИЗВЕДЕН ПЕРЕСЧЕТ СПИСКА ПРИОРИТЕТОВ
 В ПОСЛЕДНИЙ РАЗ.
#НА В МОМЕНТ ИНИЦИАЛИЗАЦИИ СИСТЕМЫ
 В @О@З@У ПРИОРИТЕТОВ СТРАНИЦ
 ЗАГРУЖАЕТСЯ ПРОИЗВОЛЬНЫЙ СПИСОК,
 @N@C ОБНУЛЯЕТСЯ, А #Б ОЗУ БМСП, #М СООТВЕТСТВУЮЩЕЕ
 АДРЕСАМ "УКАЧИВАЕМЫХ"
 СТРАНИЦ ПАМЯТИ (ДЛЯ КОТОРЫХ НУЖНО
 ПЕРЕСЧИТЫВАТЬ ПРИОРИТЕТ), УСТАНАВЛИВАЕТСЯ В "1",
 ОСТАЛЬНЫЕ (НАЧАЛЬНЫЕ) АДРЕСА @О@З@У @Б@М@С@П
 ОБНУЛЯЮТСЯ.
#НА ПРИ ОБРАЩЕНИИ К СТРАНИЦЕ, БИТ МОДИФИКАЦИИ
 КОТОРОЙ  РАВЕН 1, ПРОИСХОДИТ
 ПРЕРЫВАНИЕ
 "ЗАПРОС
 МОДИФИКАЦИИ ПРИОРИТЕТОВ СТРАНИЦ".
 ПРИ ЭТОМ СТРАНИЦА, ПО КОТОРОЙ
 ПРОИЗОШЛО ПРЕРЫВАНИЕ,
 ИЗВЛЕКАЕТСЯ ИЗ "СТАРОГО" СПИСКА
 ПРИОРИТЕТОВ И ЗАНОСИТСЯ
 В "НОВЫЙ" ПОСЛЕ СТРАНИЦЫ С НОМЕРОМ @N@C.
 БИТ @О@З@У @Б@М@С@П, СООТВЕТСТВУЮЩИЙ
 СТРАНИЦЕ @Р, СБРАСЫВАЕТСЯ, А ЗНАЧЕНИЕ @Р
 ЗАПИСЫВАЕТСЯ НА МЕСТО @N@C.
#НА ЗАПРОС НА НОВУЮ КОРРЕКТИРОВКУ СПИСКОВ
 ПРИОРИТЕТОВ СТРАНИЦ ПРОИЗВОДИТСЯ ОПЕРАЦИОННОЙ
 СИСТЕМОЙ ПО КОМАНДЕ @W@M@O@D.
 ПРИ ЭТОМ #Б ОЗУ БМСП, #М НАЧИНАЯ С
 ЗАДАННОГО АДРЕСА, ЗАПОЛНЯЕТСЯ "1",
 А В 1-ОЕ СЛОВО #Б ОЗУПС0 #М ЗАНОСИТСЯ "0".
#НА #НА #ВС8 _
#А0 #Ц #Б 4.7. Р_Е_Г_И_С_Т_Р_Ы #М
#НА
 ВСЕГО В @Ц@П ИМЕЕТСЯ 1024 32-РАЗРЯДНЫХ, 16 64-РАЗРЯДНЫХ
 И
 РЯД СПЕЦИАЛЬНЫХ РЕГИСТРОВ.
#НА 32-РАЗРЯДНЫЕ РЕГИСТРЫ ДЕЛЯТСЯ НА ГРУППЫ
 ПО 32 РЕГИСТРА.
 ДЛЯ ВЫБОРА ГРУППЫ
 ДОСТАТОЧНО ЗАПИСАТЬ В РЕГИСТР
 НОМЕРА ГРУППЫ (@Р@Н@Г) КОД
 (5 РАЗРЯДОВ), ОПРЕДЕЛЯЮЩИЙ ГРУППУ
 РЕГИСТРОВ.
#НА КАЖДОМУ ПРОЦЕССУ, ЗАНИМАЮЩЕМУ
 ЦЕНТРАЛЬНЫЙ ПРОЦЕССОР, ОТВОДИТСЯ
 ОДНА ИЛИ НЕСКОЛЬКО ГРУПП 32-РАЗРЯДНЫХ
 РЕГИСТРОВ, ЧАСТЬ ИЗ КОТОРЫХ
 ИСПОЛЬЗУЕТСЯ В КАЧЕСТВЕ
 ОБЛАСТИ УПРЯТЫВАНИЯ РЕГИСТРОВ
 ОБЩЕГО НАЗНАЧЕНИЯ, НАХОДЯЩИХСЯ
 ВНЕ ГРУППЫ.
 ДЛЯ СМЕНЫ ПРОЦЕССОВ ИЛИ ОРГАНИЗАЦИИ
 ВЫЗОВА ЭКСТРАКОДА
 В ОБЛАСТЬ УПРЯТЫВАНИЯ РЕГИСТРОВ
 ТЕКУЩЕГО ПРОЦЕССА ДОСТАТОЧНО
 СКОПИРОВАТЬ СОДЕРЖИМОЕ
 РЕГИСТРОВ ОБЩЕГО НАЗНАЧЕНИЯ,
 ЗАПИСАТЬ ДРУГОЙ НОМЕР В @Р@Н@Г И
 ВОССТАНОВИТЬ СОДЕРЖИМОЕ РЕГИСТРОВ
 ОБЩЕГО НАЗНАЧЕНИЯ
 НОВОГО ПРОЦЕССА.
#НА ЗДЕСЬ МЫ ПЕРЕЧИСЛЯЕМ ВСЕ ТЕ РЕГИСТРЫ, К КОТОРЫМ НЕОБХОДИМО
 ИМЕТЬ ДОСТУП ИЗ ПРОГРАММЫ, И ИХ РАЗРЯДНОСТЬ.
 ОТМЕТИМ, ЧТО ДОСТУП ДОЛЖЕН БЫТЬ СИММЕТРИЧЕН, Т.&Е. &ЕСЛИ
 РЕГИСТР ДОСТУПЕН ПО ЧТЕНИЮ, ТО ДОСТУПЕН И ПО ЗАПИСИ.
 (ЗАМЕЧАНИЕ:
 ДЛЯ НЕКОТОРЫХ СПЕЦИАЛЬНЫХ РЕГИСТРОВ ЭТО НЕ ТАК!)
#НА НУМЕРАЦИЯ РЕГИСТРОВ, ПРИВЕДЕННАЯ В ЛЕВОМ СТОЛБЦЕ,
 ВОСЬМЕРИЧНАЯ, ЭТИ НОМЕРА БУДУТ АДРЕСАМИ
 В КОМАНДАХ ОБРАЩЕНИЯ К РЕГИСТРАМ.
 В СКОБКАХ ПРИВЕДЕНЫ ШЕСТНАДЦАТЕРИЧНЫЕ
 ЭКВИВАЛЕНТЫ АДРЕСА.
#НА #ВС8 _
#А0 #Б #Ц 32-РАЗРЯДНЫЕ РЕГИСТРЫ: #М
#А0 #Ц ----------------------
 #ПЕРН 000_0000_:_000_1777_(00000_:_003FF)_
 - 32-РАЗРЯДНЫЕ
 РЕГИСТРЫ - МОДИФИКАТОРЫ (@О@З@У МОДИФИКАТОРОВ).
 ПОЛНЫЕ АДРЕСА ИХ
 ИСПОЛЬЗУЮТСЯ В ПРИВИЛЕГИРОВАННЫХ
 КОМАНДАХ ЧТЕНИЯ И ЗАПИСИ.
 В ПОЛНОМ АДРЕСЕ РАЗРЯДЫ 6:10
 УКАЗЫВАЮТ НОМЕР ГРУППЫ РЕГИСТРОВ,
 А РАЗРЯДЫ 1:5 - НОМЕР РЕГИСТРА ВНУТРИ ГРУППЫ.
#НА #ВС7 _
#А0 #Б #Ц 32-РАЗРЯДНЫЕ РЕГИСТРЫ ГРУППЫ: #М
#А0 #Ц ----------------------------- #А0
#ПЕРН 00_-_НУЛЕВОЙ РЕГИСТР ВСЕГДА СОДЕРЖИТ НУЛЕВОЙ КОД.
#ПЕРН 01:17_(00-0F)_-_ИНДЕКСНЫЕ РЕГИСТРЫ 1:15 (МОДИФИКАТОРЫ).
 ИСПОЛЬЗУЮТСЯ ДЛЯ МОДИФИКАЦИИ
 АДРЕСА КОМАНДЫ.
 15 РЕГИСТР, ТАК ЖЕ, КАК И В @Б@Э@С@М-6,
 ЯВЛЯЕТСЯ УКАЗАТЕЛЕМ АДРЕСА МАГАЗИНА (@S@P).
#ПЕРН 20_(10)_-_РЕГИСТР @С.
 ЗАГРУЗКА ЕГО В РЕЖИМЕ МАТЕМАТИКА ПРОИСХОДИТ
 С ПОМОЩЬЮ КОМАНД #Б UТС, WТС &И UTCS.
 В #М РЕЖИМЕ ДИСПЕТЧЕРА ДОСТУПЕН ПРОГРАММЕ ТАКЖЕ
 КОМАНДАМИ #Б RMOD &И WMOD. #М #ВС6 _
#ПЕРН 21_(11)_-_РЕГИСТР РЕЖИМОВ (@Р@Р, @R@R@R):
#А0 _
#А0 _1__: БЛОКИРОВКА НОРМАЛИЗАЦИИ (@Б@Н@О@Р)
#А0 _2__: БЛОКИРОВКА ОКРУГЛЕНИЯ (@Б@О@К@Р)
#А0 _3*_: ЛОГИЧЕСКАЯ ГРУППА ДЛЯ УСЛОВНЫХ ПЕРЕХОДОВ (@Г@Л)
#А0 _4*_: ГРУППА УМНОЖЕНИЯ (@Г@У)
#А0 _5*_: ГРУППА СЛОЖЕНИЯ (@Г@С)
#А0 _6__: БЛОКИРОВКА ПРЕРЫВАНИЯ ПРИ ПЕРЕПОЛНЕНИИ (@Б@П@П)
#А0 _7**: ПРИЗНАК ПЕРЕПОЛНЕНИЯ (@П@П ИЛИ @O@V@R)
#А0 _8**: ПРИЗНАК ПЕРЕНОСА (@П@П@С ИЛИ @С)
#А0 _9**: ПРИЗНАК ЗНАКА (@П@З ИЛИ @N)
#А0 10**: ПРИЗНАК НУЛЯ (@П@Н ИЛИ @Z)
#А0 11__: БЛОКИРОВКА ВЫХОДА ЧИСЛА ЗА ДИАПАЗОН БЭСМ-6 (@Б@Б@Ч)
#А0 12__: БЛОКИР.&ПРОВЕРКИ ПЕРЕПОЛН.ПОЛЯ УПРЯТЫВАНИЯ (@Б@П@П@У)
#А0 13__: РЕЖИМ ДИСПЕТЧЕРА (@Р@Д)
#А0 14__: БЛОКИРОВКА РЕАКЦИИ НА ЧУЖОЙ ОПЕРАНД (@Б@Ч@О@П)
#А0 15__: БЛОКИР.&ПРОВЕРКИ ТЕГА ПРИ ЧТЕНИИ ОПЕРАНДА (@Б@П@Т@Ч)
#А0 16__: БЛОКИРОВКА РЕАКЦИИ НА ЧУЖОЙ СУММАТОР (@Б@Ч@С)
#А0 17__: БЛОКИРОВКА ПРОГРАММНОЙ ИНТЕРПРЕТАЦИИ ТЕГА (@Б@П@И@Н@Т)
#А0 18__: БЛОКИРОВКА ВНЕШНИХ ПРЕРЫВАНИЙ (@Б@В@П)
#А0 19__: БЛОКИРОВКА ПРОВЕРКИ ТЕГА ПРИ ЗАПИСИ (@Б@П@Т@З)
#А0 20__:
#А0 21__: РЕЖИМ ПОШАГОВОГО ВЫПОЛНЕНИЯ КОМАНД (@Р@Ш)
#А0 22__: ПРИЗНАК ОСТАНОВА ПО ПРЕРЫВАНИЮ (@П@О@П)
#А0 23__: БЛОКИРОВКА ЗАЩИТЫ СТРАНИЦ ПО ЗАПИСИ (@Б@З@З)
#А0 24__: БЛОКИРОВКА ЗАЩИТЫ СТРАНИЦ ПО ОБРАЩЕНИЮ (@Б@З@О)
#А0 25__: РЕЖИМ ОТРИЦАТЕЛЬНЫХ АДРЕСОВ (@Р@О@А)
#А0 26__: БЛОКИРОВКА ПРОВЕРКИ НОМЕРА ПРОЦЕССА (@Б@П@Н@П)
#А0 27__: БЛОКИРОВКА ПРИПИСКИ (@Б@П)
#А0 28*_: ПРИЗНАК ИЗМЕНЕНИЯ АДРЕСА 16 РЕГИСТРОМ (@П@И@А)
#А0 29*_: ПРИЗНАК ПРАВОЙ КОМАНДЫ (@П@П@К)
#А0 30*_: ПРИЗНАК КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ (@П@П@У)
#А0 31__:
#А0 32__:
#НА ВСЕ РАЗРЯДЫ @Р@Р АКТИВНОГО ПРОЦЕССА
 ПЕРЕПИСЫВАЮТСЯ В ИСПОЛНИТЕЛЬНУЮ ЧАСТЬ.
 РАЗРЯДЫ @Р@Р, ПОМЕЧЕННЫЕ (*) И ИЗМЕНЯЮЩИЕСЯ В КАЖДОЙ КОМАНДЕ #Б
 (ГЛ,ГУ,ГС,ПИА,ППК,ППУ) #М ПЕРЕПИСЫВАЮТСЯ
 В ТРИГГЕРЫ ПРИЗНАКОВ; ПРОЧИТАТЬ ИХ
 СОСТОЯНИЕ В @П@П МОЖНО КОМАНДОЙ ЧТЕНИЯ РЕГИСТРА С АДРЕСОМ 0181В
 (СМ.П.6.7.).
 РАЗРЯДЫ @Р@Р, ИЗМЕНЯЮЩИЕСЯ В АРИФМЕТИЧЕСКИХ
 КОМАНДАХ С СУММАТОРОМ, ПОМЕЧЕННЫЕ (**) #Б (OVR,С,N,Z), #М ПЕРЕПИСЫВАЮТСЯ
 В РЕГИСТР ПРИЗНАКОВ РЕЗУЛЬТАТА @М; ОБРАЩЕНИЕ К НИМ ИЗ @П@П - КОМАНДАМИ
 С АДРЕСОМ 0181F.
 ОСТАЛЬНЫЕ РАЗРЯДЫ ИСПОЛНИТЕЛЬНОЙ ЧАСТИ СООТВЕТСТВУЮТ
 РАЗРЯДАМ @Р@Р.
#А3 ПРИ ИЗМЕНЕНИИ РАЗРЯДОВ @Р@Р АКТИВНОГО ПРОЦЕССА КОМАНДАМИ ИЗ @П@П
 НАДО ЗАПИСАТЬ В @Р@Р В @О@З@У МОДИФИКАТОРОВ (АДРЕС @Р@Р 11 + НОМЕР
 ГРУППЫ В 6-10 РАЗРЯДАХ), ТО ЖЕ ЗАПИСАТЬ В ИСПОЛНИТЕЛЬНУЮ
 ЧАСТЬ @Р@Р (АДРЕС 0181В) И, ЕСЛИ НАДО, В РЕГИСТР @М (0181F).
#А3 ИЗМЕНЕНИЕ РАЗРЯДОВ @Р@Р СВОЕГО ПРОЦЕССА
 КОМАНДАМИ #Б SETR &И CLRR #М
 ПРОИСХОДИТ ОДНОВРЕМЕННО В @Р@Р В @О@З@У МОДИФИКАТОРОВ
 И В ИСПОЛНИТЕЛЬНОЙ ЧАСТИ.
 КОМАНДЫ #Б RMOD &И WMOD, #М ОБРАЩАЮЩИЕСЯ
 К @Р@Р ПО ПОЛНОМУ АДРЕСУ, ВКЛЮЧАЮЩЕМУ НОМЕР ГРУППЫ,
 ИЗМЕНЯЮТ ТОЛЬКО @Р@Р В @О@З@У МОДИФИКАТОРОВ, НЕ МЕНЯЯ ЕГО
 ИСПОЛНИТЕЛЬНОЙ ЧАСТИ, ЕСЛИ ДАЖЕ ЭТО АКТИВНЫЙ ПРОЦЕСС!
#ВС6 _
#ПЕРН 22_(12)_-_РАСШИРЕНИЕ РЕГИСТРА РЕЖИМОВ (@Р@Р@Р, @R@R@R):
#А0 _
#А0 1 : ПРИЗНАК КОМАНД (@П@К)
#А0 2 : РЕЖИМ ЭМУЛЯЦИИ БЭСМ-6 (@Р@Э)
#А0 3 : ЗАПРЕТ ЧТЕНИЯ ОПЕРАНДА ИЗ ПАМЯТИ (@З@Ч@П)
#А0 4 : ЗАПРЕТ ЗАПИСИ ОПЕРАНДА В ПАМЯТЬ (@З@З@П)
#А0 5 : ЗАПРЕТ ВЫБОРКИ КОМАНДЫ ИЗ ПАМЯТИ (@З@В@П)
#А0 6 : ЗАПРЕТ ПЕРЕДАЧИ УПРАВЛЕНИЯ НА КОМАНДУ (@З@П@У)
#А0 7 : ТЕГОВСКИЙ РЕЗЕРВ
#А0 8 : ПРОГРАММНАЯ ИНТЕРПРЕТАЦИЯ ТЕГА (@П@И@Н@Т)
#А0 9-16:
#А0 В 9-13 РАЗРЯДАХ #СГ6
 НОМЕР ПРЕДЫДУЩЕЙ ГРУППЫ РЕГИСТРОВ (@П@Г@Р),
 14-ЫЙ РАЗРЯД РАВЕН 1;
 ИЛИ 9-16 РАЗРЯДЫ РАВНЫ 0, ЕСЛИ СОДЕРЖИМОЕ ПРЕДЫДУЩЕЙ ГРУППЫ
 УПРЯТАНО В ПАМЯТЬ.
#А0 17-24:
#А0 В 17-21 РАЗРЯДАХ - НОМЕР РЕЗЕРВНОЙ ГРУППЫ РЕГИСТРОВ
 ДЛЯ ЭКСТРАКОДОВ (@Р@Г@Р), 22-ОЙ РАЗРЯД РАВЕН 1;
 ИЛИ 17-24 РАЗРЯДЫ РАВНЫ 0, ЕСЛИ РЕЗЕРВНАЯ ГРУППА
 РЕГИСТРОВ ОТСУТСТВУЕТ И
 СТАРОЕ СОДЕРЖИМОЕ РЕГИСТРОВ УПРЯТЫВАЕТСЯ В ПАМЯТЬ.
#А0 25-32:
#А0 РЕЗЕРВ. МОЖНО ИСПОЛЬЗОВАТЬ В
 КАЧЕСТВЕ РЕГИСТРА ТЕГА ДЛЯ #Б ЭЛЬБРУС-Б. #М
#ПЕРН 23_(13)_-_УКАЗАТЕЛЬ СТЕКА ДЛЯ ЗАПИСИ АДРЕСОВ
 ВОЗВРАТА ИЗ ПОДПРОГРАММ (@Р@А@В, @S@P@R@A@D@R);
#ПЕРН 24_(14)_-_ТАЙМЕР СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА
 (32 РАЗРЯДА, ИЗ КОТОРЫХ МЛАДШИЕ 16 РАЗРЯДОВ
 У АКТИВНОГО ПРОЦЕССА -
 В АППАРАТНОМ ТАЙМЕРЕ);
#ПЕРН 25:26 (15:16) - ЧАСЫ СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА
 (У АКТИВНОГО ПРОЦЕССА ЗДЕСЬ ТОЛЬКО ВРЕМЯ НА
 МОМЕНТ АКТИВИЗАЦИИ ПРОЦЕССА, ОСТАЛЬНОЕ - В АППАРАТНОМ СЧЕТЧИКЕ);
#СГ0 #НА #ВС6 _ #Б
#А0 РЕГИСТРЫ 27:34 (17-1С) - ОБЛАСТЬ УПРЯТЫВАНИЯ РЕГИСТРОВ: #М
#ПЕРН 27:30 (17:18) - СУММАТОРА;
#ПЕРН 31:32 (19:1А) - @Р@М@Р;
#ПЕРН 33 (1В) - СЧЕТЧИКА АДРЕСОВ СЛОВ (@С@Ч@А@С);
#ПЕРН 34 (1С) - РЕГИСТРА "ОТКУДА ПРИШЛИ" (@Р@О@П);
#ПЕРН 35_(1D)_-_РЕГИСТР АДРЕСА ПОЛЯ УПРЯТЫВАНИЯ (@Р@А@П@У, @S@V@F@A).
 СОДЕРЖИТ #Б МАТЕМАТИЧЕСКИЙ #М АДРЕС НАЧАЛА УЧАСТКА ПАМЯТИ,
 КУДА ПРОИЗВОДИТСЯ АППАРАТНОЕ УПРЯТЫВАНИЕ
 РЕГИСТРОВ ПРИ ЭКСТРАКОДАХ.
 УСТАНАВЛИВАЕТСЯ ОПЕРАЦИОННОЙ СИСТЕМОЙ.
 ПРИ КАЖДОМ УПРЯТЫВАНИИ В МИКРОПРОГРАММЕ УВЕЛИЧИВАЕТСЯ
 НА 16, А ПО КОМАНДЕ ВОЗВРАТА
 ИЗ ЭКСТРАКОДА - УМЕНЬШАЕТСЯ НА 16.
#ПЕРН 36_(1Е)_-_НОМЕР ПРОЦЕССА.
 У АКТИВНОГО ПРОЦЕССА РАВЕН СОДЕРЖИМОМУ @Р@Н@П.
#ПЕРН 37 (1F) - РЕЗЕРВ.
#А0 _#ВС7 _
#А0 #Ц 64-РАЗРЯДНЫЕ РЕГИСТРЫ:_
#А0 #Ц ----------------------_ #А0
#ПЕРН 001_4000_(01800)_-_СУММАТОР (@А).
#ПЕРН 001_4001_(01801)_-_РЕГИСТР МЛАДШИХ РАЗРЯДОВ (@Р@М@Р, @У).
#ПЕРН 001_4002_(01802)_-_ГЛАВНЫЙ РЕГИСТР ПРЕРЫВАНИЙ (@Г@Р@П, @I@N@T@R).
#ПЕРН 001_4003_(01803)_-_СЧЕТЧИК АДРЕСОВ СЛОВ (@С@Ч@А@С, @Р@С).
 СОДЕРЖИТ АДРЕС ТЕКУЩЕЙ ВЫПОЛНЯЕМОЙ
 КОМАНДЫ. ПРИ ВНЕШНИХ
 ПРЕРЫВАНИЯХ ТЕКУЩАЯ КОМАНДА ВСЕГДА
 ДОВЫПОЛНЯЕТСЯ ДО КОНЦА.
 (ИСПОЛЬЗУЕТСЯ 32 РАЗРЯДА).
#ПЕРН 001_4004_(01804)_-_РЕГИСТР "ОТКУДА ПРИШЛИ" (@Р@О@П, @Р@С@С@О@Р@У).
 СОДЕРЖИТ АДРЕС КОМАНДЫ ПОСЛЕДНЕЙ ПЕРЕДАЧИ
 УПРАВЛЕНИЯ. @С@Ч@А@С ДОЛЖЕН
 КОПИРОВАТЬСЯ В @Р@О@П В
 КОМАНДАХ ПЕРЕДАЧИ УПРАВЛЕНИЯ.
 (ИСПОЛЬЗУЕТСЯ 32 РАЗРЯДА).
#ПЕРН 001_4005_(01805)_-_РЕГИСТР ИСПОЛНИТЕЛЬНОГО
 АДРЕСА В КОМАНДЕ (@И@А@О@П, @D@A@D@R).
 (ИСПОЛЬЗУЕТСЯ 32 РАЗРЯДА).
#ПЕРН 001_4006_:_001_4017_(01806_:_0180F)_-_КОНСТАНТЫ И РАБОЧИЕ
 РЕГИСТРЫ МИКРОПРОГРАММ.
#НА #НА #ВС10 _
#Ц ПРОЧИЕ ХРАНИТЕЛИ ИНФОРМАЦИИ, #А0
#Ц ---------------------------- #А0
#Ц КОТОРЫЕ В ПРОГРАММАХ УДОБНО СЧИТАТЬ РЕГИСТРАМИ: #А0
#Ц ----------------------------------------------- #А0
#ПЕРН 000_2000_:_000_3777_(00400_:_007FF)
 - РЕГИСТРЫ ПРИПИСКИ / ЗАЩИТЫ (@Р@П)
 (1024 "20-РАЗРЯДНЫХ РЕГИСТРА").
#ПЕРН 000_4000_:_000_5777_(00800_:_00BFF)
 - ОБЬЕДИНЕНИЕ ПРИЗНАКОВ #Б БОБР, БИЗМ, #М
 РЕГИСТРИРУЮЩИХ ОБРАЩЕНИЕ И ЗАПИСЬ
 ПО ФИЗИЧЕСКИМ СТРАНИЦАМ
 (1024 "2-РАЗРЯДНЫХ РЕГИСТРА").
#ПЕРН 000_6000_:_001_1777_(00С00_:_00FFF0
 - ПРИЗНАКИ @Б@М@С@П, УПРАВЛЯЮЩИЕ СХЕМОЙ МОДИФИКАЦИИ
  СПИСКА ПРИОРИТЕТОВ СТРАНИЦ
 (1024 "1-РАЗРЯДНЫХ РЕГИСТРА").
#ПЕРН 001_0000_:_001_3777_(01000_:_017FF)
 - ПАМЯТЬ УЧЕТА ПРИОРИТЕТОВ СТРАНИЦ
 #Б ОЗУПС0 &И ОЗУПС1 #М (2048 "10-РАЗРЯДНЫХ РЕГИСТРА").
#ПЕРН 001_4000_:_001_7777_(01800_:_01FFF) - СПЕЦИАЛЬНЫЕ РЕГИСТРЫ:
#ПЕРН 001_4024_(01814)_-_РЕГИСТР ТЕГА КОМАНДЫ.
 СОДЕРЖИТ ТЕГ ТЕКУЩЕГО КОМАНДНОГО СЛОВА.
#ПЕРН 001_4025_(01815)_-_РЕГИСТР ТЕГА ОПЕРАНДА.
 СОДЕРЖИТ ТЕГ ПОСЛЕДНЕГО
 ПРОЧИТАННОГО ИЗ ПАМЯТИ ОПЕРАНДА.
#ПЕРН 001_4026_(01816)_-_РЕГИСТР ТЕГА РЕЗУЛЬТАТА.
 КОПИЯ ТЕГА СУММАТОРА,
 НАХОДЯЩЕГОСЯ В @Р@Р@Р.
 СОДЕРЖИТ "ДЕЖУРНЫЙ" ТЕГ,
 С КОТОРЫМ ПРОИСХОДИТ ЗАПИСЬ
 РЕЗУЛЬТАТА В ПАМЯТЬ. В БОЛЬШИНСТВЕ
 СЛУЧАЕВ ЗНАЧЕНИЕ ВСЕХ РАЗРЯДОВ
 ТЕГА РЕЗУЛЬТАТА РАВНО "0",
 ЧТО ОЗНАЧАЕТ АППАРАТНУЮ
 ИНТЕРПРЕТАЦИЮ ТЕГА: ЧИСЛО
 В НОВОМ РЕЖИМЕ, К КОТОРОМУ
 РАЗРЕШЕН ДОСТУП ПО ЧТЕНИЮ И ПО ЗАПИСИ.
 ТЕГ РЕЗУЛЬТАТА
 МОЖНО МЕНЯТЬ КОМАНДОЙ @W@M@O@D.
#ПЕРН 001_4031_(01819)_-_РЕГИСТР НОМЕРА ПРОЦЕССА.
 УСТАНАВЛИВАЕТСЯ
 В СООТВЕТСТВИИ С НОМЕРОМ ПРОЦЕССА,
 ЗАХВАТИВШЕГО ПРОЦЕССОР.
 ИСПОЛЬЗУЕТСЯ АППАРАТУРОЙ ДЛЯ
 ОПРЕДЕЛЕНИЯ ПРИНАДЛЕЖНОСТИ
 РЕГИСТРОВ ПРИПИСКИ ТЕКУЩЕМУ ПРОЦЕССУ.
#ПЕРН И Т. &Д.
#НА ДОСТУП КО ВСЕМ ЭТИМ РЕГИСТРАМ ПРЕДПОЛАГАЕТСЯ
 ОСУЩЕСТВЛЯТЬ ПРИВИЛЕГИРОВАННЫМИ КОМАНДАМИ ЧТЕНИЯ И
 ЗАПИСИ С ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ, РАВНЫМ
 НОМЕРУ РЕГИСТРА.
 ПОЛНЫЙ СПИСОК ВСЕХ РЕГИСТРОВ
 ПРИВЕДЕН В ОПИСАНИИ ПРОЦЕССОРА_-_ЭМУЛЯТОРА
 НА МИКРОУРОВНЕ.
#НА #НА #ВС7 _
#А0 #Ц #Б 4.8. СИСТЕМА ПРЕРЫВАНИЙ И ЭКСТРАКОДОВ #М
#НА ВНУТРЕННИЕ ПРЕРЫВАНИЯ ИСПОЛНЯЮТСЯ БЕЗУСЛОВНО
 И ИМЕЮТ БОЛЕЕ ВЫСОКИЙ ПРИОРИТЕТ ПО СРАВНЕНИЮ С ВНЕШНИМИ.
 ВНЕШНИЕ ПРЕРЫВАНИЯ ИСПОЛНЯЮТСЯ ПРИ ОТСУТСТВИИ
 ПРИЗНАКА @Б@В@П.
 ВСЕГО МОЖЕТ БЫТЬ 64 РАЗЛИЧНЫХ ТИПА ВНЕШНИХ ПРЕРЫВАНИЙ.
 ПОРЯДОК ОТРАБОТКИ ИХ ОПРЕДЕЛЯЕТСЯ НОМЕРОМ
 ПОЗИЦИИ В @Г@Р@П.
 ПРИ ОТСУТСТВИИ @Б@В@П ЗАПРОСЫ НА
 ОБРАБОТКУ ПРЕРЫВАНИЙ ОТ ВНЕШНИХ УСТРОЙСТВ
 ПОСТУПАЮТ ПО ШИНЕ @I@R@Q В @Ц@П В БЛОК
 РЕАКЦИИ НА ПРЕРЫВАНИЕ В ВИДЕ
 ЛОГИЧЕСКОЙ СУММЫ ЗАПРОСОВ ОТ ВСЕХ УСТРОЙСТВ.
 ПО ЭТОМУ СИГНАЛУ ПОСЛЕ ВЫПОЛНЕНИЯ ТЕКУЩЕЙ
 КОМАНДЫ ИНИЦИИРУЕТСЯ РАБОТА МИКРОПРОГРАММЫ
 ВХОДА В ПРЕРЫВАНИЕ, КОТОРАЯ
 ПРОИЗВОДИТ
 ЧТЕНИЕ ЗАПРОСОВ НА ПРЕРЫВАНИЕ В @Г@Р@П И
 ИХ ГАШЕНИЕ.
 ПРИ МНОГОПРОЦЕССОРНОЙ СИСТЕМЕ НА ВНЕШНИЕ
 ПРЕРЫВАНИЯ РЕАГИРУЕТ ТОТ ПРОЦЕССОР,
 КОТОРЫЙ ПЕРВЫЙ "ОТКЛИКНУЛСЯ" (У
 КОТОРОГО НЕТ @Б@В@П).
 ДЛЯ БОЛЕЕ РАВНОМЕРНОГО РАСПРЕДЕЛЕНИЯ РАБОТ МЕЖДУ
 ПРОЦЕССОРАМИ МОЖНО ЗАВЕСТИ В ОБЩЕЙ ПАМЯТИ
 "ШКАЛУ РАБОТ" НА ТОТ СЛУЧАЙ, ЕСЛИ
 "ОТКЛИКНУВШИЙСЯ" ПРОЦЕССОР ЗАНЯТ.
 РЕШЕНО ОТКАЗАТЬСЯ ОТ ГЛАВНОГО
 РЕГИСТРА МАСКИ В ПРОЦЕССОРЕ.
 ПРЕДПОЛАГАЕТСЯ ИМЕТЬ ТОЛЬКО РЕГИСТРЫ
 МАСОК В КОНТРОЛЛЕРАХ И УСТРОЙСТВАХ.
 ПРИ ОБРАБОТКЕ ВНЕШНИХ ПРЕРЫВАНИЙ
 СИСТЕМА САМА ОПРЕДЕЛЯЕТ КОЛИЧЕСТВО
 ЗАПРОСОВ ОТ ВНЕШНИХ УСТРОЙСТВ,
 АНАЛИЗИРУЯ СОСТОЯНИЕ @Г@Р@П,
 И САМА ЖЕ СБРАСЫВАЕТ РАЗРЯДЫ @Г@Р@П
 ПОСЛЕ ОБРАБОТКИ СООТВЕТСТВУЮЩИХ ПРЕРЫВАНИЙ.
#НА КАЖДОМУ ПРОЦЕССУ ОТВОДИТСЯ ОДНА ИЛИ
 НЕСКОЛЬКО ГРУПП РЕГИСТРОВ. САМЫЙ "НИЖНИЙ УРОВЕНЬ"
 ИСПОЛЬЗУЕТСЯ СОБСТВЕННО ПРОГРАММОЙ,
 ДРУГИЕ ИСПОЛЬЗУЮТСЯ ЭКСТРАКОДАМИ.
 В КАЖДОЙ ГРУППЕ В @Р@Р@Р
 В 17-21 РАЗРЯДАХ ЗАПИСЫВАЕТСЯ НОМЕР
 РЕЗЕРВНОЙ ГРУППЫ РЕГИСТРОВ,
 А 22-ОЙ РАЗРЯД УСТАНАВЛИВАЕТСЯ В 1;
 ЛИБО, ЕСЛИ РЕЗЕРВНАЯ ГРУППА РЕГИСТРОВ ОТСУТСТВУЕТ,
 17-24 РАЗРЯДЫ РАВНЫ 0.
 В СЛУЧАЕ ВЫЗОВА ЭКСТРАКОДА, ЕСЛИ
 17-24 РАЗРЯДЫ НЕ РАВНЫ 0,
 ПОСЛЕ ЗАПИСИ РЕГИСТРОВ @Ц@П В ОБЛАСТЬ
 УПРЯТЫВАНИЯ ТЕКУЩЕЙ ГРУППЫ РЕГИСТРОВ
 17-21 РАЗРЯДЫ ПЕРЕПИСЫВАЮТСЯ В @Р@Н@Г, И
 ПРОИСХОДИТ ПЕРЕХОД НА РЕЗЕРВНУЮ
 ГРУППУ. В @Р@Р@Р ЭТОЙ ГРУППЫ В 9-16 РАЗРЯДЫ ЗАПИСЫВАЕТСЯ
 НОМЕР ПРЕДЫДУЩЕГО НАБОРА РЕГИСТРОВ.
 ЕСЛИ ЖЕ В ПОЛЕ НОМЕРА РЕЗЕРВНОЙ ГРУППЫ РЕГИСТРОВ
 В 17-24 РАЗРЯДАХ 0,
 ПРОИСХОДИТ УПРЯТЫВАНИЕ РЕГИСТРОВ @Ц@П В
 ПАМЯТЬ, 9-16 РАЗРЯДЫ @Р@Р@Р УСТАНАВЛИВАЮТСЯ В 0,
 И РАБОТА ПРОИСХОДИТ НА ТОМ ЖЕ
 НАБОРЕ.
#НА ПРЕРЫВАНИЕ В ЭТОМ СМЫСЛЕ ЯВЛЯЕТСЯ
 ТАКИМ ЖЕ ПРОЦЕССОМ, ТОЛЬКО НОМЕР
 "САМОЙ НИЖНЕЙ" ГРУППЫ РЕГИСТРОВ У НЕГО ФИКСИРОВАН
 (НУЛЕВОЙ).
 НОМЕР ПРОЦЕССА ОБРАБОТКИ ПРЕРЫВАНИЯ ЗАПИСАН В
 ОБЛАСТИ УПРЯТЫВАНИЯ РЕГИСТРА НОМЕРА ПРОЦЕССА
 В ГРУППЕ РЕГИСТРОВ, ОТВЕДЕННЫХ ДЛЯ ОБРАБОТКИ
 ПРЕРЫВАНИЯ, А ТАКЖЕ В @П@Н@П В @Р@П ТОЙ СТРАНИЦЫ,
 КУДА БУДЕТ ПРОИСХОДИТЬ ПЕРЕДАЧА УПРАВЛЕНИЯ ПО
 ПРЕРЫВАНИЮ.
 ПРИ ВЫЗОВЕ ЭКСТРАКОДОВ РАБОТА ПРОИСХОДИТ
 ОТ ИМЕНИ ПРОЦЕССА, ВЫЗВАВШЕГО ЭКСТРАКОД.
 ПОЭТОМУ ПРИ ЭКСТРАКОДАХ СОДЕРЖИМОЕ @Р@Н@П
 НЕ МЕНЯЕТСЯ,
 А ПЕРЕД ПЕРЕДАЧЕЙ УПРАВЛЕНИЯ ЭКСТРАКОДУ
 УСТАНАВЛИВАЕТСЯ БЛОКИРОВКА
 ПРОВЕРКИ НОМЕРА ПРОЦЕССА.
#НА #ВС7 _
#А0 #Б #Ц 4.8.1._ПОРЯДОК ДЕЙСТВИЙ ПРИ ПРЕРЫВАНИЯХ: #М
#НА 1._В СЛУЧАЕ Т.&Н. &ПСЕВДОПРЕРЫВАНИЙ
 ОБРАБОТКА ИХ ПРОИСХОДИТ НА
 МИКРОПРОГРАММНОМ УРОВНЕ
 БЕЗ СМЕНЫ ГРУППЫ РЕГИСТРОВ
 И БЕЗ ПЕРЕДАЧИ УПРАВЛЕНИЯ
 ОПЕРАЦИОННОЙ СИСТЕМЕ.
 ПОСЛЕ ОБРАБОТКИ ПСЕВДОПРЕРЫВАНИЯ ПРОИЗВОДИТСЯ
 СБРОС ПРЕРЫВАНИЙ И
 ВОЗВРАТ НА МИКРОПРОГРАММУ
 ПО ПРЕРВАННОМУ АДРЕСУ.
#НА 2._ПРИ ВНЕШНИХ ПРЕРЫВАНИЯХ
 В РЕЖИМЕ БЛОЧНОЙ ПЕРЕДАЧИ ВЫДАЕТСЯ
 СИГНАЛ ПОДТВЕРЖДЕНИЯ ПРЕРЫВАНИЯ, ПРОИЗВОДИТСЯ
 ЧТЕНИЕ ЗАПРОСОВ НА ПРЕРЫВАНИЕ В @Г@Р@П, ИХ ГАШЕНИЕ
 И ПЕРЕДАЧА УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ.
#НА 3._ЕСЛИ УСТАНОВЛЕН ПРИЗНАК @П@О@П=1
 (В ЧАСТНОСТИ, @П@О@П=1 ВСЕГДА НА 0-Й ГРУППЕ РЕГИСТРОВ),
 ПОСЫЛАЕТСЯ ПРЕРЫВАНИЕ @П@П,
 А @Ц@П ПЕРЕВОДИТСЯ В РЕЖИМ "ОСТАНОВ".
#НА 4._ЕСЛИ @П@О@П НЕ УСТАНОВЛЕН,
 СТАРОЕ СОДЕРЖИМОЕ РЕГИСТРОВ УПРЯТЫВАЕТСЯ
 И ПОДГОТАВЛИВАЕТСЯ НОВЫЙ НАБОР РЕГИСТРОВ:
#А3 -_ПЕРЕПИСЫВАЕТСЯ СОДЕРЖИМОЕ
 СУММАТОРА, @Р@М@Р,
 #Б СЧАС, РОП, #М
 ЧАСОВ И
 ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ
 ПРЕРВАННОГО ПРОЦЕССА
 В ОБЛАСТЬ УПРЯТЫВАНИЯ РЕГИСТРОВ
 В @О@З@У МОДИФИКАТОРОВ;
#А3 -_В @Р@Н@Г ЗАПИСЫВАЕТСЯ НОМЕР ГРУППЫ РЕГИСТРОВ
 ОБРАБОТКИ ПРЕРЫВАНИЙ (0);
#А3 -_В @Р@Р@Р НОВОЙ ГРУППЫ В ПОЛЕ НОМЕРА ГРУППЫ
 ПРЕДЫДУЩЕГО НАБОРА ЗАПИСЫВАЕТСЯ НОМЕР
 ГРУППЫ ПРЕРВАННОГО ПРОЦЕССА;
#А3 -_В @П@Н@П В @Р@П ДОЛЖЕН
 БЫТЬ УСТАНОВЛЕННЫЙ СИСТЕМОЙ "НОМЕР ПРОЦЕССА
 ОБРАБОТКИ ПРЕРЫВАНИЙ",
 КУДА БУДЕТ ПРОИСХОДИТЬ ПЕРЕДАЧА УПРАВЛЕНИЯ ПО ПРЕРЫВАНИЮ.
#НА 5._В @Р@Р ГРУППЫ ОБРАБОТКИ ПРЕРЫВАНИЙ
 УСТАНАВЛИВАЮТСЯ: #Б ГЛ, БПНП, БВП, РД, РОА, БПТЧ,
 БЧОП, ПОП, ППУ. #М
 ОСТАЛЬНЫЕ РАЗРЯДЫ ГАСЯТСЯ.
 ТЕГ РЕЗУЛЬТАТА УСТАНАВЛИВАЕТСЯ В "0".
 #А3
 В СЛУЧАЕ МНОГОПРОЦЕССОРНОЙ СИСТЕМЫ ОДНОВРЕМЕННО
 С УСТАНОВКОЙ @Б@В@П ПРОИЗВОДИТСЯ ЗАХВАТ
 "ГЛОБАЛЬНОГО" СЕМАФОРА (МАТ. &АДРЕС СЕМАФОРА - FFF8 0840 Н),
 РАЗРЕШАЮЩЕГО ДОСТУП К ОБЩИМ РЕСУРСАМ СИСТЕМЫ.
 В СЛУЧАЕ ЗАНЯТОСТИ СЕМАФОРА МИКРОПРОГРАММА
 ЖДЕТ ЕГО ОСВОБОЖДЕНИЯ,
 И ТОЛЬКО ТОГДА ПРОИСХОДИТ ПЕРЕДАЧА
 УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ.
#НА 6._ВОССТАНАВЛИВАЮТСЯ @Р@Н@П,
 ЧАСЫ
 СЧЕТНОГО ВРЕМЕНИ
 ПРОЦЕССА ОБРАБОТКИ ПРЕРЫВАНИЙ.
 ТАЙМЕР @С@В ОСТАНАВЛИВАЕТСЯ.
 ЗНАЧЕНИЯ РЕГИСТРОВ #Б SР &И SPRADR #М НЕ ОПРЕДЕЛЕНЫ.
 СУММАТОР И @Р@М@Р НЕ МЕНЯЮТСЯ; ЧЕРЕЗ НИХ
 ВОЗМОЖНА ПЕРЕДАЧА ПАРАМЕТРОВ В ПРОГРАММНО-ИМИТИРОВАННЫХ
 ПРЕРЫВАНИЯХ.
#НА 7._В
 ИНДЕКС-РЕГИСТРЫ
 ПРОЦЕССА ОБРАБОТКИ ПРЕРЫВАНИЙ
 ПЕРЕПИСЫВАЮТСЯ МАТАМАТИЧЕСКИЙ И
 ФИЗИЧЕСКИЙ АДРЕСА КОМАНДЫ И/ИЛИ
 ОПЕРАНДА, ВЫЗВАВШЕГО ПРЕРЫВАНИЕ,
 А ТАКЖЕ ЗНАЧЕНИЯ @Р@Р, @Р@Р@Р, @Р@Н@П И ДРУГИХ РЕГИСТРОВ
 ПРЕРВАННОГО ПРОЦЕССА: #Б #ВС8 _
#А0 14 - ИАОП #М (В @Р@Э - ТОЛЬКО МЛАДШИЕ 15 РАЗРЯДОВ) #Б
#А0 13 - СЧАС #М (В @Р@Э - ТОЛЬКО 15 РАЗРЯДОВ)
#А0 12 - ФИЗИЧЕСКИЙ АДРЕС (R@G0 НА МОМЕНТ ПРЕРЫВАНИЯ) #Б
#А0 11 - РНП
#А0 10 - РР
#А0 _9 - РРР
#А0 _8 - РНГ &В 6-10 #М РАЗРЯДАХ
#А0 _7 - КОД ОПЕРАЦИИ АРБИТРА.
#А0 _6 - ТЕГ КОМАНДЫ
#А0 _5 - ТЕГ ОПЕРАДА
#А0 _4 - ПРАВАЯ ПОЛОВИНА КОМАНДНОГО СЛОВА
#А0 _3 - ЛЕВАЯ.
#НА 8._ПРОИЗВОДИТСЯ
 БЕЗУСЛОВНАЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ОПЕРАЦИОННОЙ СИСТЕМЕ
 ПО #Б МАТЕМАТИЧЕСКОМУ #М АДРЕСУ, ОПРЕДЕЛЯЕМОМУ ВЕКТОРОМ ПРЕРЫВАНИЙ.
 АДРЕС ПЕРЕДАЧИ УПРАВЛЕНИЯ: FFF8_0800_+ НОМЕР ПРЕРЫВАНИЯ_-_1.
#НА 9._ВОЗВРАТ ИЗ
 ПРЕРЫВАНИЯ ПРОИЗВОДИТСЯ ПО СПЕЦИАЛЬНОЙ КОМАНДЕ,
 ПОДАВАЕМОЙ ИЗ ДИСПЕТЧЕРСКОГО РЕЖИМА.
 ПРИ ЭТОМ
 ПРОИСХОДИТ УПРЯТЫВАНИЕ
 ЧАСОВ СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА
 ОБРАБОТКИ ПРЕРЫВАНИЙ И
 ВОССТАНОВЛЕНИЕ
 СОДЕРЖИМОГО РЕГИСТРОВ АКТИВИРУЕМОГО ПРОЦЕССА:
 В @Р@Н@Г ЗАПИСЫВАЕТСЯ ЕГО
 ЗНАЧЕНИЕ ИЗ @Р@Р@Р
 ОБРАБОТКИ ПРЕРЫВАНИЙ,
 ВОССТАНАВЛИВАЕТСЯ СОДЕРЖИМОЕ СУММАТОРА,
 #Б РМР, СЧАС, РОП, РНП, #М
 А ТАКЖЕ РЕГИСТР И ТАЙМЕР
 СЧЕТНОГО ВРЕМЕНИ ПРОЦЕССА.
 ЗНАЧЕНИЯ @Р@Р И @Р@Р@Р ПЕРЕПИСЫВАЮТСЯ В ИСПОЛНИТЕЛЬНУЮ ЧАСТЬ
 (В ЧАСТНОСТИ, ТЕГ, ПРИЗНАКИ @П@П@К, @П@И@А И Т.&Д.).
#НА #ВС8 _
#А0 #Б #Ц 4.8.2._ПОРЯДОК ДЕЙСТВИЙ ПРИ ЭКСТРАКОДАХ: #М
#НА 1._ЕСЛИ НОМЕР РЕЗЕРВНОЙ
 ГРУППЫ РЕГИСТРОВ НЕ 0, ПРОИСХОДИТ ПЕРЕПИСЬ
#Б СЧАС &И РОП #М
 В ОБЛАСТЬ УПРЯТЫВАНИЯ
 РЕГИСТРОВ В @О@З@У МОДИФИКАТОРОВ,
 В РЕГИСТР НОМЕРА
 ГРУППЫ @Р@Н@Г ЗАПИСЫВАЕТСЯ НОМЕР РЕЗЕРВНОЙ
 ГРУППЫ, А В РЕЗЕРВНОЙ ГРУППЕ В ПОЛЕ НОМЕРА ГРУППЫ ПРЕДЫДУЩЕГО
 НАБОРА РЕГИСТРОВ ЗАПИСЫВАЕТСЯ НОМЕР СМЕНЯЕМОЙ ГРУППЫ,
 СТАРОЕ СОДЕРЖИМОЕ @Р@А@П@У
 УВЕЛИЧИВАЕТСЯ НА 16 ДЛЯ ОРГАНИЗАЦИИ ОБЛАСТИ УПРЯТЫВАНИЯ
 В ПАМЯТИ И ПЕРЕПИСЫВАЕТСЯ В @Р@А@П@У НОВОЙ ГРУППЫ.
 Р@Н@П НЕ МЕНЯЕТСЯ.
#НА 2._ЕСЛИ В ПОЛЕ НОМЕРА РЕЗЕРВНОЙ
 ГРУППЫ 0, ПРОИЗВОДИТСЯ УПРЯТЫВАНИЕ РЕГИСТРОВ В ПАМЯТЬ
 ПО МАТЕМАТИЧЕСКОМУ АДРЕСУ, УКАЗАННОМУ В РЕГИСТРЕ @Р@А@П@У,
 С УСТАНОВКОЙ ЗАПРЕТА ЗАПИСИ ПО ТЕГУ (4 РАЗРЯД ТЕГА
 ПРИ ЗАПИСИ РЕГИСТРОВ = 1).
 В @Р@Р@Р В ПОЛЕ НОМЕРА ГРУППЫ ПРЕДЫДУЩЕГО НАБОРА
 РЕГИСТРОВ ЗАПИСЫВАЕТСЯ 0.
 СОДЕРЖИМОЕ @Р@А@П@У УВЕЛИЧИВАЕИСЯ НА 16.
#НА 3._В @Р@Р ЭКСТРАКОДА
 УСТАНАВЛИВАЮТСЯ: #Б ГЛ, РД, РОА, БЧОП,
 ППУ. #М
 ПРИЗНАКИ @Б@П@П@У, @Б@В@П И @П@О@П КОПИРУЮТСЯ
 ИЗ ПРЕДЫДУЩЕЙ ГРУППЫ.
 ОСТАЛЬНЫЕ РАЗРЯДЫ ГАСЯТСЯ.
 ТЕГ РЕЗУЛЬТАТА УСТАНАВЛИВАЕТСЯ В "0".
#НА 4._В ИНДЕКС-РЕГИСТРЫ ЭКСТРАКОДА ПЕРЕДАЮТСЯ:
#А0 15_-_АДРЕС НАЧАЛА РАБОЧЕГО ПОЛЯ ЭКСТРАКОДА
 #СГ5 В ОБЛАСТИ УПРЯТЫВАНИЯ (НОВОЕ
 ЗНАЧЕНИЕ @Р@А@П@У, УМЕНЬШЕННОЕ НА 6) #СГ0
#А0 14_-_ИСПОЛНИТЕЛЬНЫЙ АДРЕС ЭКСТРАКОДА #СГ5
 #Б (МАТЕМАТИЧЕСКИЙ, #М
 32 РАЗРЯДА - В НР, 15 РАЗРЯДОВ - В РЭ) #СГ0
#А0 13_-_@С@Ч@А@С ( В РЭ - ТОЛЬКО 15 МЛ.&РАЗРЯДОВ)
#А0 12_-_ФИЗИЧЕСКИЙ АДРЕС #Б
#А0 11_-_РНП
#А0 10_-_РР
#А0 _9_-_РРР
#А0 _8_-_РНГ #М В 6-10 РАЗРЯДАХ
#А0 _7_-_КОД ОПЕРАЦИИ ЭКСТРАКОДА
#А0 _6_-_ТЕГ КОМАНДЫ
#А0 _5_-_ТЕГ ОПЕРАНДА
#А0 _4_-_ПРАВАЯ ПОЛОВИНА КОМАНДНОГО СЛОВА
#А0 _3_-_ЛЕВАЯ.
#А3 СУММАТОР И @Р@М@Р ПРИ ЭКСТРАКОДАХ
 НЕ УПРЯТЫВАЮТСЯ И НЕ ВОССТАНАВЛИВАЮТСЯ.
 ИХ МОЖНО ИСПОЛЬЗОВАТЬ ДЛЯ
 ПЕРЕДАЧИ ПАРАМЕТРОВ. #СГ0
#НА 5._АДРЕСА ВХОДА В ЭКСТРАКОД:
#А0 FFF8_0850_-_НОВЫЕ ЭКСТРАКОДЫ @М@К@Б-8601;
#А0 FFF8_0851_-_СТАРЫЕ ЭКСТРАКОДЫ @Б@Э@С@М-6;
#А0 FFF8_0852_-_ЭКСТРАКОДЫ #СГ12 #Б ЭЛЬБРУС-Б, #М КОМАНДЫ
#Б ЭЛЬБРУС-Б, #М КОТОРЫЕ РЕДКО ИСПОЛЬЗУЮТСЯ
 ИЛИ СЛОЖНО РЕАЛИЗОВАТЬ; #СГ0
#А0 FFF8_0853_-_ЗАПРЕЩЕННИЕ КОМАНДЫ, #СГ12 В ТОМ ЧИСЛЕ
 ПРИВИЛЕГИРОВАННЫЕ НЕ В @Р@Д, А ТАКЖЕ РЕЗЕРВНЫЕ КОДЫ ОПЕРАЦИЙ. #СГ0
#НА 6._ПОСЛЕ
 УСТАНОВКИ ПРОГРАММНОГО СЧЕТЧИКА
 СОГЛАСНО КОДУ ЭКСТРАКОДА ДЛЯ ПЕРЕДАЧИ
 УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ
 В ОТСУТСТВИЕ @Б@П@П@У ПРОВЕРЯЮТСЯ 1-10 РАЗРЯДЫ
 НОВОГО ЗНАЧЕНИЯ @Р@А@П@У.
 ЕСЛИ ТАМ НЕ  "0",
 ПРОИСХОДИТ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ЭКСТРАКОДУ, В ПРОТИВНОМ СЛУЧАЕ
 ПРОИСХОДИТ ПРЕРЫВАНИЕ
 "ПЕРЕПОЛНЕНИЕ ПОЛЯ УПРЯТЫВАНИЯ".
#НА 7._ВОЗВРАТ
 ИЗ ЭКСТРАКОДА
 ПРОИЗВОДИТСЯ ПО СПЕЦИАЛЬНОЙ КОМАНДЕ,
 ПОДАВАЕМОЙ ИЗ ДИСПЕТЧЕРСКОГО РЕЖИМА.
 ПРИ ЭТОМ, ЕСЛИ НОМЕР ПРЕДЫДУЩЕГО НАБОРА
 РЕГИСТРОВ 0, ПРОИСХОДИТ ВОССТАНОВЛЕНИЕ
 СОДЕРЖИМОГО РЕГИСТРОВ В ТОЙ ЖЕ ГРУППЕ ИЗ ПАМЯТИ.
 СОДЕРЖИМОЕ @Р@А@П@У УМЕНЬШАЕТСЯ НА 16.
 ЕСЛИ В ПОЛЕ НОМЕРА ПРЕДЫДУЩЕГО НАБОРА
 НЕ 0, ТО В @Р@Н@Г ЗАПИСЫВАЕТСЯ ЕГО СОДЕРЖИМОЕ,
 ВОССТАНАВЛИВАЕТСЯ СОДЕРЖИМОЕ
 #Б СЧАС &И РОП. #М
#НА 8._ПРЕЖНЕЕ СОДЕРЖИМОЕ @Р@А@П@У ВОССТАНАВЛИВАЕТСЯ
 ВМЕСТЕ С ВОССТАНОВЛЕНИЕМ ПРЕЖНЕГО НОМЕРА ГРУППЫ.
#Б БППУ, ПОП &И БВП #М
 КОПИРУЮТСЯ "ОБРАТНО".
 ИЗМЕНЯЕТСЯ СООТВЕТСТВУЮЩИМ ОБРАЗОМ
 @П@П@К И УВЕЛИЧИВАЕТСЯ @С@Ч@А@С,
 ЕСЛИ КОМАНДА ЭКСТРАКОДА ПРАВАЯ.
#НА 9._ПОСЛЕ ПОЛНОГО ВОССТАНОВЛЕНИЯ РЕГИСТРОВ
 ПРИ НАЛИЧИИ @Р@Ш ДОЛЖНО БЫТЬ ШАГОВОЕ
 ПРЕРЫВАНИЕ
 (КОМАНДА ВОЗВРАТА ИЗ
 ЭКСТРАКОДА ЗАКАНЧИВАЕТСЯ ПРИЗНАКОМ @П@М@И,
 РАЗРЕШАЮЩИМ ЭТО ПРЕРЫВАНИЕ).
#А0 _
#А0 #ВС9 _ #Б #Ц ПОРЯДОК УПРЯТЫВАНИЯ РЕГИСТРОВ В ПАМЯТЬ: #М
#А0 _
#А3 0:6___-_МОДИФИКАТОРЫ 1-14 (ПО 2 В СЛОВО)
#А3 7_____-_СЧЕТЧИК МАГАЗИНА, УКАЗАТЕЛЬ СТЕКА АДРЕСОВ ВОЗВРАТА #Б
#А3 8_____-_СЧАС, РОП
#А3 9_____-_РР, РРР #М
#А3 10:15_-_РАБОЧЕЕ ПОЛЕ ЭКСТРАКОДА
#НА #НА #ВС10 _
#А0 #Ц #Б
 4.8.3. ПЕРЕЧИСЛИМ ВСЕ ВОЗМОЖНЫЕ ПЕРЕРЫВАНИЯ
#А0 #Ц И ПРИЧИНЫ ИХ ВОЗНИКНОВЕНИЯ
#НА
#ПЕРН 1_-_ОТСУТСТВУЮЩИЙ БЛОК ПАМЯТИ.
#А0 ВЫРАБАТЫВАЕТСЯ СХЕМОЙ УПРАВЛЕНИЯ
 @О@З@У ПРИ ОБРАЩЕНИИ К ОТСУТСТВУЮЩЕМУ БЛОКУ ПАМЯТИ
 (СИГНАЛ @A@M@B@I ОБЩЕЙ ШИНЫ).
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
 ПЕРЕДАЕТСЯ УПРАВЛЕНИЕ ОПЕРАЦИОННОЙ СИСТЕМЕ.
#ПЕРН 2_-_МНОГОКРАТНАЯ ОШИБКА.
#А0 ВЫРАБАТЫВАЕТСЯ СХЕМОЙ УПРАВЛЕНИЯ ПАМЯТЬЮ ПРИ СБОЯХ
 @О@З@У (СИГНАЛ @D@E@R@I ОБЩЕЙ ШИНЫ).
 СПЕЦИАЛЬНОЕ ПРЕРЫВАНИЕ. ПЕРЕДАЕТСЯ
 СООБЩЕНИЕ ПУЛЬТОВОМУ ПРОЦЕССОРУ; ОСТАНОВ.
 ДЕЛАЕТСЯ СБРОС КЭША.
#ПЕРН 3_-_"TIME-OUT" ПРИ ОБРАЩЕНИИ К @О@З@У.
#А0 ВЫРАБАТЫВАЕТСЯ ПРИ ДЛИТЕЛЬНОМ ОТСУТСТВИИ
 ОТВЕТА ПРИ ОБРАЩЕНИИ К @О@З@У (100 МИКРОСЕКУНД).
 ПЕРЕДАЕТСЯ СООБЩЕНИЕ ПУЛЬТОВОМУ ПРОЦЕССОРУ; ОСТАНОВ.
 ДЕЛАЕТСЯ СБРОС КЭША.
#ПЕРН 4_-_"TIME-OUT" ПРИ ОБРАЩЕНИИ К ШИНЕ.
#А0 ВЫРАБАТЫВАЕТСЯ АРБИТРОМ @Ц@П ПРИ ДЛИТЕЛЬНОМ
 ОТСУТСТВИИ ОТВЕТА ПРИ ОБРАЩЕНИИ К ШИНЕ (100 МИКРОСЕКУНД).
 ПЕРЕДАЕТСЯ СООБЩЕНИЕ ПУЛЬТОВОМУ ПРОЦЕССОРУ; ОСТАНОВ.
 ДЕЛАЕТСЯ СБРОС КЭША.
#ПЕРН 5_-_ПРОГРАММНОЕ ПРЕРЫВАНИЕ.
#А0 ВОЗНИКАЕТ ПО ЗАПРОСУ
 ОПЕРАЦИОННОЙ СИСТЕМЫ,
 ЗАДАЮЩЕЙ КОМАНДУ @W@M@O@D С АДРЕСОМ 01С13
 (ПРОГРАММНОЕ ПРЕРЫВАНИЕ), ИЛИ
 ПРИ УСТАНОВКЕ В "0" ВСЕХ 32 РАЗРЯДОВ
 ТАЙМЕРА СЧЕТНОГО
 ВРЕМЕНИ.
 РАЗЛИЧАЮТСЯ РАЗРЯДОМ В @Г@Р@П:
 ТАЙМЕР СЧЕТНОГО ВРЕМЕНИ РАВЕН 0 - 40 РАЗРЯД @Г@Р@П =1;
 УСТАНОВКА ПРОГРАММНО-ИМИТИРОВАННОГО ПРЕРЫВАНИЯ
 КОМАНДОЙ @W@M@O@D ИЛИ ПО ЗАПРОСУ @П@П - 41 РАЗРЯД @Г@Р@П =1.
 РАЗРЕШАЕТСЯ ПРИ НАЛИЧИИ @П@М@И (@ПРИЗНАКА ПОСЛЕДНЕЙ
 @МИКРО@ИНСТРУКЦИИ КОМАНДЫ)
 И ОТСУТСТВИИ @Б@В@П.
 ВНЕШНЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 6_-_РЕЗЕРВ.
#ПЕРН 7_-_ОТСУТСТВУЮЩИЙ АДРЕС ПАМЯТИ В НОВОМ РЕЖИМЕ.
#А0 ВОЗНИКАЕТ ПРИ ПОПЫТКЕ ОБРАЩЕНИЯ К МАТЕМАТИЧЕСКОЙ
 ПАМЯТИ (ИЛИ ФИЗИЧЕСКОЙ ПРИ БЛОКИРОВКЕ ПРИПИСКИ),
 ЕСЛИ 21-32 РАЗРЯДЫ АДРЕСА
 НЕ СОВПАДАЮТ С 20-ЫМ РАЗРЯДОМ.
 ПРЕРЫВАНИЕ БЛОКИРУЕТ ЗАПУСК АРБИТРА.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 8_-_ОТРИЦАТЕЛЬНЫЙ НОМЕР СТРАНИЦЫ У КОМАНДЫ.
#А0 ВОЗНИКАЕТ ПРИ ОТСУТСТВИИ @Б@П И @Р@О@А, ЕСЛИ
 НА ВХОД СХЕМЫ ПРИПИСКИ ПОСТУПИЛ ОТРИЦАТЕЛЬНЫЙ
 МАТЕМАТИЧЕСКИЙ АДРЕС
 КОМАНДНОГО СЛОВА ("1" В 20 РАЗРЯДЕ).
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 9_-_ОТРИЦАТЕЛЬНЫЙ НОМЕР СТРАНИЦЫ У ОПЕРАНДА.
#А0 ВОЗНИКАЕТ ПРИ ОТСУТСТВИИ @Б@П И @Р@О@А, ЕСЛИ НА ВХОД СХЕМЫ
 ПРИПИСКИ ПОСТУПИЛ ОТРИЦАТЕЛЬНЫЙ
 МАТЕМАТИЧЕСКИЙ АДРЕС ОПЕРАНДА
 ("1" В 20 РАЗРЯДЕ).
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 10_-_ПРОГРАММНАЯ ИНТЕРПРЕТАЦИЯ ТЕГА КОМАНДЫ.
#А0 ПРОИСХОДИТ ВО ВРЕМЯ ВЫБОРКИ
 КОМАНДНОГО СЛОВА ИЗ @О@З@У
 ПРИ ОТСУТСТВИИ @Б@П@И@Н@Т,
 ЕСЛИ 72 РАЗРЯД ТЕГА КОМАНДЫ УСТАНОВЛЕН В "1".
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 11_-_ПРОГРАММНАЯ ИНТЕРПРЕТАЦИЯ ТЕГА ОПЕРАНДА.
#А0 ПРОИСХОДИТ ПРИ ОТСУТСТВИИ @Б@П@И@Н@Т
 ВО ВРЕМЯ
 ВЫБОРКИ ОПЕРАНДА ИЗ @О@З@У,
 ЕСЛИ 72 РАЗРЯД ТЕГА ОПЕРАНДА УСТАНОВЛЕН В "1".
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 12_-_ЗАЩИТА АДРЕСА ПРИ ЧТЕНИИ.
#А0 ВОЗНИКАЕТ ПРИ "0" @Б@П@Т@Ч, ЕСЛИ
 ПРИ ЧТЕНИИ ИЗ ПАМЯТИ СЛОВО ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ
 СОДЕРЖИТ "1" В 67 РАЗРЯДЕ ТЕГА. ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 13_-_КОНТРОЛЬ КОМАНДЫ.
#А0 ВОЗНИКАЕТ ПРИ ВЫБОРКЕ В КАЧЕСТВЕ
 КОМАНДЫ СЛОВА, СОДЕРЖАЩЕГО "0" В 65 РАЗРЯДЕ ТЕГА.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 14_-_МАТЕМАТИЧЕСКИЙ АДРЕС РАВЕН 0.
#А0 ПРОИСХОДИТ ПРИ ЗАПИСИ НУЛЕВОГО
 МАТЕМАТИЧЕСКОГО АДРЕСА В РЕГИСТР
 ИСПОЛНИТЕЛЬНОГО АДРЕСА @Ц@П.
 ПСЕВДОПРЕРЫВАНИЕ.
 ОБРАБОТКА ЕГО ПРОИСХОДИТ НА МИКРОПРОГРАММНОМ УРОВНЕ.
 ПОСЛЕ ОБРАБОТКИ - ВОЗВРАТ В ПРЕРВАННУЮ КОМАНДУ.
#ПЕРН 15_-_ЧУЖОЙ РЕГИСТР ПРИПИСКИ ПРИ
 ЧТЕНИИ/ЗАПИСИ ОПЕРАНДА.
#А0 ВОЗНИКАЕТ ПРИ НЕСОВПАДЕНИИ ПОЛЯ НОМЕРА
 ПРОЦЕССА В РЕГИСТРЕ ПРИПИСКИ С СОДЕРЖИМЫМ @Р@Н@П ПРИ
 ЧТЕНИИ/ЗАПИСИ ОПЕРАНДА,
 ЕСЛИ НЕ УСТАНОВЛЕНЫ #Б БП &И БПНП, #М
 ЗА ИСКЛЮЧЕНИЕМ СЛУЧАЯ, КОГДА В @П@Н@П ЧИСЛО 255 (СТРАНИЦА
 ДОСТУПНА ВСЕМ ПРОЦЕССАМ). ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 16_-_ЧУЖОЙ РЕГИСТР ПРИПИСКИ ПРИ ВЫБОРКЕ КОМАНД.
#А0 ВОЗНИКАЕТ ПРИ НЕСОВПАДЕНИИ ПОЛЯ НОМЕРА
 ПРОЦЕССА В РЕГИСТРЕ ПРИПИСКИ С СОДЕРЖИМЫМ @Р@Н@П
 ПРИ ВЫБОРКЕ ИЗ ПАМЯТИ КОМАНДНОГО СЛОВА,
 ЕСЛИ НЕ УСТАНОВЛЕНЫ #Б БП &И БПНП, #М
 ЗА ИСКЛЮЧЕНИЕМ СЛУЧАЯ,
 КОГДА В @П@Н@П ЧИСЛО 255. ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 17_-_ЗАЩИТА СТРАНИЦЫ ПРИ ОБРАЩЕНИИ.
#А0 ВОЗНИКАЕТ ПРИ ОТСУТСТВИИ @Б@П И
 @Б@З@О, ЕСЛИ ОПЕРАНД КОМАНДЫ ЧТЕНИЯ/ЗАПИСИ
 НАХОДИТСЯ В ЗАЩИЩЕННОЙ СТРАНИЦЕ, Т.&Е. &СООТВЕТСТВУЮЩИЙ @Р@П
 СОДЕРЖИТ "0" В 10 РАЗРЯДЕ.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
 ПРИ ВЫБОРКЕ КОМАНДНОГО СЛОВА ЭТОГО ПРЕРЫВАНИЯ НЕ ПРОИСХОДИТ.
#ПЕРН 18_-_ЗАЩИТА СТРАНИЦЫ ПРИ ЗАПИСИ.
#А0 ВОЗНИКАЕТ ПРИ ОТСУТСТВИИ @Б@П И @Б@З@З, ЕСЛИ ОПЕРАНД
 КОМАНДЫ ЗАПИСИ В ПАМЯТЬ НАХОДИТСЯ В
 ЗАЩИЩЕННОЙ СТРАНИЦЕ, Т.&Е. &СООТВЕТСТВУЮЩИЙ
 РЕГИСТР ПРИПИСКИ СОДЕРЖИТ "0" В 9 РАЗРЯДЕ.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 19_-_ЗАЩИТА ВЫБОРКИ КОМАНДЫ.
#А0 ВОЗНИКАЕТ ПРИ ВЫБОРКЕ В КАЧЕСТВЕ
 КОМАНДЫ СЛОВА, СОДЕРЖАЩЕГО "1" В 69
 РАЗРЯДЕ ТЕГА. ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 20_-_ЗАЩИТА ПЕРЕДАЧИ УПРАВЛЕНИЯ.
#А0 ВОЗНИКАЕТ ПРИ ПОПЫТКЕ ПЕРЕДАЧИ УПРАВЛЕНИЯ НА ЛЕВУЮ КОМАНДУ
 СЛОВА, СОДЕРЖАЩЕГО "1" В 70 РАЗРЯДЕ ТЕГА.
 КОМАНДЫ С ТАКИМ ТЕГОМ  ДОСТУПНЫ ПО ВЫБОРКЕ "СВЕРХУ",
 Т.&Е. &ПО @С@Ч@А@С, А ТАКЖЕ ПРИ ВОЗВРАТЕ ИЗ
 ПРЕРЫВАНИЯ И ЭКСТРАКОДА.
 (ВОЗВРАТ ИЗ ПРЕРЫВАНИЯ И ЭКСТРАКОДА
 ПЕРЕДАЧЕЙ УПРАВЛЕНИЯ НЕ СЧИТАЕТСЯ).
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 21_-_ЗАЩИТА АДРЕСА ПРИ ЗАПИСИ.
#А0 ВОЗНИКАЕТ ПРИ "0" @Б@П@Т@З, ЕСЛИ ПРИ ЗАПИСИ
 В ПАМЯТЬ СЛОВО ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ
 СОДЕРЖИТ "1" В 68 РАЗРЯДЕ ТЕГА (СИГНАЛ @P@W@R@I
 ОБЩЕЙ ШИНЫ).
 В МИКРОПРОГРАММЕ РЕАКЦИИ НА ПРЕРЫВАНИЕ
 СРАЗУ ЖЕ ДЕЛАЕТСЯ СБРОС КЭША, Т.&К. &ЗАПИСЬ В КЭШ
 ПРОИСХОДИТ НЕЗАВИСИМО ОТ ЭТОГО ПРЕРЫВАНИЯ.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 22_-_ЧУЖОЙ СУММАТОР.
#А0 ВОЗНИКАЕТ ПРИ НЕСОВПАДЕНИИ
 66 БИТА ТЕГА ТЕКУЩЕГО КОМАНДНОГО СЛОВА
 С ПРИЗНАКОМ @Р@Э В @Р@Р@Р, ЕСЛИ @Б@Ч@С
 УСТАНОВЛЕН В "0";
 ПРОИСХОДИТ В МОМЕНТ
 СМЕНЫ РЕЖИМОВ. ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 23_-_ЧУЖОЙ ОПЕРАНД.
#А0 ВОЗНИКАЕТ ПРИ НЕСОВПАДЕНИИ 66 БИТА ТЕГА ОПЕРАНДА С ПРИЗНАКОМ @Р@Э
 В @Р@Р.
 ПРЕРЫВАНИЕ ВОЗМОЖНО ПРИ СОВМЕСТНОМ ИСПОЛЬЗОВАНИИ "НОВЫХ"
 И "СТАРЫХ" ПРОГРАММ;
 БЛОКИРУЕТСЯ ПРИЗНАКОМ @Б@Ч@О@П. ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 24_-_ЗАПРОС МОДИФИКАЦИИ ПРИОРИТЕТОВ СТРАНИЦ.
#А0 ВОЗНИКАЕТ ПРИ ОБРАЩЕНИИ
 К ФИЗИЧЕСКОЙ СТРАНИЦЕ,
 ПРИЗНАК #Б БМСП #М КОТОРОЙ
 УСТНОВЛЕН В "1".
 ЗАПУСК АРБИТРА НЕ БЛОКИРУЕТСЯ. ПСЕВДОПРЕРЫВАНИЕ.
#ПЕРН 25_-_ОСТАНОВ ПРИ СОВПАДЕНИИ АДРЕСОВ ПО ЗАПРОСУ @П@П.
#А0 ВОЗНИКАЕТ
 ПРИ ОБРАЩЕНИИ К
 МАТЕМАТИЧЕСКОМУ АДРЕСУ @О@З@У
 (ИЛИ ФИЗИЧЕСКОМУ С БЛОКИРОВКОЙ ПРИПИСКИ)
 С @К@О@П
 АРБИТРА,
 ПО АДРЕСУ КОТОРЫХ В @О@З@У ОСТАНОВА
 0 ИЛИ 1 ПУЛЬТОВЫМ
 ПРОЦЕССОРОМ ЗАНЕСЕН БИТ ОСТАНОВА (0).
 ПРЕРЫВАНМЕ ВОЗМОЖНО ПРИ ОТСУТСТВИИ
 БЛОКИРОВКИ ОСТАНОВА ПО АДРЕСУ В СТАТУСНОМ РЕГИСТРЕ @Ц@П
 (СМ.&П.6.6).
 УСТАНАВЛИВАЕТСЯ #Б HALT ЦП. #М
 ПЕРЕДАЕТСЯ СООБЩЕНИЕ @П@П; ОСТАНОВ.
#ПЕРН 26_-_"TIME-OUT" ПРИ БЛОКИРОВКЕ ВНЕШНИХ ПРЕРЫВАНИЙ.
#А0 ВОЗНИКАЕТ, ЕСЛИ СЛИШКОМ ДОЛГО
 ПРОИСХОДИТ РАБОТА С БЛОКИРОВКОЙ ВНЕШНИХ ПРЕРЫВАНИЙ.
 ПРЕРЫВАНИЕ ИНИЦИИРУЕТСЯ ПРИ СРАБАТЫВАНИИ МИКРОСЕКУНДНОГО
 ТАЙМЕРА, КОТОРЫЙ НАЧИНАЕТ "РАБОТАТЬ" ПРИ
 УСТАНОВКЕ
 БЛОКИРОВКИ ВНЕШНИХ ПРЕРЫВАНИЙ.
 ПРЕРЫВАНИЕ РАЗРЕШАЕТСЯ ПРИ НАЛИЧИИ СИГНАЛА @П@М@И.
 ЕСЛИ ПРЕРЫВАНИЕ ПРОИЗОШЛО НА 0-Й ГРУППЕ
 РЕГИСТРОВ, ГДЕ @П@О@П УСТАНОВЛЕН В "1", ПРОИСХОДИТ ОСТАНОВ И ПЕРЕДАЕТСЯ
 СООБЩЕНИЕ ПУЛЬТОВОМУ ПРОЦЕССОРУ (ПРЕРЫВАНИЕ С
 НОМЕРОМ 32);
 ИНАЧЕ - ВНУТРЕННЕЕ ПРЕРЫВАНИЕ С ПЕРЕДАЧЕЙ УПРАВЛЕНИЯ
 ОПЕРАЦИОННОЙ СИСТЕМЕ.
#ПЕРН 27_-_ВНЕШНИЕ ПРЕРЫВАНИЯ.
#А0 ЛОГИЧЕСКАЯ СУММА ЗАПРОСОВ НА ПРЕРЫВАНИЕ
 ОТ КОНТРОЛЛЕРОВ ВНЕШНИХ УСТРОЙСТВ
 (СИГНАЛ @I@R@Q ОБЩЕЙ ШИНЫ). РАЗРЕШАЕТСЯ
 ПРИ НАЛИЧИИ ПРИЗНАКА @П@М@И И ОТСУТСТВИИ @Б@В@П.
#ПЕРН 28 - HALT.
#А0 ВОЗНИКАЕТ:
#А0 _-_ПРИ УСТАНВКЕ ОСТАНОВА ИЗ @П@П #Б (HALT ПП #М В
 СТАТУСНОМ РЕГИСТРЕ @Ц@П =1);
#А0 _-_ПРИ ВОЗНИКНОВЕНИИ ЛЮБОГО
 ПРЕРЫВАНИЯ И ПРИЗНАКЕ @П@О@П,
 УСТАНОВЛЕННОМ В "1" (ПРЕРЫВАНИЕ В ПРЕРЫВАНИИ);
#А0 _-_ПО КОМАНДЕ "ОСТАНОВ".
#А0 РАЗРЕШАЕТСЯ ПРИ
 НАЛИЧИИ @П@М@И. ПЕРЕДАЕТСЯ СООБЩЕНИЕ ПУЛЬТОВОМУ
 ПРОЦЕССОРУ; ОСТАНОВ.
#ПЕРН 29_-_ШАГОВОЕ ПРЕРЫВАНИЕ.
#А0 ВОЗНИКАЕТ ПРИ НАЛИЧИИ @Р@Ш В @Р@Р@Р ПОСЛЕ ВЫПОЛНЕНИЯ
 КАЖДОЙ КОМАНДЫ, ДАЖЕ ЕСЛИ В ХОДЕ ВЫПОЛНЕНИЯ ЕЕ
 ЗАРЕГИСТРИРОВАНО ВНЕШНЕЕ ПРЕРЫВАНИЕ.
 РАЗРЕШАЕТСЯ ПРИ НАЛИЧИИ СИГНАЛА @П@М@И.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ.
#ПЕРН 30_-_ОБРАЩЕНИЕ БЛОКА СВЯЗИ @П@П
 НА ЧТЕНИЕ/ЗАПИСЬ РЕГИСТРОВ.
#А0 ВОЗНИКАЕТ ПО ЗАПРОСУ @П@П.
 ПРЕРЫВАНИЕ МОЖНО УСТАНАВЛИВАТЬ ВО ВРЕМЯ
 ОСТАНОВА (Т.&Е. &МЕЖДУ КОМАНДАМИ),
 Т.&К. &ОНО НЕ СТРОБИРУЕСТЯ ПРИЗНАКОМ @П@М@И
 И МОЖЕТ ИСПОРТИТЬ РАБОЧИЕ РЕГИСТРЫ.
 ПСЕВДОПРЕРЫВАНИЕ.
#ПЕРН 31_-_АППАРАТНАЯ ЧАСТЬ ЧАСОВ СЧЕТНОГО ВРЕМЕНИ РАВНА 0.
#А0 ПРЕРЫВАНИЕ ПРОИСХОДИТ, ЕСЛИ ЗНАЧЕНИЕ
 МЛАДШИХ 16 РАЗРЯДОВ ЧАСОВ СЧЕТНОГО ВРЕМЕНИ
 УСТАНАВЛИВАЕТСЯ В "0".
 ПРИ ЭТОМ МИКРОПРОГРАММА ВЫЧИТАЕТ "1"
 ИЗ СТАРШИХ РАЗРЯДОВ ЧАСОВ СЧЕТНОГО ВРЕМЕНИ.
 ПСЕВДОПРЕРЫВАНИЕ. РАЗРЕШАЕТСЯ
 ПОСЛЕ ИСПОЛНЕНИЯ ТЕКУЩЕЙ КОМАНДЫ ПО СИГНАЛУ
 @П@М@И.
#ПЕРН 32_-_АППАРАТНАЯ ЧАСТЬ ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ РАВНА 0.
#А0 ПРЕРЫВАНИЕ ПРОИСХОДИТ, ЕСЛИ
 ЗНАЧЕНИЕ МИКРОСЕКУНДНОГО ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ
 (МЛАДШИЕ 16 РАЗРЯДОВ)
 ВО ВРЕМЯ СЧЕТА
 УСТАНАВЛИВАЕТСЯ В "0".
 ПРИ ЭТОМ МИКРОПРОГРАММА ВЫЧИТАЕТ "1"
 ИЗ СТАРШИХ 16 РАЗРЯДОВ ТАЙМЕРА, И ЕСЛИ ОНИ
 РАВНЫ "0", ЗАПИСЫВАЕТ "1" В 40 РАЗРЯДЕ @Г@Р@П И
 УСТАНАВЛИВАЕТ ПРОГРАММНОЕ ПРЕРЫВАНИЕ.
 ПСЕВДОПРЕРЫВАНИЕ. РАЗРЕШАЕТСЯ
 ПОСЛЕ ИСПОЛНЕНИЯ ТЕКУЩЕЙ КОМАНДЫ ПО СИГНАЛУ
 @П@М@И.
#НА #ВС7 _
#А0 #Ц МИКРОПРОГРАММНЫЕ ПРЕРЫВАНИЯ
#А0 #Ц ---------------------------
#ПЕРН 33 - ПЕРЕПОЛНЕНИЕ.
#А0 ВОЗНИКАЕТ ПРИ РАБОТЕ С ПЛАВАЮЩЕЙ
 ЗАПЯТОЙ,
 ЕСЛИ ПОРЯДОК РЕЗУЛЬТАТА АРИФМЕТИЧЕСКОЙ
 ОПЕРАЦИИ ПРЕВЫШАЕТ 2047.
 ПРИ ПЕРЕПОЛНЕНИИ УСТАНАВЛИВАЕТСЯ ПРИЗНАК
 ПЕРЕПОЛНЕНИЯ @O@V@R.
 ПРЕРЫВАНИЕ МОЖЕТ БЫТЬ
 БЛОКИРОВАНО "1" 6 БИТА @Р@Р (@Б@П@П).
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 34_-_ПЕРЕПОЛНЕНИЕ ПОРЯДКА @Б@Э@С@М-6.
#А0 ВОЗМОЖНО ПРИ НАЛИЧИИ @Б@Б@Ч В РЕЖИМЕ ЭМУЛЯТОРА.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 35_-_ДЕЛЕНИЕ НА "0".
#А0 ВОЗНИКАЕТ ПРИ ПОПЫТКЕ
 ДЕЛЕНИЯ НА "0".
 ДЕЛЕНИЕ НА НЕНОРМАЛИЗОВАННОЕ ЧИСЛО РАЗРЕШАЕТСЯ
 (ПО АНАЛОГИИ С УМНОЖЕНИЕМ), ЧЕГО
 НЕ БЫЛО В @Б@Э@С@М-6.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 36_-_"ПЕРЕПОЛНЕНИЕ ПОЛЯ УПРЯТЫВАНИЯ".
#А0 ВОЗНИКАЕТ В ОТСУТСТВИЕ @Б@П@П@У ПРИ ЭКСТРАКОДАХ
 ПОСЛЕ УПРЯТЫВАНИЯ РЕГИСТРОВ В ПАМЯТЬ,
 ЕСЛИ ПОЛЕ УПРЯТЫВАНИЯ ВЫХОДИТ ЗА ПРЕДЕЛЫ СТРАНИЦЫ.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 37_-_НЕЗАКОННЫЙ ОПЕРАНД.
#А0 ВОЗНИКАЕТ ПРИ ВЫПОЛНЕНИИ
 ЛОГИЧЕСКИХ И СДВИГОВЫХ
 КОМАНД В РЕЖИМЕ ЭМУЛЯТОРА,
 ЕСЛИ ИМЕЕТСЯ ХОТЯ БЫ ОДНА "1" В 60-63 РАЗРЯДАХ
 ПРИ "1" 64 РАЗРЯДА СУММАТОРА ИЛИ ОПЕРАНДА КОМАНДЫ.
 ЕСЛИ НЕЗАКОННЫМ ОПЕРАНДОМ ЯВЛЯЕТСЯ СУММАТОР,
 В @И@А@О@П ЗАНОСИТСЯ "0",
 ИНАЧЕ - МАТЕМАТИЧЕСКИЙ АДРЕС ОПЕРАНДА.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#ПЕРН 38_-_ВЫБОРКА КОМАНДНОГО СЛОВА ПО 0-ОМУ МАТ. &АДРЕСУ.
#А0 ПРОИСХОДИТ ПРИ ВЫБОРКЕ КОМАНДНОГО
 СЛОВА ПО 0-ОМУ МАТЕМАТИЧЕСКОМУ АДРЕСУ.
 ВНУТРЕННЕЕ ПРЕРЫВАНИЕ.
#НА #НА #ВС8 _
#А0 #Ц ВНЕШНИЕ ПРЕРЫВАНИЯ._РАЗРЯДЫ__@Г@Р@П
#А0 #Ц --------------------------------
#ПЕРН 1_-_ПРЕРЫВАНИЕ ОТ ДРУГОГО ПРОЦЕССОРА.
#ПЕРН 2_-_ПРЕРЫВАНИЕ ОТ ПУЛЬТОВОГО ПРОЦЕССОРА. МАСКИРУЕТСЯ.
#ПЕРН 3_-_________-____"____-
#ПЕРН 4_-_________-____"____-
#ПЕРН 5_-_ПРЕРЫВАНИЕ ОТ ТАЙМЕРА АСТРОНОМИЧЕСКОГО ВРЕМЕНИ.
#А0 ВОЗНИКАЕТ ПРИИ СОВПАДЕНИИ ЗНАЧЕНИЙ ТАЙМЕРА И ЧАСОВ
 АСТРОНОМИЧЕСКОГО ВРЕМЕНИ. ПРЕРЫВАНИЕ МАСКИРУЕТСЯ.
#ПЕРН 40_-_ПРЕРЫВАНИЕ ОТ ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ.
#А0 ПРЕРЫВАНИЕ ПРОИСХОДИТ, ЕСЛИ ВСЕ 32 РАЗРЯДА ТАЙМЕРА
 СЧЕТНОГО ВРЕМЕНИ УСТАНОВЛЕНЫ В "0". СМ. &ПРЕРЫВАНИЕ 26.
#ПЕРН 41_-_ПРОГРАММНОЕ ПРЕРЫВАНИЕ. СМ. &ПРЕРЫВАНИЕ 31.
#НОВСЦ #Б
#А0 #Ц 5. СИСТЕМА КОМАНД
#НА #НА #М АРИФМЕТИЧЕСКИЕ, ЛОГИЧЕСКИЕ КОМАНДЫ
 И КОМАНДЫ ЧТЕНИЯ, ИЗМЕНЯЮЩИЕ СУММАТОР,
 ИЗМЕНЯЮТ ПРИЗНАК ГРУППЫ
 (3-5 РАЗРЯДЫ РЕГИСТРА РЕЖИМОВ)
 И ПРИЗНАКИ РЕЗУЛЬТАТА
 (7-10 РАЗРЯДЫ @Р@Р)
 В ЗАВИСИМОСТИ
 ОТ ТИПА ОПЕРАНДОВ И РЕЗУЛЬТАТА:
#ПЕРН КОМАНДЫ ЧТЕНИЯ В СУММАТОР 64-РАЗРЯДНОГО СЛОВА
 ЦЕЛОГО И С ПЛАВАЮЩЕЙ ЗАПЯТОЙ, А
 ТАКЖЕ ЛОГИЧЕСКИЕ КОМАНДЫ С 64-РАЗРЯДНЫМИ
 ОПЕРАНДАМИ УСТАНАВЛИВАЮТ ПРИЗНАКИ РЕЗУЛЬТАТА
 СЛЕДУЮЩИМ ОБРАЗОМ:
#А0 -_@N = ЗНАЧЕНИЮ 64 РАЗРЯДА РЕЗУЛЬТАТА;
#А0 -_@Z = 1, ЕСЛИ 1-64 РАЗРЯДЫ РЕЗУЛЬТАТА РАВНЫ 0,
 ИНАЧЕ @Z = 0;
#А0 -_УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН АРИФМЕТИЧЕСКИЕ КОМАНДЫ НАД ЦЕЛЫМИ 64-РАЗРЯДНЫМИ
 ОПЕРАНДАМИ И 32-РАЗРЯДНЫМИ, У КОТОРЫХ
 ПРОИСХОДИТ РАЗМНОЖЕНИЕ 32 РАЗРЯДА ДО 64-ОГО:
#А0 -_@O@V@R = 1 ПРИ ПЕРЕПОЛНЕНИИ
 РАЗРЯДНОЙ СЕТКИ;
#А0 __ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#А0 -_@N = ЗНАЧЕНИЮ 64 РАЗРЯДА РЕЗУЛЬТАТА;
#А0 -_@Z = 1, ЕСЛИ 1-64 РАЗРЯДЫ РЕЗУЛЬТАТА РАВНЫ 0;
#А0 -_УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН АРИФМЕТИЧЕСКИЕ КОМАНДЫ С ПЛАВАЮЩЙ ЗАПЯТОЙ
 (ОДИНАРНОЙ И ДВОЙНОЙ ТОЧНОСТИ):
#А0 -_@O@V@R = 1 ПРИ
 ПЕРЕПОЛНЕНИИ В РАЗРЯДАХ ПОРЯДКА;
#А0 __ПРЕРЫВАНИЕ ПО ПЕРЕПОЛНЕНИЮ БЛОКИРУЕТСЯ УСТАНОВКОЙ #Б БПП &В РР. #М
#А0 -_@С = 1, ЕСЛИ МАНТИССА ИЛИ ПОРЯДОК РАВНЫ 0;
#А0 -_@N = ЗНАЧЕНИЮ 53 РАЗРЯДА РЕЗУЛЬТАТА (ЗНАК МАНТИССЫ);
#А0 -_@Z = 1, ЕСЛИ 1-53 РАЗРЯДЫ РЕЗУЛЬТАТА РАВНЫ 0;
#А0 -_УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#НА РАЗРЯДНОСТЬ КОРОТКОАДРЕСНЫХ КОДОВ
 ОПЕРАЦИЙ (@К@О@П)
 СОВПАДАЕТ С РАЗРЯДНОСТЬЮ @К@О@П НОВОГО РЕЖИМА.
 ДЛЯ ДЛИННОАДРЕСНЫХ @К@О@П ЭМУЛЯТОРА МОЖНО ДОПОЛНИТЬ @К@О@П
 СПРАВА ТРЕМЯ НУЛЕВЫМИ БИТАМИ.
 ПОЭТОМУ МЫ ОПИШЕМ СИСТЕМУ КОМАНД В ПРЕДПОЛОЖЕНИИ, ЧТО ВСЕ
 КОДЫ ОПЕРАЦИЙ 8-РАЗРЯДНЫЕ.
#НА ФОРМИРОВАНИЕ @К@О@П ПРОИСХОДИТ ПРИ ВЫБОРКЕ КОМАНДЫ.
 ТАМ ЖЕ МОЖНО АНАЛИЗИРОВАТЬ 7-Й РАЗРЯД КОРОТКОАДРЕСНОГО @К@О@П
 В РЕЖИМЕ ЭМУЛЯТОРА И В ЗАВИСИМОСТИ
 ОТ ЕГО ЗНАЧЕНИЯ
 ДОПОЛНИТЬ АДРЕСНУЮ
 ЧАСТЬ "0" ИЛИ "1"
 В 13-15 РАЗРЯДАХ, КАК ЭТО ПРИНЯТО В БЭСМ-6.
 7-ОЙ РАЗРЯД @К@О@П МОЖНО НЕ МЕНЯТЬ, СЧИТАЯ,
 ЧТО В РЕЖИМЕ ЭМУЛЯЦИИ
 КОМАНДЫ С "0" И С "1" В 7-ОМ РАЗРЯДЕ
 ИСПОЛНЯЮТСЯ ОДИНАКОВО.
 А ТОТ ЖЕ @К@О@П С "1" В 7-ОМ РАЗРЯДЕ МОЖЕТ
 ИСПОЛЬЗОВАТЬСЯ КАК ДРУГОЙ
 ТИП КОМАНДЫ ТОЛЬКО В НОВОМ РЕЖИМЕ.
#НА ИТАК, СИСТЕМА КОМАНД ЭМУЛЯТОРА ЯВЛЯЕТСЯ ПОДМНОЖЕСТВОМ
 СИСТЕМЫ КОМАНД НОВОГО РЕЖИМА.
 В #Б ЭЛЬБРУС-Б #М ВВЕДЕНО РЯД
 НОВЫХ ПО СРАВНЕНИЮ С БЭСМ-6 КОМАНД,
 ИМЕЮЩИХ КОДЫ 00 - 7F ШЕСТНАДЦАТЕРИЧНЫЕ (ИЛИ 000 - 177 ВОСЬМЕРИЧНЫЕ)
 В ОСНОВНОМ И ДОПОЛНИТЕЛЬНОМ ФОРМАТАХ.
 НОВЫЕ КОМАНДЫ @М@К@Б-8601
 ИМЕЮТ СООТВЕТСТВЕННО КОДЫ 80 - FF (200 - 377)
 В ОСНОВНОМ И ДОПОЛНИТЕЛЬНОМ ФОРМАТАХ.
 ОДИНАКОВЫЕ КОМАНДЫ #Б ЭЛЬБРУС-Б &И МКБ-8601 #М
 ИМЕЮТ ОДИНАКОВЫЕ КОДЫ.
#НА #ВС10 _ #А0
#Б #Ц БОЛЕЕ ПОДРОБНОЕ ОПИСАНИЕ КОМАНД
#А0 ___
#А0 #Ц КОМАНДЫ БЭСМ-6 #М
#НА #НА #А0 #Ц 5.1. КОМАНДЫ ПЕРЕСЫЛОК
#ПЕРН 00(000) В #Б РЭ, ЭЛЬБРУС-Б (ЗЧ), МКБ-8601 (АТХ) #М
#А0 _-_ЗАПИСЬ СУММАТОРА В ПАМЯТЬ.
#А0 ЕСЛИ НЕ УСТАНОВЛЕН @Б@П@Т@З И БИТ 68 ТЕГА СЛОВА
 ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ РАВЕН "1" - ПРЕРЫВАНИЕ ПО ЗАЩИТЕ ЗАПИСИ.
#А0 1-64 РАЗРЯДЫ @А ЗАПИСЫВАЮТСЯ В ПАМЯТЬ ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ.
 В РАЗРЯДЫ 65-72 ТЕГА СЛОВА ЗАНОСЯТСЯ
 ПРИЗНАКИ @П@К_-_@П@И@Н@Т, Т.&Е. &ТЕГ РЕЗУЛЬТАТА.
#А0 @А,@Р@М@Р,@Р@Р - НЕ ИЗМЕНЯЮТСЯ.
#А0 ИСПОЛНЕНИЕ КОМАНДЫ НЕ ЗАВИСИТ ОТ ПРИЗНАКА @Р@Э.
#А0 _ #А0 ПРИ ОПИСАНИИ КОМАНД
 ЗДЕСЬ И НИЖЕ СНАЧАЛА ПРИВОДИТСЯ ШЕСТНАДЦАТЕРИЧНЫЙ КОД ОПЕРАЦИИ;
 В СКОБКАХ - ВОСЬМЕРИЧНЫЙ.
#ПЕРН 01(001) В #Б РЭ, ЭЛЬБРУС-Б (ЗМ), МКБ-8601 (SТХ) #М
#А0 _-_ЗАПИСЬ ЧИСЛА МАГАЗИННАЯ.
#А0 ВЫПОЛНЯЕТСЯ ОБЫЧНАЯ ЗАПИСЬ (@А@Т@Х)
 СУММАТОРА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 ПОСЛЕ ЧЕГО 15 РЕГИСТР
 УМЕНЬШАЕТСЯ НА 1, И ВЫПОЛНЯЕТСЯ КОМАНДА СЧИТЫВАНИЯ
 (@Х@Т@А)
 С АДРЕСОМ, РАВНЫМ СОДЕРЖИМОМУ 15 РЕГИСТРА.
#А0 @Р@М@Р СОХРАНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#А0 КОМАНДА ВЫПОЛНЯЕТСЯ НЕЗАВИСИМО ОТ @Р@Э.
#ПЕРН 03(003) В #Б РЭ, ЭЛЬБРУС-Б (СМ), МКБ-8601 (XTS) #М
#А0 _-_СЧИТЫВАНИЕ МАГАЗИННОЕ.
#А0 ВЫПОЛНЯЕТСЯ ЗАПИСЬ (@А@Т@Х) В ПАМЯТЬ ПО АДРЕСУ, СОДЕРЖАЩЕМУСЯ В
 15 РЕГИСТРЕ. ЗАТЕМ 15 РЕГИСТР УВЕЛИЧИВАЕТСЯ НА 1 И ПРОИЗВОДИТСЯ
 СЧИТЫВАНИЕ (@Х@Т@А) В @А СЛОВА ПО ИСП.&АДРЕСУ.
#А0 @Р@М@Р СОХРАНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#А0 ВЫПОЛНЕНИЕ КОМАНДЫ НЕ ЗАВИСИТ ОТ @Р@Э.
#ПЕРН 08(010) В #Б РЭ, ЭЛЬБРУС-Б (СЧ), МКБ-8601 (ХТА) #М
#А0 _-_СЧИТЫВАНИЕ ЧИСЛА.
#А0 ЕСЛИ НЕ УСТАНОВЛЕН @Б@П@Т И БИТ 67 ТЕГА СЛОВА ПО
 ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ   СОДЕРЖИТ "1" - ПРЕРЫВАНИЕ ПО ЗАЩИТЕ ЧИСЛА.
#А0 1-64 РАЗРЯДЫ СЛОВА ПО ИСП.&АДРЕСУ СЧИТЫВАЮТСЯ В @А.
 @Р@М@Р НЕ МЕНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#А0 ВЫПОЛНЕНИЕ КОМАНДЫ НЕ ЗАВИСИТ ОТ @Р@Э.
#НА #ВС8 _ #А0
#Ц 5.2. АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#ПЕРН 04(004) В #Б РЭ; &Е5(345) &В МКБ-8601 (А+Х) #М
#А0 _-_АРИФМЕТИЧЕСКОЕ СЛОЖЕНИЕ ЧИСЕЛ С ПЛАВАЮЩУЙ ЗАПЯТОЙ.
#А0 СОДЕРЖИМОЕ СУММАТОРА СКЛАДЫВАЕТСЯ С КОДОМ ОПЕРАНДА
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 РЕЗУЛЬТАТ - НА СУММАТОРЕ И В 1-52 РАЗРЯДАХ @Р@М@Р.
 53 РАЗРЯД Р@М@Р ОБНУЛЯЕТСЯ, А В 54-64Р. &ЗАНОСИТСЯ
 ПОРЯДОК РЕЗУЛЬТАТА.
 ОПЕРАЦИЯ МОЖЕТ ПРОИЗВОДИТЬСЯ КАК С НОРМАЛИЗОВАННЫМИ,
 ТАК И С НЕНОРМАЛИЗОВАННЫМИ ЧИСЛАМИ.
 РЕЗУЛЬТАТ НОРМАЛИЗУЕТСЯ ПРИ "0" 1 РАЗРЯДА @Р@Р И
 ОКРУГЛЯЕТСЯ ПРИ "0" 2 РАЗРЯДА @Р@Р.
 УСТАНАВЛИВАЕТСЯ ГРУППА СЛОЖЕНИЯ.
 В @Р@Э 1-12 РАЗРЯДЫ СУММАТОРА
 КОПИРУЮТСЯ В 52-41 РАЗРЯДЫ @Р@М@Р.
#ПЕРН 05(005) В #Б РЭ; &Е6(346) &В МКБ-8601 (А-Х) #М
#А0 _-_АРИФМЕТИЧЕСКОЕ ВЫЧИТАНИЕ ЧИСЕЛ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
#А0 ИЗ СОДЕРЖИМОГО СУММАТОРА ВЫЧИТАЕТСЯ КОД ОПЕРАНДА.
 ОСТАЛЬНОЕ АНАЛОГИЧНО КОМАНДЕ @А+@Х.
#ПЕРН 06(006) В #Б РЭ; &Е7(347) &В МКБ-8601 (Х-А) #М
#А0 _-_ОБРАТНОЕ ВЫЧИТАНИЕ ЧИСЕЛ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
#А0 ИЗ КОДА ОПЕРАНДА ВЫЧИТАЕТСЯ СОДЕРЖИМОЕ СУММАТОРА.
 ОСТАЛЬНОЕ АНАЛОГИЧНО КОМАНДЕ @А+@Х.
#ПЕРН 07(007) В #Б РЭ; &Е8(350) &В МКБ-8601 (АМХ) #М
#А0 _-_ВЫЧИТАНИЕ МОДУЛЕЙ ЧИСЕЛ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
#А0 ИЗ МОДУЛЯ ЧИСЛА, НАХОДЯЩЕГОСЯ НА СУММАТОРЕ, ВЫЧИТАЕТСЯ
 МОДУЛЬ ОПЕРАНДА.
 ОСТАЛЬНОЕ АНАЛОГИЧНО КОМАНДЕ @А+@Х.
#ПЕРН 0С(014) В #Б РЭ; &Е9(351) &В МКБ-8601 (AVX) #М
#А0 _-_ИЗМЕНЕНИЕ ЗНАКА ЧИСЛА НА СУММАТОРЕ.
#А0 ЕСЛИ ЧИСЛО ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ ОТРИЦАТЕЛЬНОЕ,
 ТО У ЧИСЛА НА СУММАТОРЕ МЕНЯЕТСЯ ЗНАК, ЕСЛИ ПОЛОЖИТЕЛЬНОЕ - НЕ
 МЕНЯЕТСЯ. ПРИ "0" 1 РАЗРЯДА @Р@Р ПРОИЗВОДИТСЯ НОРМАЛИЗАЦИЯ
 РЕЗУЛЬТАТА. РЕЗУЛЬТАТ НА СУММАТОРЕ. УСТАНАВЛИВАЕТСЯ
 ГРУППА СЛОЖЕНИЯ.
 @Р@М@Р  НЕ МЕНЯЕТСЯ.
#ПЕРН 0Е(016) В #Б РЭ, ЭЛЬБРУС-Б (АД), МКБ-8601 (А/Х) #М
#А0 _-_ДЕЛЕНИЕ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
#А0 СУММАТОР ДЕЛИТСЯ НА ОПЕРАНД.
 ЕСЛИ ОПЕРАНД НЕ НОРМАЛИЗОВАН, НО НЕ РАВЕН НУЛЮ,
 ТО ОПЕРАЦИЯ ДОЛЖНА ПРОИЗВОДИТЬСЯ ПРАВИЛЬНО.
 РЕЗУЛЬТАТ НА СУММАТОРЕ
 В НОРМАЛИЗОВАННОМ ВИДЕ.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН 0F(017) В #Б РЭ; &Е&А(352) В МКБ-8601 (А*Х) #М
#А0 _-_УМНОЖЕНИЕ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
#А0 СУММАТОР УМНОЖАЕТСЯ НА ОПЕРАНД.
 ОПЕРАЦИЯ МОЖЕТ ПРОИЗВОДИТЬСЯ КАК С НОРМАЛИЗОВАННЫМИ,
 ТАК И С НЕНОРМАЛИЗОВАННЫМИ ЧИСЛАМИ.
 РЕЗУЛЬТАТ НОРМАЛИЗУЕТСЯ ПРИ "0" 1 РАЗРЯДА @Р@Р И
 ОКРУГЛЯЕТСЯ ПРИ "0" 2 РАЗРЯДА @Р@Р.
 РЕЗУЛЬТАТ ОСТАЕТСЯ НА СУММАТОРЕ И В 1-52 РАЗРЯДАХ @Р@М@Р.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН 14(024) В #Б РЭ, ЭЛЬБРУС-Б (СП), МКБ-8601 (Е+Х) #М
#А0 _-_СЛОЖЕНИЕ ПОРЯДКА С КОДОМ.
#А0 К КОДУ ПОРЯДКА СУММАТОРА ПРИБАВЛЯЕТСЯ КОД ПОРЯДКА ОПЕРАНДА.
 ЗАТЕМ ИЗ КОДА ПОРЯДКА РЕЗУЛЬТАТА ВЫЧИТАЕТСЯ 1024.
 МАНТИССА СОХРАНЯЕТСЯ. ОПЕРАЦИЯ МОЖЕТ ПРОИЗВОДИТЬСЯ ТАКЖЕ И С
 НЕНОРМАЛИЗОВАННЫМИ ЧИСЛАМИ.
 РЕЗУЛЬТАТ НОРМАЛИЗУЕТСЯ ПРИ "0" 1 РАЗРЯДА @Р@Р.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН 15(025) В #Б РЭ, ЭЛЬБРУС-Б (ВП), МКБ-8601 (Е-Х) #М
#А0 _-_ВЫЧИТАНИЕ ИЗ ПОРЯДКА КОДА.
#А0 ИЗ КОДА ПОРЯДКА СУММАТОРА ВЫЧИТАЕТСЯ КОД ПОРЯДКА ОПЕРАНДА.
 ЗАТЕМ К КОДУ ПОРЯДКА РЕЗУЛЬТАТА ПРИБАВЛЯЕТСЯ 1024.
 ДАЛЕЕ ВСЕ КАК В КОМАНДЕ @Е+@Х.
#ПЕРН 1С(034) В @Р@Э; 3F 1С (077 034) В #Б ЭЛЬБРУС-Б (КС), МКБ-8601
#А0 (Е+N) #М _-_СЛОЖЕНИЕ ПОРЯДКА С АДРЕСОМ.
#А0 К КОДУ ПОРЯДКА СУММАТОРА ПРИБАВЛЯЕТСЯ 11-РАЗРЯДНЫЙ КОД, ВЗЯТЫЙ
 ИЗ ИСПОЛНИТЕЛЬНОГО АДРЕСА.
 В НОВОМ РЕЖИМЕ ИСПОЛЬЗУЮТСЯ 1:11 РАЗРЯДЫ АДРЕСА. В РЕЖИМЕ
 ЭМУЛЯТОРА - 1:7 РАЗРЯДЫ АДРЕСА (7-Й ВЫСТУПАЕТ В РОЛИ ЗНАКА).
 ПЕРЕД ВЫПОЛНЕНИЕМ ОПЕРАЦИИ В @Р@Э 7-ОЙ РАЗРЯД
 АРЕСА ПЕРЕСЫЛАЕТСЯ В 11-ЫЙ, 7-10 РАЗРЯДЫ
 ЗАПОЛНЯЮТСЯ ИНВЕРТИРОВАННЫМ КОДОМ 7-ОГО РАЗРЯДА.
 ОСТАЛЬНЫЕ РАЗРЯДЫ АДРЕСА НЕ ИСПОЛЬЗУЮТСЯ.
 ПОСЛЕ СЛОЖЕНИЯ ИЗ КОДА ПОРЯДКА РЕЗУЛЬТАТА ВЫЧИТАЕТСЯ 1024.
 МАНТИССА СОХРАНЯЕТСЯ. ОПЕРАЦИЯ МОЖЕТ ПРОИЗВОДИТЬСЯ
 ТАКЖЕ И С НЕНОРМАЛИЗОВАННЫМИ ЧИСЛАМИ.
 РЕЗУЛЬТАТ НОРМАЛИЗУЕТСЯ ПРИ "0" 1 РАЗРЯДА @Р@Р.
 @Р@М@Р НЕ МЕНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ
 ГРУППА УМНОЖЕНИЯ.
#ПЕРН 1D(035) В @Р@Э; 3F 1D (077 035) В #Б ЭЛЬБРУС-Б (КВ), МКБ-8601
 (Е-N) #М
 _-_ВЫЧИТАНИЕ ИЗ ПОРЯДКА АДРЕСА.
#А0 ИЗ КОДА ПОРЯДКА СУММАТОРА ВЫЧИТАЕТСЯ 11-РАЗРЯДНЫЙ КОД,
 ВЗЯТЫЙ ИЗ ИСПОЛНИТЕЛЬНОГО АДРЕСА ТАК ЖЕ, КАК В КОМАНДЕ @Е+@N.
 ЗАТЕМ К КОДУ ПОРЯДКА РЕЗУЛЬТАТА ПРИБАВЛЯЕТСЯ 1024.
 ДАЛЕЕ ВСЕ КАК В КОМАНДЕ @Е+@N.
#ПЕРН 19(031) В @Р@Э; 3F 81 (077 201) В #Б МКБ-8601 (УТА) #М
#А0 _-_ВЫДАЧА РЕГИСТРА МЛАДШИХ РАЗРЯДОВ.
#А0 ПРИ ГРУППЕ СЛОЖЕНИЯ ИЛИ УМНОЖЕНИЯ ПЕРЕДАЮТСЯ 1-52 РАЗРЯДЫ,
 53-Й РАЗРЯД ГАСИТСЯ.
 ДАЛЕЕ ВЫПОЛНЯЕТСЯ КОМАНДА @Е+@N
 СЛОЖЕНИЯ ПОРЯДКА С АДРЕСОМ.
#А0 ПРИ ЛОГИЧЕСКОЙ ГРУППЕ @Р@М@Р ПЕРЕДАЕТСЯ
 В @А ПОЛНОСТЬЮ. СЛОЖЕНИЯ ПОРЯДКА
 С АДРЕСОМ НЕ ПРОИСХОДИТ.
#А0 @Р@М@Р И @Р@Р НЕ ИЗМЕНЯЮТСЯ.
#НА #ВС8 _  #А0 #Ц 5.3. ЛОГИЧЕСКИЕ КОМАНДЫ
#ПЕРН 09(011) В #Б РЭ, ЭЛЬБРУС-Б (ЛУ), МКБ-8601 (ААХ) #М
#А0 _-_ЛОГИЧЕСКОЕ УМНОЖЕНИЕ.
#А0 В ОТСУТСТВИЕ @Р@Э ВЫПОЛНЯЕТСЯ НАД ВСЕМИ 64 РАЗРЯДАМИ СЛОВА.
#А0 В РЕЖИМЕ ЭМУЛЯТОРА ПРОИЗВОДИТСЯ ПРЕДВАРИТЕЛЬНАЯ ПРОВЕРКА
 ОБОИХ ОПЕРАНДОВ: СУММАТОРА И СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 ПРОВЕРЯЕТСЯ СОВПАДЕНИЕ 60-63 РАЗРЯДОВ С ИНВЕРТИРОВАННЫМ 64
 РАЗРЯДОМ.
 ПРИ НЕСОВПАДЕНИИ И "0" 64 РАЗРЯДА СООТВЕТСТВУЮЩИЙ ОПЕРАНД
 ЗАМЕНЯЕТСЯ НА МАШИННЫЙ НУЛЬ.
 ПРИ НЕСОВПАДЕНИИ И "1" 64 РАЗРЯДА - ПРЕРЫВАНИЕ "НЕЗАКОННЫЙ
 ОПЕРАНД".
#А0 ЗАТЕМ ПРОИЗВОДИТСЯ ОПЕРАЦИЯ НАД ВСЕМИ 64 РАЗРЯДАМИ.
 У РЕЗУЛЬТАТА ОПЕРАЦИИ 60-63 РАЗРЯДЫ ЗАПОЛНЯЮТСЯ ИНВЕРТИРОВАННЫМ
 КОДОМ ИЗ 64 РАЗРЯДА, А 1-12 РАЗРЯДЫ ОБНУЛЯЮТСЯ.
#А0 РЕЗУЛЬТАТ - НА СУММАТОРЕ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 0А(012) В #Б РЭ, ЭЛЬБРУС-Б (СР), МКБ-8601 (АЕХ) #М
#А0 _-_СРАВНЕНИЕ.
#А0 ЛОГИКА ИСПОЛНЕНИЯ АНАЛОГИЧНА КОМАНДЕ @А@А@Х.
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
 В @Р@М@Р ПЕРЕСЫЛАЕТСЯ ЗНАЧЕНИЕ СУММАТОРА ДО ВЫПОЛНЕНИЯ ОПЕРАЦИИ.
 КОМАНДУ МОЖНО ИСПОЛЬЗОВАТЬ ДЛЯ
 ПЕРЕСЫЛКИ СУММАТОРА В @Р@М@Р.
#ПЕРН 0В(013) В #Б РЭ, ЭЛЬБРУС-Б (ЦС), МКБ-8601 (ARX) #М
#А0 _-_ЦИКЛИЧЕСКОЕ СЛОЖЕНИЕ.
#А0 В ОТСУТСТВИЕ @Р@Э КОД НА СУММАТОРЕ ЦИКЛИЧЕСКИ СКЛАДЫВАЕТСЯ
 С КОДОМ ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ (ПЕРЕНОС ИЗ 64 РАЗРЯДА
 СКЛАДЫВАЕТСЯ С 1-М РАЗРЯДОМ).
#А0 В РЕЖИМЕ ЭМУЛЯТОРА ОБА ОПЕРАНДА ПРОВЕРЯЮТСЯ КАК В КОМАНДЕ
 @А@А@Х,
 ЗАТЕМ ПРОИЗВОДИТСЯ ЦИКЛИЧЕСКОЕ СЛОЖЕНИЕ ОПЕРАНДОВ, НАЧИНАЯ С 12
 РАЗРЯДА.
 ПЕРЕНОС ИЗ 59 РАЗРЯДА СКЛАДЫВАЕТСЯ С 64 РАЗРЯДОМ, А ПЕРЕНОС
 ИЗ 64 РАЗРЯДА - С 12 РАЗРЯДОМ.
 60-63 РАЗРЯДЫ РЕЗУЛЬТАТА ЗАПОЛНЯЮТСЯ ИНВЕРТИРОВАННЫМ КОДОМ 64
 РАЗРЯДА, А 1-12 РАЗРЯДЫ ОБНУЛЯЮТСЯ.
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ. УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 0D(015) В #Б РЭ, ЭЛЬБРУС-Б (ЛС), МКБ-8601 (АОХ) #М
#А0 _-_ЛОГИЧЕСКОЕ СЛОЖЕНИЕ.
#А0 В ОТСУТСТВИЕ @Р@Э ВЫПОЛНЯЕТСЯ НАД ВСЕМИ 64 РАЗРЯДАМИ.
#А0 ПРИ НАЛИЧИИ - АНАЛОГИЧНО КОМАНДЕ @А@А@Х.
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
 @Р@М@Р  НЕ МЕНЯЕТСЯ.
#ПЕРН 10(020) В #Б РЭ, ЭЛЬБРУС-Б (СБ), МКБ-8601 (АРХ) #М
#А0 _-_СБОРКА ПО МАСКЕ.
#А0 ИЗ @А ВЫБИРАЮТСЯ ТЕ РАЗРЯДЫ, КОТОРЫЕ СООТВЕТСТВУЮТ ЕДИНИЦАМ
 КОДА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 ПРИ ЭТОМ В НОВОМ РЕЖИМЕ РАССМАТРИВАЮТСЯ ВСЕ 64 РАЗРЯДА ОПЕРАНДА,
 А ПРИ @Р@Э - ТОЛЬКО 64,59-11.
 ПОЛУЧЕННЫЙ КОД ПОМЕЩАЕТСЯ В СТАРШИЕ РАЗРЯДЫ @А (ПРИ @Р@Э - С УЧЕТОМ
 "ДЫРЫ" В ПОРЯДКЕ!).
 ОСТАЛЬНЫЕ РАЗРЯДЫ @А ЗАНУЛЯЮТСЯ.  @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 11(021) В #Б РЭ, ЭЛЬБРУС-Б (РБ), МКБ-8601 (AUX) #М
#А0 _-_РАЗБОРКА ПО МАСКЕ.
#А0 КОД СТАРШЕГО РАЗРЯДА СУММАТОРА ПОМЕЩАЕТСЯ В РАЗРЯД,
 СООТВЕТСТВУЮЩИЙ СТАРШЕЙ "1" МАСКИ - КОДА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 КОД СЛЕДУЮЩЕГО РАЗРЯДА СУММАТОРА - СООТВЕТСТВЕННО СЛЕДУЮЩЕЙ
 "1" МАСКИ И Т.&Д.
 В @Р@Э РАЗРЯДЫ 63-60 НЕ УЧИТЫВАЮТСЯ, А ПОСЛЕ
 ВЫПОЛНЕНИЯ ОПЕРАЦИИ ЗАПОЛНЯЮТСЯ
 ИНВЕРТИРОВАННЫМ КОДОМ 64-ОГО РАЗРЯДА.
#А0 РЕЗУЛЬТАТ - НА СУММАТОРЕ.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 12(022) В #Б РЭ, ЭЛЬБРУС-Б (ВЧ), МКБ-8601 (АСХ) #М
#А0 _-_ВЫДАЧА ЧИСЛА ЕДИНИЦ.
#А0 ПРОИЗВОДИТСЯ ПОДСЧЕТ ЧИСЛА "1" КОДА НА СУММАТОРЕ.
 В РЕЖИМЕ ЭМУЛЯТОРА "1" 1-12 И 60-63 РАЗРЯДОВ НЕ УЧИТЫВАЮТСЯ.
 ПОЛУЧЕННАЯ ВЕЛИЧИНА ПОМЕЩАЕТСЯ В 1-6 (В РЕЖИМЕ ЭМУЛЯТОРА В
 13-18)
 РАЗРЯДЫ СУММАТОРА.
 ЗАТЕМ ВЫПОЛНЯЕТСЯ КОМАНДА
 ЦИКЛИЧЕСКОГО СЛОЖЕНИЯ @A@R@X С СОДЕРЖИМЫМ СЛОВА ПО
 ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 РЕЗУЛЬТАТ НА СУММАТОРЕ.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 13(023) В #Б РЭ, ЭЛЬБРУС-Б (ВН), МКБ-8601 (ANX) #М
#А0 _-_ВЫДАЧА НОМЕРА СТАРШЕЙ ЕДИНИЦЫ.
#А0 ОПРЕДЕЛЯЕТСЯ НОМЕР СТАРШЕГО РАЗРЯДА СУММАТОРА,
 СОДЕРЖАЩЕГО "1". ОТСЧЕТ ВЕДЕТСЯ ОТ СТАРШЕГО
 РАЗРЯДА СУММАТОРА, Т.&Е.
#А0 &01 СООТВЕТСТВУЕТ "1" В СТАРШЕМ, 64 РАЗРЯДЕ
#А0 &02_______-_"_-_______В 63 (В @Р@Э 59) РАЗРЯДЕ
#А0 &03_______-_"_-_______В 62 (В @Р@Э 58) РАЗРЯДЕ
#А0 ______.___.___.___.
#А0 &64_______-_"_-_______В 1 РАЗРЯДЕ (В @Р@Э - НЕТ)
#А0 &_0___-___НЕТ "1".
 ПОЛУЧЕННЫЙ НОМЕР ПОМЕЩАЕТСЯ В 1-6 РАЗРЯДЫ
 СУММАТОРА (В @Р@Э - В 13-18 РАЗРЯДЫ);
 И ВЫПОЛНЯЕТСЯ КОМАНДА ЦИКЛИЧЕСКОГО СЛОЖЕНИЯ (@A@R@X)
 С СОДЕРЖИМЫМ СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 РЕЗУЛЬТАТ НА СУММАТОРЕ. В @Р@М@Р, НАЧИНАЯ
 С 64-ОГО РАЗРЯДА (В @Р@Э - С УЧЕТОМ "ДЫРЫ"
 В ПОРЯДКЕ) ПОМЕЩАЕТСЯ "ОСТАТОК" СОДЕРЖИМОГО
 СУММАТОРА, НАЧИНАЯ С РАЗРЯДА, СЛЕДУЮЩЕГО
 ЗА ТЕМ, НОМЕР КОТОРОГО ОПРЕДЕЛЕН.
 ЕСЛИ СУММАТОР РАВЕН 0, ТО И В @Р@М@Р ЗАПИСЫВАЕТСЯ 0.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 16(026) В #Б РЭ, ЭЛЬБРУС-Б (СК), МКБ-8601 (ASX) #М
#А0 _-_СДВИГ ЛОГИЧЕСКИЙ ПО КОДУ.
#А0 В ОТСУТСТВИЕ @Р@Э ПРОИЗВОДИТСЯ НАД ВСЕМИ
 64 РАЗРЯДАМИ СЛОВА. В @Р@Э ПРОИЗВОДИТСЯ
 ПРЕДВАРИТЕЛЬНАЯ ПРОВЕРКА ОБОИХ
 ОПЕРАНДОВ АНАЛОГИЧНО КОМАНДЕ @А@А@Х.
 ЗАТЕМ @Р@М@Р ОБНУЛЯЕТСЯ И ПРОИЗВОДИТСЯ
 СДВИГ СОДЕРЖИМОГО СУММАТОРА НА @N РАЗРЯДОВ.
 ВЕЛИЧИНА @N ОПРЕДЕЛЯЕТСЯ 1-10
 РАЗРЯДАМИ ПОРЯДКА ЧИСЛА В СЛОВЕ ПО ИСП. &АДРЕСУ
 (54-63 РАЗРЯДЫ).
 ПРИ "1" В 11-ОМ РАЗРЯДЕ КОДА ПОРЯДКА ЧИСЛА
 ПО ИСП.&АДРЕСУ ВЫПОЛНЯЕТСЯ СДВИГ ВПРАВО,
 В 1-10 РАЗРЯДАХ ПОРЯДКА ЗАПИСЫВАЕТСЯ
 КОЛИЧЕСТВО СДВИГОВ @N В ПРЯМОМ КОДЕ.
 ПРИ "0" В 11-ОМ РАЗРЯДЕ ВЫПОЛНЯЕТСЯ
 СДВИГ ВЛЕВО, В 1-10 РАЗРЯДАХ
 ЗАПИСЫВАЕТСЯ КОЛИЧЕСТВО СДВИГОВ @N
 В ДОПОЛНИТЕЛЬНОМ КОДЕ.
 ПРИ СДВИГЕ ВПРАВО КОД, ВЫДВИГАЮЩИЙСЯ
 ИЗ МЛАДШИХ РАЗРЯДОВ СУММАТОРА,
 ПОСТУПАЕТ В СТАРШИЕ РАЗРЯДЫ @Р@М@Р,
 НАЧИНАЯ С 64-ОГО. ПРИ СДВИГЕ
 ВЛЕВО КОД ИЗ СТАРШИХ
 РАЗРЯДОВ СУММАТОРА ПОСТУПАЕТ В
 МЛАДШИЕ РАЗРЯДЫ @Р@М@Р, НАЧИНАЯ С 1-ОГО
 (В @Р@Э - НАЧИНАЯ С 13-ОГО).
 В @Р@Э ПРИ СДВИГЕ СУММАТОРА И @Р@М@Р ВЛЕВО
 59-ЫЙ РАЗРЯД ПОСТУПАЕТ НА МЕСТО 64-ОГО, А
 ПРИ СДВИГЕ ВПРАВО - 64-ЫЙ РАЗРЯД НА МЕСТО
 59-ОГО, А 12-ЫЙ РАЗРЯД ВЫТАЛКИВАЕТСЯ.
 У РЕЗУЛЬТАТА ОПЕРАЦИИ 60-63 РАЗРЯДЫ
 СУММАТОРА И @Р@М@Р ЗАПОЛНЯЮТСЯ
 ИНВЕРТИРОВАННЫМ КОДОМ 64-ОГО РАЗРЯДА.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 1Е(036) В @Р@Э; 3F 16 (077 026) В #Б ЭЛЬБРУС-Б (СД),
 МКБ-8601 (ASN) #М -_ СДВИГ ЛОГИЧЕСКИЙ ПО АДРЕСУ.
#А0 СДВИГ СОДЕРЖИМОГО СУММАТОРА ПО АДРЕСУ.
 ВЕЛИЧИНА СДВИГА И НАПРАВЛЕНИЕ ЗАДАЕТСЯ
 1-11 РАЗРЯДАМИ КОДА ИСПОЛНИТЕЛЬНОГО
 АДРЕСА (СМ. КОМАНДУ @A@S@X).
 В @Р@Э 7-ОЙ РАЗРЯД АИСП.
 &ПЕРЕМЕЩАЕТСЯ НА МЕСТО 11-ОГО, А 7-10
 РАЗРЯДЫ ЗАПОЛНЯЮТСЯ ЕГО ИНВЕРТИРОВАННЫМ ЗНАЧЕНИЕМ.
 ДАЛЕЕ - КАК В КОМАНДЕ @A@S@X.
#НА #ВС8 _ #А0 #Ц 5.4. ИНДЕКСНЫЕ КОМАНДЫ #Б БЭСМ-6 #М
#ПЕРН 20(040) В @Р@Э; 3F 20 (077 040) В #Б ЭЛЬБРУС-Б (УИ),
 МКБ-8601 (ATI) #М
 -_ЗАПИСЬ КОДА В МОДИФИКАТОР.
#А0 СОДЕРЖИМОЕ 1-32 (В @Р@Э 12-27) РАЗРЯДОВ
 СУММАТОРА ПЕРЕДАЕТСЯ В 1-32 ( В @Р@Э - В 1-15)
 РАЗРЯДЫ ИНДЕКС-РЕГИСТРА. НОМЕР ИНДЕКС-РЕГИСТРА
 ЗАДАЕТСЯ В ПРЯМОМ КОДЕ В 1-4 РАЗРЯДАХ
 ИСПОЛНИТЕЛЬНОГО АДРЕСА.
 ОСТАЛЬНЫЕ РАЗРЯДЫ АДРЕСА НЕСУЩЕСТВЕННЫ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН 21(041) В @Р@Э; 3F 21 (077 041) В #Б ЭЛЬБРУС-Б (УМ),
 МКБ-8601 (STI) #М
 -_ЗАПИСЬ КОДА В МОДИФИКАТОР МАГАЗИННАЯ.
#А0 СНАЧАЛА ВЫПОЛНЯЕТСЯ КОМАНДА @A@T@I,
 ЗАТЕМ СОДЕРЖИМОЕ 15-ОГО ИНДЕКС-РЕГИСТРА
 УМЕНЬШАЕТСЯ НА 1, И ВЫПОЛНЯЕТСЯ КОМАНДА
 СЧИТЫВАНИЯ @Х@Т@А С АДРЕСОМ, РАВНЫМ СОДЕРЖИМОМУ
 15 РЕГИСТРА. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 22(042) В @Р@Э; 3F 80 (077 200) В #Б МКБ-8601 (IТА) #М
#А0 _-_ВЫДАЧА МОДИФИКАТОРА.
#А0 СОДЕРЖИМОЕ 1-32 (В @Р@Э 1-15) РАЗРЯДОВ
 ИНДЕКС-РЕГИСТРА ПЕРЕДАЕТСЯ В 1-32 (В
 @Р@Э 12-27) РАЗРЯДЫ СУММАТОРА.
 В НОВОМ РЕЖИМЕ 32 РАЗРЯД МОДИФИКАТОРА
 РАЗМНОЖАЕТСЯ В 33-64 РАЗРЯДЫ СУММАТОРА!
 В @Р@Э СТАРЩИЕ РАЗРЯДЫ СУММАТОРА ОБНУЛЯЮТСЯ,
 А 60-63 РАЗРЯДЫ
 ЗАПОЛНЯЮТСЯ "1".
 НОМЕР ИНДЕКС-РЕГИСТРА ЗАДАЕТСЯ В
 ПРЯМОМ КОДЕ В 1-4 РАЗРЯДАХ
 ИСПОЛНИТЕЛЬНОГО АДРЕСА. Р@М@Р СОХРАНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
 ПРИЗНАКИ РЕЗУЛЬТАТА УСТАНАВЛИВАЮТСЯ ПО 1-32 РАЗРЯДАМ
 СУММАТОРА.
#ПЕРН 23(043) В @Р@Э; 3F 22 (077 042) В #Б ЭЛЬБРУС-Б (ВИ),
 МКБ-8601 (ITS) #М
 -_ВЫДАЧА МОДИФИКАТОРА МАГАЗИННАЯ.
#А0 ВЫПОЛНЯЕТСЯ ЗАПИСЬ (@А@Т@Х) В ПАМЯТЬ ПО АДРЕСУ,
 СОДЕРЖАЩЕМУСЯ В 15 ИНДЕКС-РЕГИСТРЕ. ЗАТЕМ
 15 РЕГИСТР УВЕЛИЧИВАЕТСЯ НА 1 И ВЫПОЛНЯЕТСЯ
 КОМАНДА @I@T@A. В НОВОМ РЕЖИМЕ 32 РАЗРЯД МОДИФИКАТОРА
 РАЗМНОЖАЕТСЯ В 33-64 РАЗРЯДЫ СУММАТОРА!
 В @Р@Э СТАРШАЯ ПОЛОВИНА СУММАТОРА ОБНУЛЯЕТСЯ, 60-63
 РАЗРЯДЫ ЗАПОЛНЯЮТСЯ "1".
 Р@М@Р СОХРАНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
 ПРИЗНАКИ РЕЗУЛЬТАТА УСТАНАВЛИВАЮТСЯ ПО 1-32 РАЗРЯДАМ СУММАТОРА.
#ПЕРН 24(044) В @Р@Э; 3F 24 (077 044) В #Б ЭЛЬБРУС-Б (ПИ),
 МКБ-8601 (MTJ) #М
 -_ПЕРЕДАЧА ИЗ МОДИФИКАТОРА В МОДИФИКАТОР.
#А0 ПРОИЗВОДИТСЯ ПЕРЕДАЧА СОДЕРЖИМОГО 1-32 (В @Р@Э 1-15)
 РАЗРЯДОВ ИНДЕКС-РЕГИСТРА, ЗАДАВАЕМОГО В ПОЛЕ
 МОДИФИКАТОРА, В 1-32 (В @Р@Э 1-15) РАЗРЯДЫ
 ИНДЕКС-РЕГИСТРА, НОМЕР КОТОРОГО ЗАДАЕТСЯ
 В ПРЯМОМ КОДЕ В 1-4 РАЗРЯДАХ
 АДРЕСНОЙ ЧАСТИ КОМАНДЫ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН 25(045) В @Р@Э; 3F 25 (077 045) В #Б ЭЛЬБРУС-Б (СИ),
 МКБ-8601 (J+М) #М
 -_СЛОЖЕНИЕ МОДИФИКАТОРОВ.
#А0 ЗНАЧЕНИЕ РЕГИСТРА, УКАЗАННОГО В ПОЛЕ МОДИФИКАТОРА,
 ДОБАВЛЯЕТСЯ К ЗНАЧЕНИЮ РЕГИСТРА, УКАЗАННОГО В АДРЕСНОЙ ЧАСТИ
 КОМАНДЫ. РЕЗУЛЬТАТ ОСТАЕТСЯ В РЕГИСТРЕ, УКАЗАННОМ В АДРЕСНОЙ ЧАСТИ.
#ПЕРН 90(220) В #Б РЭ, МКБ-8601 (UТС) #М
 -_ПРЕФИКСАЦИЯ АДРЕСОМ.
#А0 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ ЗАНОСИТСЯ
 В 16 РЕГИСТР И УСТАНАВЛИВАЕТСЯ @П@И@А,
 Т.&Е. &К КОДУ АДРЕСНОЙ ЧАСТИ КОМАНДЫ,
 СЛЕДУЮЩЕЙ ЗА @U@T@C,
 ПРИБАВЛЯЕТСЯ КОД 1-32 (В @Р@Э 1-15)
 РАЗРЯДОВ ИСПОЛНИТЕЛЬНОГО АДРЕСА
 КОМАНДЫ @U@T@C.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН 98(230) В @Р@Э; 3В(073) В #Б ЭЛЬБРУС-Б (ИК), МКБ-8601
 (WТС) #М
#А0 _-_ПРЕФИКСАЦИЯ КОДОМ.
#А0 СОДЕРЖИМОЕ 1-32 (В @Р@Э 13-27)
 РАЗРЯДОВ СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ КОМАНДЫ ЗАНОСЯТСЯ В 16 ИНДЕКС-РЕГИСТР
 И ДЛЯ СЛЕДУЮЩЕЙ КОМАНДЫ УСТАНАВЛИВАЕТСЯ
 @П@И@А, Т.&Е.
 &К КОДУ АДРЕСНОЙ ЧАСТИ КОМАНДЫ,
 СЛЕДУЮЩЕЙ ЗА @W@T@C,
 ПРИБАВЛЯЕТСЯ КОД 1-32 (В @Р@Э 13-27) РАЗРЯДОВ
 СОДЕРЖИМОГО СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ КОМАНДЫ @W@T@C.
 ПЕРЕНОС ИЗ 32-ОГО (В @Р@Э - ИЗ 15-ОГО) РАЗРЯДА
 ПРОПАДАЕТ. #А0 СУММАТОР, @Р@М@Р И ПРИЗНАК
 ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН А0(240) В @Р@Э; 3С(074) В #Б ЭЛЬБРУС-Б (ПА), МКБ-8601
 (VТМ) #М
#А0 _-_УСТАНОВКА АДРЕСА НА МОДИФИКАТОР.
#А0 В ИНДЕКС-РЕГИСТР, УКАЗАННЫЙ В ПОЛЕ
 МОДИФИКАТОРА, ПЕРЕДАЕТСЯ КОД 1-32
 РАЗРЯДОВ ИСПОЛНИТЕЛЬНОГО АДРЕСА КОМАНДЫ (АДРЕС ТИПА @V).
 В @Р@Э ПЕРЕДАЮТСЯ 1-15 РАЗРЯДЫ, 16-32 РАЗРЯДЫ НЕ
 НЕ ИЗМЕНЯЮТСЯ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН А8(250) В @Р@Э; 3D(075) В #Б ЭЛЬБРУС-Б (СА), МКБ-8601
 (UТМ) #М
#А0 _-_СЛОЖЕНИЕ МОДИФИКАТОРА С АДРЕСОМ.
#А0 К СОДЕРЖИМОМУ ИНДЕКС-РЕГИСТРА, УКАЗАННОГО
 В ПОЛЕ МОДИФИКАТОРА, ДОБАВЛЯЕТСЯ КОД ИСПОЛНИТЕЛЬНОГО
 АДРЕСА КОМАНДЫ (АДРЕС ТИПА @V). В НОВОМ РЕЖИМЕ - 32 РАЗРЯДА
 (В @Р@Э - 15), ПЕРЕНОС ИЗ 32-ОГО
 (В @Р@Э - ИЗ 15-ОГО) ПРОПАДАЕТ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#НА #ВС8 _ #А0 #Ц 5.5. КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ #Б БЭСМ-6 #М
#ПЕРН В0(260) В Р@Э; ЕВ(353) В #Б МКБ-8601 (UZA) #М
#А0 _-_УСЛОВНЫЙ ПЕРЕХОД "ПО НУЛЮ".
#А0 ПРОИСХОДИТ ПЕРЕДАЧА УПРАВЛЕНИЯ
 НА ЛЕВУЮ КОМАНДУ ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ
 ПРИ УСЛОВИИ:
#А0 - ГРУППА СЛОЖЕНИЯ: ЕСЛИ ЧИСЛО НА СУММАТОРЕ
 БОЛЬШЕ ИЛИ РАВНО 0 (53 РАЗРЯД ЗНАКА МАНТИССЫ
 СОДЕРЖИТ КОД 0);
#А0 - ГРУППА УМНОЖЕНИЯ: ЕСЛИ ПОРЯДОК ЧИСЛА
 НА СУММАТОРЕ БОЛЬШЕ ИЛИ РАВЕН 0 (64 РАЗРЯД
 ЗНАКА ПОРЯДКА РАВЕН 1);
#А0 - ЛОГИЧЕСКАЯ ГРУППА: ЕСЛИ СУММАТОР СОДЕРЖИТ
 НУЛЕВОЙ КОД (В НОВОМ РЕЖИМЕ ВСЕ 64 РАЗРЯДА,
 В @Р@Э - 64,59:13 РАЗРЯДЫ РАВНЫ 0).
#А0 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН В8(270) В @Р@Э; ЕС(354) В #Б МКБ-8601 (UIA) #М
#А0 _-_УСЛОВНЫЙ ПЕРЕХОД "ПО НЕ НУЛЮ".
#А0 ПРОИСХОДИТ
 ПЕРЕДАЧА УПРАВЛЕНИЯ НА ЛЕВУЮ КОМАНДУ
 СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ ПРИ УСЛОВИИ:
#А0 - ГРУППА СЛОЖЕНИЯ: ЕСЛИ ЧИСЛО НА СУММАТОРЕ
МЕНЬШЕ 0 (53 РАЗРЯД ЗНАКА МАНТИССЫ РАВЕН "1");
#А0 - ГРУППА УМНОЖЕНИЯ: ЕСЛИ ПОРЯДОК ЧИСЛА НА
 СУММАТОРЕ МЕНЬШЕ 0 (64 РАЗРЯД ЗНАКА ПОРЯДКА
 СОДЕРЖИТ КОД "0");
#А0 - ЛОГИЧЕСКАЯ ГРУППА: ЕСЛИ СУММАТОР
 СОДЕРЖИТ НЕНУЛЕВОЙ КОД
 (В НОВОМ РЕЖИМЕ ПРОВЕРЯЮТСЯ
 ВСЕ 64 РАЗРЯДА, В @Р@Э - 64,59:13 РАЗРЯДЫ).
#А0 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН С0(300) В @Р@Э; 18(030) В #Б ЭЛЬБРУС-Б (ПБ), МКБ-8601 (JМР) #М
#А0 _-_БЕЗУСЛОВНЫЙ ПЕРЕХОД.
#А0 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ЛЕВОЙ КОМАНДЕ ПО ИСП. &АДРЕСУ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН С8(310) В @Р@Э; 19(031) В #Б ЭЛЬБРУС-Б (ПВ), МКБ-8601 (VJM) #М
#А0 _-_ПЕРЕХОД С ВОЗВРАТОМ.
#А0 В ИНДЕКС-РЕГИСТР, УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА,
 ЗАНОСИТСЯ АДРЕС СЛОВА, СЛЕДУЮЩЕГО ЗА ТЕМ,
 ОТКУДА ВЫБРАНА КОМАНДА  @V@J@M, ЗАТЕМ
 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ ЛЕВОЙ
 КОМАНДЕ ПО АДРЕСУ,
 УКАЗАННОМУ В КОМАНДЕ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН Е0(340) В @Р@Э; 20(040) В #Б ЭЛЬБРУС-Б (ИР), МКБ-8601 (JMEQ) #М
#А0 _-_УСЛОВНЫЙ ПЕРЕХОД ПО НУЛЮ МОДИФИКАТОРА.
#А0 ЕСЛИ УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА ИНДЕКС-РЕГИСТР
 СОДЕРЖИТ НУЛЕВОЙ КОД (1-32 РАЗРЯДЫ РАВНЫ 0, В @Р@Э
 1-15 РАЗРЯДЫ РАВНЫ 0), ТО ПРОИЗВОДИТСЯ ПЕРЕДАЧА
 УПРАВЛЕНИЯ ЛЕВОЙ КОМАНДЕ ПО АДРЕСУ, УКАЗАННОМУ
 В КОМАНДЕ. #А0 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
 #А0 ЕСЛИ В ПОЛЕ МОДИФИКАТОРА ЗАПИСАН КОД "0",
 ТО ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ ПО АДРЕСУ,
 УКАЗАННОМУ В КОМАНДЕ.
#ПЕРН Е8(350) В @Р@Э; 21(041) В #Б ЭЛЬБРУС-Б (ИН), МКБ-8601 (JMNE) #М
#А0 _-_УСЛОВНЫЙ ПЕРЕХОД ПО НЕ НУЛЮ МОДИФИКАТОРА.
#А0 ЕСЛИ УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА ИНДЕКС-РЕГИСТР
 СОДЕРЖИТ НЕНУЛЕВОЙ КОД (1-32 РАЗРЯДЫ НЕ РАВНЫ 0, В @Р@Э
 1-15 РАЗРЯДЫ НЕ РАВНЫ 0), ТО ПРОИЗВОДИТСЯ ПЕРЕДАЧА
 УПРАВЛЕНИЯ ПО АДРЕСУ, УКАЗАННОМУ В КОМАНДЕ.
#А0 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР,@Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#А0 ЕСЛИ В ПОЛЕ МОДИФИКАТОРА ЗАПИСАН КОД "0",
 ТО ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#ПЕРН F8(370) В @Р@Э; 1В(033) В #Б ЭЛЬБРУС-Б (КЦ), МКБ-8601 (VLM) #М
#А0 _-_КОНЕЦ ЦИКЛА С УВЕЛИЧЕНИЕМ ЗНАЧЕНИЯ МОДИФИКАТОРА.
#А0 ЕСЛИ УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА ИНДЕКС-РЕГИСТР
 СОДЕРЖИТ НЕНУЛЕВОЙ КОД, ТО ПРОИЗВОДИТСЯ
 ПЕРЕДАЧА УПРАВЛЕНИЯ ПО АДРЕСУ, УКАЗАННОМУ В КОМАНДЕ,
 А К СОДЕРЖИМОМУ ИНДЕКС-РЕГИСТРА ПРИБАВЛЯЕТСЯ 1.
 ПЕРЕНОС ИЗ 32-ОГО (В @Р@Э - ИЗ 15-ОГО) РАЗРЯДА
 ПРОПАДАЕТ.
 ЕСЛИ ИНДЕКС-РЕГИСТР СОДЕРЖИТ НУЛЕВОЙ КОД
 (1-32 ,В @Р@Э 1-15 РАЗРЯДЫ РАВНЫ 0), ТО
 ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#НА #ВС8 _ #А0 #Ц 5.6. КОМАНДЫ С РЕГИСТРОМ РЕЖИМОВ
#ПЕРН 17(027) В @Р@Э; DВ(333) В #Б МКБ-8601 (XTR) #М
#А0 _-_УСТАНОВКА @Р@Р ПО КОДУ.
#А0 ПРОИЗВОДИТСЯ ЗАПИСЬ
 1-6 РАЗРЯДОВ ПОРЯДКА ЧИСЛА ПО ИСП.&АДРЕСУ В 1-6 РАЗРЯДЫ @Р@Р.
 СОДЕРЖИМОЕ ОСТАЛЬНЫХ РАЗРЯДОВ ЧИСЛА НЕСУЩЕСТВЕННО.
#А0 КОД "1" ОЗНАЧАЕТ УСТАНОВКУ СООТВЕТСТВУЮЩЕГО РЕЖИМА,
 "0" - ОТМЕНУ ЭТОГО РЕЖИМА.
 54 РАЗРЯД КОДА ПО ИСП.&АДРЕСУ (1 РАЗРЯД ПОРЯДКА) ЗАНОСИТСЯ
 В 1 РАЗРЯД @Р@Р, 55 - ВО 2-Й И Т.&Д.
 ЕСЛИ ОДНОВРЕМЕННО УКАЗАНА УСТАНОВКА ДВУХ ИЛИ ТРЕХ ПРИЗНАКОВ ГРУПП,
 ПРИОРИТЕТ ИМЕЕТ ГРУППА
 СЛОЖЕНИЯ, ЕСЛИ СООТВЕТСТВУЮЩИЙ ЕЙ
 БИТ РАВЕН 1, ИНАЧЕ - ГРУППА УМНОЖЕНИЯ.
#А0 ЕСЛИ ВСЕ ПРИЗНАКИ ГРУПП УСТАНОВЛЕНЫ В "0", ТО:
#А0 _-_КОМАНДЫ УСЛОВНОГО ПЕРЕХОДА @U@Z@A БУДУТ ПЕРЕДАВАТЬ УПРАВЛЕНИЕ
 НА СЛЕДУЮЩУЮ КОМАНДУ, А @U1@A - НА ЛЕВУЮ КОМАНДУ ПО ИСП.&АДРЕСУ.
#А0 _-_КОМАНДА ВЫДАЧИ РЕГИСТРА МЛ.&РАЗРЯДОВ @У@Т@А БУДЕТ
 ВЫПОЛНЯТЬСЯ ТАК ЖЕ,
 КАК ПРИ УСТАНОВЛЕННЫХ ПРИЗНАКАХ "ГРУППА СЛОЖЕНИЯ" ИЛИ
 "ГРУППА УМНОЖЕНИЯ".
 СУММАТОР И @Р@М@Р НЕ МЕНЯЮТСЯ.
#ПЕРН 1F(037) В @Р@Э; 3F 82 (077 202) В #Б МКБ-8601 (NTR) #М
#А0 _-_УСТАНОВКА @Р@Р ПО АДРЕСУ.
#А0 ВЫПОЛНЯЕТСЯ ТАКЖЕ, КАК КОМАНДА @X@T@R,
 НО ВМЕСТО КОДА ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ ИСПОЛЬЗУЮТСЯ 1-6 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО
 АДРЕСА.
#А0 КОМАНДА РАБОТАЕТ ТОЛЬКО С 1-6 РАЗРЯДАМИ @Р@Р.
#ПЕРН 18(030) В @Р@Э; 3F 83 (077 203) В #Б МКБ-8601 (RТЕ) #М
 -_ВЫДАЧА @Р@Р.
#А0 &1-6 РАЗРЯДЫ РЕГИСТРА ПРИЗНАКОВ @Р@Р
 ПОСТУПАЮТ В 1-6 РАЗРЯДЫ ПОРЯДКА СУММАТОРА (54-59 РАЗРЯДЫ)
 И ЛОГИЧЕСКИ УМОЖАЮТСЯ НА КОД 1-6 РАЗРЯДОВ
 ИСПОЛНИТЕЛЬНОГО АДРЕСА. РЕЗУЛЬТАТ ОСТАЕТСЯ
 В 54-59 РАЗРЯДАХ СУММАТОРА. ОСТАЛЬНЫЕ
 РАЗРЯДЫ СУММАТОРА ОБНУЛЯЮТСЯ.
 @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#А0 КОМАНДА РАБОТАЕТ ТОЛЬКО С 1-6 РАЗРЯДАМИ @Р@Р.
#ПЕРН 28:3F(050:077) В @Р@Э; 3F 00 (077 000) В #Б ЭЛЬБРУС-Б;
#А0 80(200) &В МКБ-8601 #М -_ЭКСТРАКОДЫ.
#А0 ПРОИЗВОДИТСЯ ЗАПИСЬ СОДЕРЖИМОГО РАБОЧИХ РЕГИСТРОВ
 В ОБЛАСТЬ УПРЯТЫВАНИЯ РЕГИСТРОВ В ПАМЯТИ ИЛИ В @О@З@У
 МОДИФИКАТОРОВ,
 СТАНДАРТНЫМ ДЛЯ ЭКСТРАКОДА ОБРАЗОМ УСТАНАВЛИВАЕТСЯ @Р@Р,
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС ЭКСТРАКОДА
 ПЕРЕДАЕТСЯ В 14 РЕГИСТР И ПРОИЗВОДИТСЯ ПЕРЕДАЧА
 УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ ПО
 МАТЕМАТИЧЕСКОМУ АДРЕСУ, ОПРЕДЕЛЯЕМОМУ
 КОДОМ ЭКСТРАКОДА.
 ПОДРОБНЕЕ СМ. П.4.8.
#НА #ВС8 _
#А0 #Б #Ц  КОМАНДЫ, РАБОТАЮЩИЕ ТОЛЬКО В НОВОМ РЕЖИМЕ :
#М #НА #А0 #Ц 5.7. КОМАНДЫ С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ #А0
#ПЕРН 81(201)_-_ЦЕЛОЕ СЛОЖЕНИЕ СУММАТОРА С ОПЕРАНДОМ (@А+@U).
#А0 СУММАТОР РАССМАТРИВАЕТСЯ КАК ЦЕЛОЕ 64-РАЗРЯДНОЕ
 ЧИСЛО СО ЗНАКОМ.
 ОТРИЦАТЕЛЬНЫЕ ЧИСЛА ПРЕДСТАВЛЯЮТСЯ
 В ДОПОЛНИТЕЛЬНОМ КОДЕ.
 В КАЧЕСТВЕ ОПЕРАНДА ИСПОЛЬЗУЕТСЯ ИСПОЛНИТЕЛЬНЫЙ
 АДРЕС КОМАНДЫ С РАЗМНОЖЕНИЕМ 32 РАЗРЯДА В 33-64
 РАЗРЯДЫ. ВЫПОЛНЯЕТСЯ КОМАНДА
 АРИФМЕТИЧЕСКОГО СЛОЖЕНИЯ.
 РЕЗУЛЬТАТ НА СУММАТОРЕ. @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЮТСЯ ГРУППА УМНОЖЕНИЯ И ПРИЗНАКИ
 РЕЗУЛЬТАТА. ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#ПЕРН 82(202)_-_ВЫЧИТАНИЕ НЕПОСРЕДСТВЕННОГО ОПЕРАНДА (@А-@U).
#ПЕРН 83(203) - ОБРАТНОЕ ВЫЧИТАНИЕ (@U-@А).
#ПЕРН 48(110) В #Б ЭЛЬБРУС-Б (СЧЛ), МКБ-8601 (UТА) #М
#А0 _-_ВЫДАЧА ИСПОЛНИТЕЛЬНОГО АДРЕСА.
#А0 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ
 С РАЗМНОЖЕНИЕМ ЗНАКОВОГО РАЗРЯДА В 33-64 ПЕРЕСЫЛАЕТСЯ
 В СУММАТОР.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 49(111) В #Б ЭЛЬБРУС-Б (ЛУЛ), МКБ-8601 (AAU) #М
#А0 _-_ЛОГИЧЕСКОЕ УМНОЖЕНИЕ СУММАТОРА.
#А0 АНАЛОГ КОМАНДЫ @А@А@Х, НО В КАЧЕСТВЕ ОПЕРАНДА ИСПОЛЬЗУЕТСЯ
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ С РАЗМНОЖЕНИЕМ 32 РАЗРЯДА В 33-64.
 РЕЗУЛЬТАТ НА СУММАТОРЕ.
 @Р@М@Р НЕ МЕНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 4А(112) В #Б ЭЛЬБРУС-Б (СРЛ), МКБ-8601 (AEU) #М
#А0 _-_СРАВНЕНИЕ СУММАТОРА.
#А0 АНАЛОГ КОМАНДЫ @А@Е@Х С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ, НО
 ЗНАЧЕНИЕ СУММАТОРА В @Р@М@Р НЕ ПЕРЕСЫЛАЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 4D(115) В #Б ЭЛЬБРУС-Б (ЛСЛ), МКБ-8601 (AOU) #М
#А0 _-_ЛОГИЧЕСКОЕ СЛОЖЕНИЕ.
#А0 АНАЛОГ КОМАНДЫ @А@О@Х.
 @Р@М@Р НЕ МЕНЯЕТСЯ. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 86(206) - ЦЕЛОЧИСЛЕННОЕ ДЕЛЕНИЕ (@А/@U).
#А0 ЧАСТНОЕ ОТ ДЕЛЕНИЯ ОСТАЕТСЯ НА СУММАТОРЕ, ОСТАТОК - В @Р@М@Р.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН 87(207) - ЦЕЛОЧИСЛЕННОЕ УМНОЖЕНИЕ (@А*@U).
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН 52(122) В #Б ЭЛЬБРУС-Б (ВЧЛ), МКБ-8601 (ACU) #М
#А0 _-_ВЫДАЧА ЧИСЛА ЕДИНИЦ.
#А0 ПОДСЧИТЫВАЕТСЯ ЧИСЛО ЕДИНИЦ КОДА НА СУММАТОРЕ.
 ПОЛУЧЕННАЯ ВЕЛИЧИНА АРИФМЕТИЧЕСКИ(!) СКЛАДЫВАЕТСЯ С КОДОМ
 ИСПОЛНИТЕЛЬНОГО АДРЕСА КОМАНДЫ.
 32 РАЗРЯД АДРЕСА ПЕРЕД СЛОЖЕНИЕМ РАЗМНОЖАЕТСЯ.
 РЕЗУЛЬТАТ НА СУММАТОРЕ. @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 53(123) В #Б ЭЛЬБРУС-Б (ВНЛ), МКБ-8601 (ANU) #М
#А0 _-_ВЫДАЧА НОМЕРА СТАРШЕЙ ЕДИНИЦЫ.
#А0 ОПРЕДЕЛЯЕТСЯ НОМЕР СТАРШЕГО РАЗРЯДА @А, СОДЕРЖАЩЕГО "1".
 64 РАЗРЯДУ СООТВЕТСТВУЕТ 1, 63_-_2, _..._, 1_-_101В.
 ЕСЛИ СУММАТОР БЫЛ НУЛЕВОЙ, РЕЗУЛЬТАТ ПОЛАГАЕТСЯ РАВНЫМ НУЛЮ.
 ПОЛУЧЕННЫЙ НОМЕР АРИФМЕТИЧЕСКИ(!) СКЛАДЫВАЕТСЯ С КОДОМ ИСПОЛНИТЕЛЬНОГО
 АДРЕСА КОМАНДЫ.
 РЕЗУЛЬТАТ НА СУММАТОРЕ.
 В @Р@М@Р, НАЧИНАЯ С 64 РАЗРЯДА, ПОМЕЩАЕТСЯ ОСТАТОК
 СУММАТОРА, НАЧИНАЯ С РАЗРЯДА, СЛЕДУЮЩЕГО ЗА ТЕМ, НОМЕР
 КОТОРОГО ОПРЕДЕЛЕН. УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 88(210) - ВЫДАЧА ИСПОЛНИТЕЛЬНОГО АДРЕСА В @Р@М@Р (@U@T@Y).
#А0 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ (1-32 РАЗРЯДЫ) С РАЗМНОЖЕНИЕМ
 32 РАЗРЯДА В 33-64 ЗАСЫЛАЕТЯ В @Р@М@Р.
 СУММАТОР И @Р@Р НЕ ИЗМЕНЯЮТСЯ.
#ПЕРН 43(103) В #Б ЭЛЬБРУС-Б (СМЛ), МКБ-8601 (UTS) #М
#А0 _-_ЗАГРУЗКА АДРЕСА В СУММАТОР МАГАЗИНННАЯ.
#А0 СУММАТОР ПЕРЕСЫЛАЕТСЯ ПО АДРЕСУ, СОДЕРЖАЩЕМУСЯ
 В 15 ИНДЕКС-РЕГИСТРЕ. ПОСЛЕ ЧЕГО
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ
 С РАЗМНОЖЕНИЕМ 32-ОГО РАЗРЯДА В 33-64Р. &ПЕРЕСЫЛАЕТСЯ
 В СУММАТОР, А
 15 ИНДЕКС-РЕГИСТР
 УВЕЛИЧИВАЕТСЯ НА "1".
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#НА #НА #ВС9 _
#А0 #Ц 5.8. КОМАНДЫ С @Р@М@Р #А0
#ПЕРН 94(224) - СЧИТЫВАНИЕ ИЗ ПАМЯТИ В @Р@М@Р (@Х@Т@У).
#А0 СУММАТОР И @Р@Р НЕ ИЗМЕНЯЮТСЯ.
#ПЕРН 95(225) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ @Р@М@Р (@У@А@Х).
#А0 СОДЕРЖИМОЕ @Р@М@Р ЛОГИЧЕСКИ УМНОЖАЕТСЯ НА ОПЕРАНД
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 РЕЗУЛЬТАТ - НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 96(226) - СРАВНЕНИЕ ОПЕРАНДА С @Р@М@Р (@У@Е@Х).
#А0 РЕЗУЛЬТАТ - НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 97(227) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ С @Р@М@Р (@У@О@Х).
#А0 РЕЗУЛЬТАТ - НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 98(230) - ЗАПИСЬ @Р@М@Р  В ПАМЯТЬ (@У@Т@Х).
#ПЕРН 3F 84 (077 204) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@А@А@У).
#А0 СУММАТОР ЛОГИЧЕСКИ УМНОЖАЕТСЯ НА @Р@М@Р.
 РЕЗУЛЬТАТ ОСТАЕТСЯ НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 3F 85 (077 205) - СРАВНЕНИЕ СУММАТОРА С @Р@М@Р (@А@Е@У).
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 3F 86 (077 206) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ СУММАТОРА И @Р@М@Р (@А@О@У).
#А0 РЕЗУЛЬТАТ НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#НА #ВС8 _
#А0 #Ц 5.9. ИНДЕКСНЫЕ КОМАНДЫ
#ПЕРН 3F 90 (077 220) - ОБМЕН СОДЕРЖИМОГО МОДИФИКАТОРОВ (@M@C@J).
#А0 РЕГИСТР, УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА,
 И РЕГИСТР, УКАЗАННЫЙ В АДРЕСНОЙ ЧАСТИ КОМАНДЫ,
 ОБМЕНИВАЮТСЯ СВОИМИ ЗНАЧЕНИЯМИ.
 СУММАТОР, @Р@М@Р, ПРИЗНАК ГРУППЫ - НЕ МЕНЯЮТСЯ.
#ПЕРН 3F 91 (077 221) - АРИФМЕТИЧЕСКИЙ СДВИГ МОДИФИКАТОРА (@M@S@N).
#А0 СОДЕРЖИМОЕ РЕГИСТРА, УКАЗАННОГО В ПОЛЕ МОДИФИКАТОРА,
 СДВИГАЕТСЯ НА КОЛИЧЕСТВО РАЗРЯДОВ, ЗАДАННОЕ
 В 1-11 РАЗРЯДАХ УСПОЛНИТЕЛЬНОГО АДРЕСА
 ПАРАМЕТР СДВИГА ЗАДАЕТСЯ ТАКЖЕ, КАК В
 КОМАНДЕ @A@S@X.
 ПРИ СДВИГЕ ВПРАВО В ОСВОБОЖДАЮЩИЕСЯ СТАРШИЕ РАЗРЯДЫ РЕГИСТРА
 РАЗМНОЖАЕТСЯ КОД ЗНАКА РЕГИСТРА.
 ПРИ СДВИГЕ ВЛЕВО МЛАДШИЕ РАЗРЯДЫ РЕГИСТРА ЗАПОЛНЯЮТСЯ
 НУЛЕВЫМ КОДОМ.
 32-ОЙ РАЗРЯД ОСТАЕТСЯ НА МЕСТЕ.
 СУММАТОР, @Р@М@Р, ПРИЗНАК ГРУППЫ - НЕ МЕНЯЮТСЯ.
#ПЕРН 3F 27 (077 047) В #Б ЭЛЬБРУС-Б (ИМ), МКБ-8601 (J-М) #М
#А0 _-_ВЫЧИТАНИЕ МОДИФИКАТОРОВ.
#А0 ИЗ СОДЕРЖИМОГО РЕГИСТРА, УКАЗАННОГО В АДРЕСНОЙ ЧАСТИ КОМАНДЫ,
 ВЫЧИТАЕТСЯ СОДЕРЖИМОЕ РЕГИСТРА, УКАЗАННОГО В ПОЛЕ МОДИФИКАТОРА.
 РЕЗУЛЬТАТ ОСТАЕТСЯ В РЕГИСТРЕ, УКАЗАННОМ В АДРЕСНОЙ ЧАСТИ КОМАНДЫ.
 СУММАТОР, @Р@М@Р, ПРИЗНАК ГРУППЫ - НЕ МЕНЯЮТСЯ.
#ПЕРН А0(240) - УСТАНОВКА АДРЕСА ПОЛУСЛОВА НА МОДИФИКАТОР (@V@T@M@H).
#А0 В ИНДЕКС-РЕГИСТР, УКАЗАННЫЙ В ПОЛЕ
 МОДИФИКАТОРА, ПЕРЕДАЕТСЯ
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС КОМАНДЫ,
 АРИФМЕТИЧЕСКИ СДВИНУТЫЙ ВЛЕВО НА 1 РАЗРЯД:
 31 РАЗРЯД ИСПОЛНИТЕЛЬНОГО АДРЕСА ПРОПАДАЕТ, 32 РАЗРЯД (ЗНАК)
 СОХРАНЯЕТСЯ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН А1(241) - УСТ.АДРЕСА 16-Р.&ФРАГМЕНТА НА МОДИФИКАТОР (@V@T@M@Q).
#А0 АНАЛОГИЧНО КОМАНДЕ @V@T@M@H,
 НО СО СДВИГОМ ВЛЕВО НА 2 РАЗРЯДА.
#ПЕРН А2(242) - УСТАНОВКА АДРЕСА БАЙТА НА МОДИФИКАТОР (@V@T@M@B).
#А0 АНАЛОГИЧНО КОМАНДЕ @V@T@M@H,
 НО СО СДВИГОМ ВЛЕВО НА 3 РАЗРЯДА.
#ПЕРН А3(243) - УСТАНОВКА АДРЕСА БИТА НА МОДИФИКАТОР (@V@T@M@F).
#А0 АНАЛОГИЧНО КОМАНДЕ @V@T@M@H,
 НО СО СДВИГОМ ВЛЕВО НА 6 РАЗРЯДОВ.
#ПЕРН А4(244) - ПРЕФИКСАЦИЯ АДРЕСОМ СО СДВИГОМ (@U@T@C@S).
#А0 АНАЛОГИЧНА КОМАНДЕ @U@T@C,
 НО ПЕРЕД ЗАПИСЬЮ В РЕГИСТР @С
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС АРИФМЕТИЧЕСКИ
 СДВИГАЕТСЯ ВЛЕВО НА 16.
 ИСПОЛЬЗУЕТСЯ ДЛЯ ДОСТУПА
 К ЧАСТЯМ СЛОВА, ПОЛНЫЙ АДРЕС КОТОРЫХ
 МОЖЕТ БЫТЬ БОЛЬШЕ 20 РАЗРЯДОВ.
 УСТАНАВЛИВАЕТСЯ @П@И@А.
 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН 3F 94 (077 224) - УПАКОВКА МОДИФИКАТОРОВ (@М@Р@А@С).
#А0 СОДЕРЖИМОЕ ЧЕТЫРЕХ
 ПОСЛЕДОВАТЕЛЬНО РАСПОЛОЖЕННЫХ
 МОДИФИКАТОРОВ, МЛАДШИЙ ИЗ КОТОРЫХ
 ЗАДАЕТСЯ ИСПОЛНИТЕЛЬНЫМ
 АДРЕСОМ, ПЕРЕПИСЫВАЮТСЯ В
 СУММАТОР И @Р@М@Р, ПО 2 В КАЖДЫЙ РЕГИСТР;
 В ЛЕВОЙ ПОЛОВИНЕ РЕГИСТРА - МЛАДШИЙ ПО НОМЕРУ МОДИФИКАТОР.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 3F 95 (077 225) - РАСПАКОВКА МОДИФИКАТОРОВ (@M@U@N@P).
#А0 СОДЕРЖИМОЕ СУММАТОРА И @Р@М@Р
 ПЕРЕПИСЫВАЕТСЯ В ЧЕТЫРЕ
 ПОСЛЕДОВАТЕЛЬНО РАСПОЛОЖЕННЫХ
 МОДИФИКАТОРА, МЛАДШИЙ ИЗ КОТОРЫХ
 ЗАДАЕТСЯ ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ.
 СУММАТОР, #Б РМР &И РР #М НЕ МЕНЯЮТСЯ.
#ПЕРН 3F А2 (077 242) - АРИФМЕТИЧ.&СЛОЖЕНИЕ С МОДИФИКАТОРОМ (@А+@I).
#А0 СЛОЖЕНИЕ СУММАТОРА С СОДЕРЖИМЫМ МОДИФИКАТОРА,
 НОМЕР КОТОРОГО ЗАДАЕТСЯ ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ.
 В ЭТОЙ КОМАНДЕ И В СЛЕДУЮЩИХ ЗНАКОВЫЙ
 РАЗРЯД МОДИФИКАТОРА ПЕРЕД ВЫПОЛНЕНИЕМ ОПЕРАЦИИ
 РАЗМНОЖАЕТСЯ В 33-64 РАЗРЯДЫ.
 УСТАНАВЛИВАЮТСЯ ГРУППА УМНОЖЕНИЯ И
 ПРИЗНАКИ РЕЗУЛЬТАТА.
 ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#ПЕРН 3F А3 (077 243) - АРИФМЕТИЧ. &ВЫЧИТАНИЕ МОДИФИКАТОРА (@А-@I).
#ПЕРН 3F А4 (077 244) - ОБРАТНОЕ ВЫЧИТАНИЕ МОДИФИКАТОРА (@I-@А).
#ПЕРН 3F А7 (077 247) - ДЕЛЕНИЕ ЦЕЛОЧИСЛЕННОЕ (@А/@I).
#А0 СУММАТОР ДЕЛИТСЯ НА МОДИФИКАТОР.
 ЧАСТНОЕ - НА СУММАТОРЕ, ОСТАТОК - В @Р@М@Р.
#ПЕРН 3F А8 (077 250) - УМНОЖЕНИЕ ЦЕЛОЧИСЛЕННОЕ (@А*@I).
#А0 РЕЗУЛЬТАТ - В СУММАТОРЕ.
#ПЕРН 3F А9 (077 251) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@A@A@I).
#А0 ЗДЕСЬ И В СЛЕДУЮЩИХ ЛОГИЧЕСКИХ
 КОМАНДАХ УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 3F АА (077 252) - СРАВНЕНИЕ (@A@E@I).
#А0 @Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 3F АВ (077 253) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ (@A@O@I).
#НА #ВС8 _
#А0 #Ц 5.10. КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ #А0
#ПЕРН 22(042) В #Б ЭЛЬБРУС-Б (ИБР), МКБ-8601) (JMGE) #М
#А0 _-_ПЕРЕХОД,ЕСЛИ МОДИФИКАТОР БОЛЬШЕ ИЛИ РАВЕН "0".
#А0 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ПО АДРЕСУ КОМАНДЫ, ЕСЛИ УКАЗАННЫЙ
 В ПОЛЕ МОДИФИКАТОРА ИНДЕКС-РЕГИСТР
 ПОЛОЖИТЕЛЬНЫЙ (32 РАЗРЯД ЗНАКА РАВЕН 0).
#ПЕРН 23(043) В #Б ЭЛЬБРУС-Б (ИМЕ), МКБ-8601 (JMLT) #М
#А0 _-_ПЕРЕХОД, ЕСЛИ МОДИФИКАТОР МЕНЬШЕ "0".
#ПЕРН 24(044) В #Б ЭЛЬБРУС-Б (ИМР), МКБ-8601 (JMLE) #М
#А0 _-_ПЕРЕХОД, ЕСЛИ МОДИФИКАТОР МЕНЬШЕ ИЛИ РАВЕН "0".
#ПЕРН 25(045) В #Б ЭЛЬБРУС-Б (ИБ), МКБ-8601 (JMGT)
#А0 _-_ПЕРЕХОД, ЕСЛИ МОДИФИКАТОР БОЛЬШЕ "0".
#ПЕРН А9(251) - КОНЕЦ ЦИКЛА С УМЕНЬШЕНИЕМ ЗНАЧЕНИЯ МОДИФ.(@V@R@M).
#А0 ЕСЛИ УКАЗАННЫЙ В ПОЛЕ МОДИФИКАТОРА
 ИНДЕКС-РЕГИСТР СОДЕРЖИТ НЕНУЛЕВОЙ КОД, ТО
 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ  ПО АДРЕСУ,
 УКАЗАННОМУ В КОМАНДЕ, А ИЗ
 СОДЕРЖИМОГО ИНДЕКС-РЕГИСТРА
 ВЫЧИТАЕТСЯ "1". ЕСЛИ ИНДЕКС-РЕГИСТР СОДЕРЖИТ НУЛЕВОЙ КОД,
 ТО ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН АА(252) - УСЛОВНЫЙ ПЕРЕХОД ПО "0" МАГАЗИННЫЙ (@U@Z@A@S).
#А0 СУММАТОР И ПРИЗНАК ГРУППЫ
 ИСПОЛЬЗУЮТСЯ ДЛЯ ВЫРАБОТКИ УСЛОВИЯ ПЕРЕХОДА
 АНАЛОГИЧНО КОМАНДЕ @U@Z@A.
 ЗАТЕМ ПРОИЗВОДИТСЯ ЧТЕНИЕ ИЗ МАГАЗИННОЙ ПАМЯТИ
 В СУММАТОР С ПРОДВИЖКОЙ МАГАЗИНА И УСТАНАВЛИВАЕТСЯ ПРИЗНАК
 ЛОГИЧЕСКОЙ ГРУППЫ. ТОЛЬКО ПОСЛЕ ЭТОГО  ПРОИЗВОДИТСЯ ПЕРЕХОД
 ИЛИ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#ПЕРН АВ(253) - УСЛОВНЫЙ ПЕРЕХОД ПО "1" МАГАЗИННЫЙ (@U1@A@S).
#А0 АНАЛОГИЧНО КОМАНДЕ @U@Z@A@S.
#ПЕРН АС(254) - УСЛОВНЫЙ ПЕРЕХОД ПРИ ПЕРЕПОЛНЕНИИ (@J@O@V@R).
#А0 ЕСЛИ ПРИЗНАК ПЕРЕПОЛНЕНИЯ @O@V@R СОДЕРЖИТ "0" - ВЫПОЛНЯЕТСЯ
 СЛЕДУЮЩАЯ КОМАНДА. В ПРОТИВНОМ СЛУЧАЕ ПРОИСХОДИТ ПЕРЕХОД ПО
 ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
#ПЕРН AD(255) - УСЛОВНЫЙ ПЕРЕХОД ПРИ ПЕРЕНОСЕ (@J@C@R@Y).
#А0 ЕСЛИ ПРИЗНАК ПЕРЕНОСА @С СОДЕРЖИТ "0" -
 ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
 В ПРОТИВНОМ СЛУЧАЕ ПРОИСХОДИТ ПЕРЕХОД
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
#ПЕРН АЕ(256) - ПЕРЕХОД, ЕСЛИ СУММАТОР БОЛЬШЕ 0 (@J@A@G@T).
#А0 СУММАТОР РАССМАТРИВАЕТСЯ КАК
 ЦЕЛОЕ 63-РАЗРЯДНОЕ ЧИСЛО,
 64-Й РАЗРЯД - ЗНАКОВЫЙ, ОТРИЦАТЕЛЬНЫЕ
 ЧИСЛА ПРЕДСТАВЛЯЮТСЯ В ДОПОЛНИТЕЛЬНОМ КОДЕ.
 ПРОИЗВОДИСТЯ ПЕРЕДАЧА УПРАВЛЕНИЯ ПО
 ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 ЕСЛИ ЗНАК СУММАТОРА ПОЛОЖИТЕЛЬНЫЙ (32 РАЗРЯД = 0).
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
 #А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН AF(257) - ПЕРЕХОД,ЕСЛИ СУММАТОР БОЛЬШЕ ИЛИ РАВЕН 0 (@J@A@G@E).
#ПЕРН В0(260) - ПЕРЕХОД, ЕСЛИ СУММАТОР МЕНЬШЕ 0 (@J@A@L@T).
#ПЕРН В1(261) - ПЕРЕХОД, ЕСЛИ СУММАТОР МЕНЬШЕ ИЛИ РАВЕН 0 (@J@A@L@E).
#ПЕРН В2(262) - ПЕРЕХОД, ЕСЛИ СУММАТОР РАВЕН 0 (@J@A@E@Q).
#А0 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 ЕСЛИ
 1-64 РАЗРЯДЫ СУММАТОРА РАВНЫ "0".
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ КОМАНДА.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ НЕ МЕНЯЕТСЯ.
#ПЕРН В3(263) - ПЕРЕХОД, ЕСЛИ СУММАТОР НЕ РАВЕН 0 (@J@A@N@E).
#ПЕРН В4(264) - ПЕРЕХОД К ПОДПРОГРАММЕ (@J@M@P@S).
#А0 ЗНАЧЕНИЕ ПРОГРАММНОГО СЧЕТЧИКА, УВЕЛИЧЕННОГО
 НА 1 (@Р@С+1), ЗАПИСЫВАЕТСЯ В СТЕК АДРЕСОВ
 ВОЗВРАТА ИЗ ПОДПРОГРАММ.
 ЗНАЧЕНИЕ
 УКАЗАТЕЛЯ СТЕКА В @Р@А@В УВЕЛИЧИВАЕТСЯ НА 1
 И ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 ПРИ ЗАПИСИ АДРЕСА ВОЗВРАТА
 В ПАМЯТЬ @Р@Р НЕ МЕНЯЕТСЯ!
 Т.&Е. &СТЕК
 АДРЕСОВ ВОЗВРАТА ДОЛЖЕН БЫТЬ
 РАЗМЕЩЕН В ПАМЯТИ, ДОСТУПНОЙ ИЗ ПРОГРАММЫ.
 ВОЗМОЖНЫ СТРАНИЧНЫЕ И ДРУГИЕ ПРЕРЫВАНИЯ.
#ПЕРН 3F 87(077 207) - ВОЗВРАТ ИЗ ПОДПРОГРАММЫ (@R@E@T@S).
#А0 ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ПО АДРЕСУ, ЗАПИСАННОМУ В СТЕК АДРЕСОВ
 ВОЗВРАТА ИЗ ПОДПРОГРАММ ПОСЛЕДНИМ.
 ЗНАЧЕНИЕ УКАЗАТЕЛЯ СТЕКА В @Р@А@В
 УМЕНЬШАЕТСЯ НА 1.
 ВО ВРЕМЯ ЧТЕНИЯ АДРЕСА ВОЗВРАТА @Р@Р НЕ МЕНЯЕТСЯ.
#НА #ВС8 _
#А0 #Ц 5.11. ЦЕЛАЯ 64-РАЗРЯДНАЯ АРИФМЕТИКА #А0
#НА НАБОР КОМАНД АНАЛОГИЧЕН НАБОРУ КОМАНД С ПЛАВАЮЩЕЙ ЗАПЯТОЙ.
 РЕЗУЛЬТАТ ЛЮБОЙ  ОПЕРАЦИИ ВСЕГДА ОСТАЕТСЯ ЦЕЛЫМ ЧИСЛОМ.
 НОРМАЛИЗАЦИИ И ОКРУГЛЕНИЯ НЕ ПРОИСХОДИТ, ДАЖЕ ЕСЛИ В @Р@Р
 ОТСУТСТВУЮТ СООТВЕТСТВУЮЩИЕ БЛОКИРОВКИ.
 РЕЗУЛЬТАТ ВСЕХ ОПЕРАЦИЙ - НА СУММАТОРЕ, @Р@М@Р НЕ МЕНЯЕТСЯ.
 ИСКЛЮЧЕНИЕ СОСТАВЛЯЕТ КОМАНДА ДЕЛЕНИЯ, У КОТОРОЙ В СУММАТОР
 ЗАНОСИТСЯ ЧАСТНОЕ, В @Р@М@Р - ОСТАТОК.
 УСТАНАВЛИВАЕСЯ ГРУППА УМНОЖЕНИЯ И ПРИЗНАКИ РЕЗУЛЬТАТА.
 ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#ПЕРН 3F 96 (077 226) - СДВИГ АРИФМЕТИЧЕСКИЙ ЦЕЛОГО СЛОВА
 ПО АДРЕСУ (@A@S@N@A).
#А0 ПРОИЗВОДИТСЯ АРИФМЕТИЧЕСКИЙ СДВИГ
 СУММАТОРА НА @N РАЗРЯДОВ, ЗАДАВАЕМЫХ
 В 1-11 РАЗРЯДАХ ИСПОЛНИТЕЛЬНОГО АДРЕСА.
 11 РАЗРЯД ЗАДАЕТ НАПРАВЛЕНИЕ СДВИГА (КАК В КОМАНДЕ @A@S@X).
 ПРИ СДВИГАХ ПЕРЕМЕЩАЮТСЯ ТОЛЬКО 1-63 РАЗРЯДЫ,
 СДВИГ ВПРАВО ПРОИСХОДИТ С РАЗМНОЖЕНИЕМ ЗНАКОВОГО
 РАЗРЯДА, ПРИ СДВИГЕ ВЛЕВО ОСВОБОЖДАЮЩИЕСЯ
 ПОЗИЦИИ ЗАПОЛНЯЮТСЯ "0".
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 99(231) - СЛОЖЕНИЕ АРИФМЕТИЧЕСКОЕ (@А+@L).
#ПЕРН 9А(232) - ВЫЧИТАНИЕ АРИФМЕТИЧЕСКОЕ (@А-@L).
#ПЕРН 9В(233) - ОБРАТНОЕ ВЫЧИТАНИЕ (@L-@А).
#ПЕРН 9Е(236) - ДЕЛЕНИЕ ЦЕЛОЧИСЛЕННОЕ (@А/@L).
#ПЕРН 9F(237) - УМНОЖЕНИЕ ЦЕЛОЧИСЛЕННОЕ  (@А*@L).
#НА #НА #ВС8 _
#А0 #Ц 5.12. ОПЕРАЦИИ НАД ПОЛУСЛОВАМИ #А0
#НА ПОЛУСЛОВА АДРЕСУЮТСЯ 21-РАЗРЯДНЫМ ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ,
 НАЧИНАЯ С 0.  В ПОЛНОМ СЛОВЕ С АДРЕСОМ @N=0,1,... РАЗМЕЩАЮТСЯ
 (СЛЕВА НАПРАВО) ДВА 32-РАЗРЯДНЫХ ПОЛУСЛОВА, АДРЕСУЕМЫХ КАК
 2@N И 2@N+1.
#НА ЗАПИСЬ ПРОИЗВОДИТСЯ ИЗ 1-32 РАЗРЯДОВ
 СУММАТОРА В ПОЛУСЛОВО ПО ИСПОЛНИТЕЛТЬНОМУ
 АДРЕСУ, ОСТАЛЬНЫЕ
 РАЗРЯДЫ СЛОВА НЕ МЕНЯЮТСЯ.
 ПРИ ИЗВЛЕЧЕНИИ ПОЛУСЛОВНОГО ОПЕРАНДА ИЗ ПАМЯТИ ОПЕРАНД
 ПРЕОБРАЗУЕТСЯ К ФОРМАТУ 64-РАЗРЯДНОГО ЦЕЛОГО РАЗМНОЖЕНИЕМ
 32 РАЗРЯДА В 33-64. ТАКИМ ОБРАЗОМ, АРИФМЕТИКА ПОЛУСЛОВ
 ОТЛИЧАЕТСЯ ОТ АРИФМЕТИКИ 64-РАЗРЯДНЫХ ЦЕЛЫХ ЧИСЕЛ ТОЛЬКО
 СПОСОБОМ ВЫБОРКИ ОПЕРАНДА.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ ПЕРЕНОСА @С ПРИ ПЕРЕНОСЕ
 ИЗ 32-ОГО РАЗРЯДА И ПЕРЕПОЛНЕНИЯ @O@V@R,
 ЕСЛИ РЕЗУЛЬТАТ ПРЕВЫШАЕТ 32 РАЗРЯДА.
 ПРЕРЫВАНИЯ ПО ПЕРЕПОЛНЕНИЮ НЕ ПРОИСХОДИТ.
#ПЕРН В6(266) - ЗАПИСЬ ПОЛУСЛОВА В ПАМЯТЬ (@А@Т@Н).
#А0 СОДЕРЖИМОЕ 1-32 РАЗРЯДОВ СУММАТОРА ЗАПИСЫВАЕТСЯ В ПАМЯТЬ
 ПО ИСП.&АДРЕСУ.
 ПРИЗНАК ГРУППЫ НЕ МЕНЯЕТСЯ.
#ПЕРН В7(267) - ЗАПИСЬ ПОЛУСЛОВА МАГАЗИННАЯ (@S@T@H).
#А0 СОДЕРЖИМОЕ 1-32 РАЗРЯДОВ СУММАТОРА ЗАПИСЫВАЕТСЯ В ПАМЯТЬ
 ПО ИСП.&АДРЕСУ. ДАЛЕЕ ДЕЛАЕТСЯ МАГАЗИННОЕ СЧИТЫВАНИЕ
 ЦЕЛОГО СЛОВА В СУММАТОР.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН В8(270) - ЧТЕНИЕ ПОЛУСЛОВА ИЗ ПАМЯТИ (@Н@Т@А).
#А0 ПОЛУСЛОВНЫЙ ОПЕРАНД ПО ИСП.&АДРЕСУ СЧИТЫВАЕТСЯ В 1-32 РАЗРЯДЫ
 СУММАТОРА, ПОСЛЕ ЧЕГО 32 РАЗРЯД РАЗМНОЖАЕТСЯ В 33-64.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН В9(271) - ЧТЕНИЕ ПОЛУСЛОВА МАГАЗИННОЕ (@H@T@S).
#А0 СОДЕРЖИМОЕ СУММАТОРА ЗАПИСЫВАЕТСЯ В МАГАЗИН.
 ДАЛЕЕ ДЕЛАЕТСЯ ТО ЖЕ, ЧТО В КОМАНДЕ @Н@Т@А.
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН ВА(272) - АРИФМЕТИЧЕСКОЕ СЛОЖЕНИЕ С ПОЛУСЛОВОМ (@А+@Н).
#А0 ЗДЕСЬ И В СЛЕДУЮЩИХ
 АРИФМЕТИЧЕСКИХ КОМАНДАХ
 УСТАНАВЛИВАЕТСЯ ГРУППА УМНОЖЕНИЯ.
#ПЕРН ВВ(273) - АРИФМЕТИЧЕСКОЕ ВЫЧИТАНИЕ ПОЛУСЛОВА (@А-@Н).
#ПЕРН ВС(274) - ОБРАТНОЕ ВЫЧИТАНИЕ (@Н-@А).
#ПЕРН BF(277) - ДЕЛЕНИЕ ЦЕЛОЧИСЛЕННОЕ (@А/@Н).
#А0 СУММАТОР ДЕЛИТСЯ НА ОПЕРАНД.
 ЧАСТНОЕ - НА СУММАТОРЕ, ОСТАТОК - В @Р@М@Р.
#ПЕРН С0(300) - УМНОЖЕНИЕ ЦЕЛОЧИСЛЕННОЕ (@А*@Н).
#ПЕРН С1(301) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@А@А@Н).
#А0 ЗДЕСЬ И В СЛЕДУЮЩИХ ЛОГИЧЕСКИХ КОМАНДАХ
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН С2(302) - СРАВНЕНИЕ (@А@Е@Н).
#А0 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН С3(303) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ (@А@О@Н).
#НА #НА #ВС8 _
#А0 #Ц 5.13. ОПЕРАЦИИ НАД 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ #А0
#НА 16-РАЗРЯДНЫЕ ФРАГМЕНТЫ СЛОВА АДРЕСУЮТСЯ 22-РАЗРЯДНЫМ
 ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ, НАЧИНАЯ С 0. В ПОЛНОМ СЛОВЕ С АДРЕСОМ
 @N=0,1,... РАЗМЕЩАЮТСЯ СЛЕВА НАПРАВО 4 16-РАЗРЯДНЫХ
 ФРАГМЕНТА, АДРЕСУЕМЫХ КАК _4@N,_4@N+1,_4@N+2,_4@N+3.
#НА ЗАПИСЬ ПРОИЗВОДИТСЯ ИЗ 1-16
 РАЗРЯДОВ СУММАТОРА В 16-РАЗРЯДНЫЙ ФРАГМЕНТ
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 ОСТАЛЬНЫЕ РАЗРЯДЫ СЛОВА НЕ МЕНЯЮТСЯ.
 ЧТЕНИЕ - В 1-16 РАЗРЯДЫ СУММАТОРА,
 ОСТАЛЬНЫЕ РАЗРЯДЫ РГ.А ОБНУЛЯЮТСЯ.
 ЛОГИЧЕСКИЕ ОПЕРАЦИИ
 ПОИЗВОДЯТСЯ С ОПЕРАНДОМ, У КОТОРОГО
 1-16 РАЗРЯДЫ СООТВЕТСТВУЮТ ВЫБРАННОМУ
 ФРАГМЕНТУ, ОСТАЛЬНЫЕ РАЗРЯДЫ РАВНЫ "0", И
 64-РАЗРЯДНЫМ СУММАТОРОМ.
 РЕЗУЛЬТАТ - В 1-64 РАЗРЯДАХ СУММАТОРА.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА
 (ЗА ИСКЛЮЧЕНИЕМ КОМАНДЫ @A@T@Q).
#ПЕРН С4(304) - ЗАПИСЬ В ПАМЯТЬ (@A@T@Q).
#А0 ПРИЗНАК ГРУППЫ НЕ МЕНЯЕТСЯ.
#ПЕРН С5(305) - ЗАПИСЬ В ПАМЯТЬ МАГАЗИННАЯ (@S@T@Q).
#ПЕРН С6(306) - ЧТЕНИЕ ИЗ ПАМЯТИ (@Q@T@A).
#ПЕРН С7(307) - ЧТЕНИЕ ИЗ ПАМЯТИ МАГАЗИННОЕ (@Q@T@S).
#ПЕРН С8(310) - СРАВНЕНИЕ (@A@E@Q).
#А0 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН С9(311) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@A@A@Q).
#ПЕРН СА(312) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ (@A@O@Q).
#НА #ВС8 _
#А0 #Ц 5.14. ОПЕРАЦИИ НАД БАЙТАМИ #А0
#НА БАЙТЫ АДРЕСУЮТСЯ 23-РАЗРЯДНЫМ ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ,
 НАЧИНАЯ С 0.  В ПОЛНОМ СЛОВЕ С АДРЕСОМ @N=0,1,...
 РАЗМЕЩАЮТСЯ СЛЕВА НАПРАВО 8 8-РАЗРЯДНЫХ БАЙТОВ,
 АДРЕСУЕМЫХ КАК 8@N, 8@N+1,_..._8@N+7.
#НА ЗАПИСЬ ПОИЗВОДИТСЯ ИЗ 1-8 РАЗРЯДОВ СУММАТОРА
 В БАЙТ ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 ОСТАЛЬНЫЕ РАЗРЯДЫ СЛОВА НЕ МЕНЯЮТСЯ.
 ЧТЕНИЕ - В 1-8 РАЗРЯДЫ СУММАТОРА,
 ОСТАЛЬНЫЕ РАЗРЯДЫ РГ.А ОБНУЛЯЮТСЯ.
 ЛОГИЧЕСКИЕ ОПЕРАЦИИ ПОИЗВОДЯТСЯ НАД 64-РАЗРЯДНЫМ СУММАТОРОМ
 И ОПЕРАНДОМ,
 У КОТОРОГО 1-8 РАЗРЯДЫ СООТВЕТСТВУЮТ
 ВЫБРАННОМУ БАЙТУ, ОСТАЛЬНЫЕ
 РАЗРЯДЫ ОБНУЛЯЮТСЯ.
 РЕЗУЛЬТАТ - В 1-64 РАЗРЯДАХ СУММАТОРА.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА
 (ЗА ИСКЛЮЧЕНИЕМ КОМАНДЫ @А@Т@В).
#ПЕРН СВ(313) - ЗАПИСЬ БАЙТА (@А@Т@В)
#А0 ПРИЗНАК ГРУППЫ НЕ МЕНЯЕТСЯ.
#ПЕРН СС(314) - ЗАПИСЬ БАЙТА МАГАЗИННАЯ (@S@T@B)
#ПЕРН CD(315) - ЧТЕНИЕ БАЙТА (@В@Т@А)
#ПЕРН СЕ(316) - ЧТЕНИЕ БАЙТА МАГАЗИННОЕ (@B@T@S)
#ПЕРН CF(317) - СРАВНЕНИЕ С БАЙТОМ (@А@Е@В)
#А0 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН D0(320) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ НА БАЙТ (@А@А@В)
#ПЕРН D1(321) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ С БАЙТОМ (@А@О@В)
#НА #ВС7 _
#А0 #Ц 5.15. ОПЕРАЦИИ НАД БИТАМИ #А0
#НА БИТЫ АДРЕСУЮТСЯ 26-РАЗРЯДНЫМИ ИСПОЛНИТЕЛЬНЫМИ АДРЕСАМИ,
 НАЧИНАЯ С 0.  В ПОЛНОМ СЛОВЕ С АДРЕСОМ @N=0,1,...
 РАЗМЕЩАЮТСЯ (СЛЕВА НАПРАВО) 64 БИТА, АДРЕСУЕМЫХ
 КАК 64@N, 64@N+1,_..._64@N+63.
#НА ПРИ ЧТЕНИИ (ЗАПИСИ) БИТОВОГО ОПЕРАНДА ИСПОЛЬЗУЕТСЯ 1-Й
 РАЗРЯД СУММАТОРА. ОСТАЛЬНЫЕ РАЗРЯДЫ СУММАТОРА ПРИ ЧТЕНИИ
 ОБНУЛЯЮТСЯ,
 А ПРИ ЗАПИСИ НЕСУЩЕСТВЕННЫ.
 ЛОГИЧЕСКИЕ ОПЕРАЦИИ ВЫПОЛНЯЮТСЯ С ОПЕРАНДОМ,
 У КОТОРОГО МЛАДШИЙ РАЗРЯД
 СООТВЕТСТВУЕТ ВЫБРАННОМУ БИТУ,
 ОСТАЛЬНЫЕ РАЗРЯДЫ РАВНЫ "0",
 И 64-РАЗРЯДНЫМ СУММАТОРОМ.
 РЕЗУЛЬТАТ - В 1-64 РАЗРЯДАХ СУММАТОРА.
 КОМАНДЫ 206(@A@T@F), 366(@S@E@T@F), 376(@C@L@R@F)
 НЕ МЕНЯЮТ ПРИЗНАК ГРУППЫ. ОСТАЛЬНЫЕ КОМАНДЫ
 УСТАНАВЛИВАЮТ ЛОГИЧЕСКУЮ ГРУППУ.
#ПЕРН D2(322) - ЗАПИСЬ БИТА В ПАМЯТЬ (@A@T@F).
#ПЕРН D3(323) - ЗАПИСЬ БИТА В ПАМЯТЬ МАГАЗИННАЯ (@S@T@F).
#ПЕРН D4(324) - ЧТЕНИЕ БИТА ИЗ ПАМЯТИ (@F@T@A).
#ПЕРН D5(325) - ЧТЕНИЕ БИТА МАГАЗИННОЕ (@F@T@S).
#ПЕРН D6(326) - СРАВНЕНИЕ (@A@E@F).
#А0 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН D7(327) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@A@A@F).
#ПЕРН D8(330) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ (@A@O@F).
#ПЕРН D9(331) - УСТАНОВКА БИТА В "1"
 ПО ИСП.&АДРЕСУ ПАМЯТИ (@S@E@T@F).
#А0 СОДЕРЖИМОЕ СУММАТОРА НЕ МЕНЯЕТСЯ.
#ПЕРН DА(332) - УСТАНОВКА БИТА В "0"
 ПО ИСП.&АДРЕСУ ПАМЯТИ (@C@L@R@F).
#А0 СОДЕРЖИМОЕ СУММАТОРА НЕ МЕНЯЕТСЯ.
#ПЕРН 3F А1 (077 241) - РАЗМНОЖЕНИЕ ЗАДАННОГО БИТА
 @А ВЛЕВО (@E@X@T@F).
 #А0 ПРОИЗВОДИТСЯ РАЗМНОЖЕНИЕ
 ЗАДАННОГО РАЗРЯДА РЕГИСТРА @А
 ВЛЕВО ДО ГРАНИЦЫ СЛОВА.
 ИСПОЛНИТЕЛЬНЫЙ АДРЕС ЗАДАЕТ НОМЕР БИТА
 @N (0,1,...63), СЧИТАЯ СО СТАРШИХ РАЗРЯДОВ.
 ИСПОЛЬЗУЕТСЯ 6 РАЗРЯДОВ ИСПОЛНИТЕЛЬНОГО АДРЕСА.
#НА В НИЖЕ ПЕРЕЧИСЛЕННЫХ КОМАНДАХ
 ОПЕРАЦИЯ ПРОИЗВОДИТСЯ
 НАД СОДЕРЖИМЫМ СУММАТОРА И ОПЕРАНДОМ,
 У КОТОРОГО ВСЕ РАЗРЯДЫ РАВНЫ "0",
 КРОМЕ ОДНОГО.
 НОМЕР РАЗРЯДА, УСТАНОВЛЕННОГО В "1",
 ЗАДАЕТСЯ В 1-6 РАЗРЯДАХ ИСПОЛНИТЕЛЬНОГО АДРЕСА.
 НУМЕРАЦИЯ РАЗРЯДОВ В ИСПОЛНИТЕЛЬНОМ АДРЕСЕ
 С 0 ДО 63, НАЧИНАЯ СО СТАРШИХ РАЗРЯДОВ,
 ЕСЛИ 11 РАЗРЯД АИСП.= 0; ИЛИ НАЧИНАЯ С МЛАДШИХ РАЗРЯДОВ,
 ЕСЛИ 11 РАЗРЯД АИСП.= 1:
#А3 АИСП.: 000 - БИТ 64 (СТАРШИЙ), 001 - БИТ 63, ..., 03F - БИТ 1
 (МЛАДШИЙ);
#А3 АИСП.: 400 - БИТ 1 (МЛАДШИЙ), 401 - БИТ 2, ..., 43F - БИТ 64
 (СТАРШИЙ).
#ПЕРН 3F В0 (077 260) - УСТАНОВКА БИТА СУММАТОРА В "1" (@N@T@A).
#ПЕРН 3F В1 (077 261) - УСТАНОВКА БИТА МАГАЗИННАЯ (@N@T@S).
#ПЕРН 3F В2 (077 262) - СРАВНЕНИЕ (@A@E@N).
#А0 Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 3F В3 (077 263) - ЛОГИЧЕСКОЕ УМНОЖЕНИЕ (@A@A@N).
#ПЕРН 3F В4 (077 264) - ЛОГИЧЕСКОЕ СЛОЖЕНИЕ (@A@O@N).
#НА #ВС7 _
#А0 #Ц 5.16. АРИФМЕТИКА С ДВОЙНОЙ ТОЧНОСТЬЮ
#НА ОПЕРАЦИИ НАД ЧИСЛАМИ С ДВОЙНОЙ ТОЧНОСТЬЮ
 ПРОИЗВОДЯТСЯ НАД 128 РАЗРЯДАМИ.
 СТАРШИЕ РАЗРЯДЫ МАНТИССЫ И ПОРЯДОК ЧИСЛА -
 В СУММАТОРЕ,
 МЛАДШИЕ РАЗРЯДЫ МАНТИССЫ - В @Р@М@Р,
 В РАЗРЯДАХ ПОРЯДКА @Р@М@Р - КОПИЯ
 ПОРЯДКА СУММАТОРА. ПРИ ОБРАЩЕНИЯХ В ПАМЯТЬ
 СТАРШИЕ РАЗРЯДЫ МАНТИССЫ И ПОРЯДОК
 НАХОДЯТСЯ ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ,
 МЛАДШИЕ РАЗРЯДЫ МАНТИССЫ - ПО АДРЕСУ : А ИСП. + 1.
 ПРИЗНАКИ ГРУПП УСТАНАВЛИВАЮТСЯ ТАК ЖЕ, КАК
 В АНАЛОГИЧНЫХ ОПЕРАЦИЯХ С ПЛАВАЮЩЕЙ
 ЗАПЯТОЙ С ОДИНАРНОЙ ТОЧНОСТЬЮ.
 ПРИ А ИСП. = 0 И N МОДИФИКАТОРА = 15 РАЗРЕШАЕТСЯ
 МАГАЗИННОЕ ОБРАЩЕНИЕ К ПАМЯТИ
 ПО ОБЩЕМУ ПРАВИЛУ.
 ПОСЛЕ ИСПОЛНЕНИЯ КОМАНДЫ УКАЗАТЕЛЬ МАГАЗИНА
 (15 РЕГИСТР) ИЗМЕНЯЕТСЯ НА 2,
 ПОСКОЛЬКУ ПРОИЗВЕДЕНА ВЫБОРКА
 (ИЛИ ЗАПИСЬ) 2 СЛОВ.
#ПЕРН DС(334) - ЗАПИСЬ СУММАТОРА И @Р@М@Р В ПАМЯТЬ (@A@T@D).
#ПЕРН DD(335) - ЧТЕНИЕ ДВОЙНОГО СЛОВА В СУММАТОР И @Р@М@Р (@D@T@A).
#А0 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН DЕ(336) - СЛОЖЕНИЕ С ДВ. &ТОЧНОСТЬЮ (@А+@D).
#ПЕРН DF(337) - ВЫЧИТАНИЕ С ДВ. &ТОЧНОСТЬЮ (@А-@D).
#ПЕРН Е0(340) - ОБРАТНОЕ ВЫЧИТАНИЕ С ДВ. &ТОЧНОСТЬЮ (@D-@А).
#ПЕРН Е3(343) - ДЕЛЕНИЕ С ДВ. &ТОЧНОСТЬЮ (@А/@D).
#ПЕРН Е4(344) - УМНОЖЕНИЕ С ДВ. &ТОЧНОСТЬЮ (@А*@D).
#НА #ВС7 _
#А0 #Ц 5.17. ПРИВИЛЕГИРОВАННЫЕ КОМАНДЫ #А0
#НА ПРИВИЛЕГИРОВАННЫЕ КОМАНДЫ МОГУТ
 ИСПОЛЬЗОВАТЬСЯ ТОЛЬКО В РЕЖИМЕ ДИСПЕТЧЕРА
 (@Р@Д = 1). ПРИ ОШИБОЧНОМ ИСПОЛЬЗОВАНИИ
 ИХ В ПРОГРАММЕ МАТЕМАТИКА
 КОМАНДА БУДЕТ ВЫПЛНЯТЬСЯ КАК ЭКСТРАКОД
 (ПРОИЗОЙДЕТ ПЕРЕДАЧА УПРАВЛЕНИЯ ОПЕРАЦИОННОЙ СИСТЕМЕ).
#ПЕРН F0(360) - ЧТЕНИЕ СПЕЦИАЛЬНЫХ РЕГИСТРОВ @Ц@П (@R@M@O@D).
#А0 ПРОИЗВОДИТСЯ ЧТЕНИЕ В СУММАТОР (64 РАЗРЯДА) РЕГИСТРОВ @Ц@П:
 МОДИФИКАТОРОВ, РЕГИСТРОВ ПРИПИСКИ, РЕГИСТРОВ ПРИЗНАКОВ
 (@Б@О@Б@Р, @Б@И@З@М, @Б@М@С@П), СОДЕРЖИМОГО ПАМЯТИ УЧЕТА
 ПРИОРИТЕТОВ СТРАНИЦ, РЕГИСТРОВ
 @С, @Р@Р, @С@Ч@А@С, @И@А@О@П,
 @Р@А@П@У, @Р@Н@П, @Г@Р@П, ТАЙМЕРОВ И Т.&П.
 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО АДРЕСА ЗАДАЮТ
 ПОЛНЫЙ НОМЕР РЕГИСТРА, В ТОМ ЧИСЛЕ
 И ПРИ ОБРАЩЕНИЯХ К РЕГИСТРАМ ИЗ @О@З@У МОДИФИКАТОРОВ,
 ГДЕ В ПОЛНОМ АДРЕСЕ ДОЛЖЕН БЫТЬ
 НОМЕР ГРУППЫ РЕГИСТРОВ.
 ДЛЯ ЧТЕНИЯ ИЛИ ЗАПИСИ #Б РР &И РРР #М
 СВОЕЙ ГРУППЫ РЕГИСТРОВ
 КОМАНДЫ #Б RMOD &И WMOD #М
 ИСПОЛЬЗОВАТЬ НЕЛЬЗЯ,
 Т.&К. &НЕТ ЧТЕНИЯ ДИНАМИЧЕСКОЙ
 ЧАСТИ #Б РР &И РРР #М ИЛИ НЕТ ЗАПИСИ
 В ИСПОЛНИТЕЛЬНУЮ ЧАСТЬ #Б РР &И РРР. #М
 ДЛЯ ИЗМЕНЕНИЯ @Р@Р СВОЕЙ ГРУППЫ
 МОЖНО ИСПОЛЬЗОВАТЬ КОМАНДЫ #Б SETR &И CLRR. #М
 ПОЛНЫЙ СПИСОК РЕГИСТРОВ И ПАМЯТИ @Ц@П И ИХ
 АДРЕСА ПРИВЕДЕНЫ В П.6.7.
#А0 @Р@М@Р И ПРИЗНАКИ ГРУПП НЕ МЕНЯЮТСЯ.
#ПЕРН F1(361) - ЗАПИСЬ В СПЕЦИАЛЬНЫЕ РЕГИСТРЫ @Ц@П (@W@M@O@D).
#А0 ПРОИЗВОДИТСЯ ЗАПИСЬ СУММАТОРА
 В РЕГИСТРЫ @Ц@П (СМ. &КОМАНДУ @R@M@O@D).
 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО АДРЕСА ЗАДАЮТ НОМЕР РЕГИСТРА.
 СУММАТОР, @Р@М@Р И ПРИЗНАК ГРУППЫ СОХРАНЯЮТСЯ.
#ПЕРН 3F FD (077 375) - ВОЗВРАТ ИЗ ПРЕРЫВАНИЯ (@I@J@P).
#А0 ПРОИЗВОДИТСЯ ВОССТАНОВЛЕНИЕ РАБОЧИХ РЕГИСТРОВ
 ПРЕРВАННОГО ПРОЦЕССА
 И ПЕРЕДАЧА ЕМУ УПРАВЛЕНИЯ.
 ЕСЛИ 6-11 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО АДРЕСА КОМАНДЫ РАВНЫ "0", НОМЕР
 ВОССТАНАВЛИВАЕМОЙ ГРУППЫ РЕГИСТРОВ БЕРЕТСЯ В 9-13 РАЗРЯДАХ @Р@Р@Р,
 ИНАЧЕ - В 6-10 РАЗРЯДАХ ИСПОЛНИТЕЛЬНОГО АДРЕСА.
#ПЕРН F2(362) - УСТАНОВКА @Р@Р АДРЕСОМ (@S@E@T@R).
#А0 ПРОИЗВОДИТСЯ УСТАНОВКА В "1" ТЕХ РАЗРЯДОВ @Р@Р
 ТЕКУЩЕЙ ГРУППЫ,
 КОТОРЫЕ СООТВЕТСТВУЮТ "1" ИСПОЛНИТЕЛЬНОГО АДРЕСА КОМАНДЫ,
 ЛОГИЧЕСКИ СДВИНУТОГО  ВЛЕВО НА 10 РАЗРЯДОВ
 (1-22 РАЗРЯДЫ ИСПОЛНИТЕЛЬНОГО АДРЕСА
 СООТВЕТСТВУЮТ 11-32 РАЗРЯДАМ @Р@Р).
 РАЗРЯДЫ @Р@Р, СООТВЕТСТВУЮЩИЕ "0" АДРЕСА, НЕ МЕНЯЮТСЯ.
 ПРИЗНАКИ #Б ППК, ППУ &И ПИА #М ИЗМЕНЯЮТСЯ ПО
 ОБЩЕМУ ПРАВИЛУ.
#А0 СУММАТОР, @Р@М@Р, ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН F3(363) - ГАШЕНИЕ @Р@Р АДРЕСОМ (@C@L@R@R).
#А0 ПРОИЗВОДИТСЯ УСТАНОВКА В "0" ТЕХ РАЗРЯДОВ @Р@Р
 ТЕКУЩЕЙ ГРУППЫ,
 КОТОРЫЕ СООТВЕТСТВУЮТ "0" ИСПОЛНИТЕЛЬНОГО АДРЕСА КОМАНДЫ,
 ЛОГИЧЕСКИ СДВИНУТОГО ВЛЕВО НА 10 РАЗРЯДОВ.
 РАЗРЯДЫ @Р@Р, СООТВЕТСТВУЮЩИЕ "1" АДРЕСА, НЕ МЕНЯЮТСЯ.
 ПРИЗНАКИ #Б ППК,ППУ,ПИА #М ИЗМЕНЯЮТСЯ ПО
 ОБЩЕМУ ПРАВИЛУ.
#А0 СУММАТОР, @Р@М@Р, ПРИЗНАК ГРУППЫ НЕ МЕНЯЮТСЯ.
#ПЕРН F4(364) - СЕМАФОРНОЕ ЧТЕНИЕ (@S@E@M@R).
#А0 ПРОИЗВОДИТСЯ ЧТЕНИЕ СЕМАФОРНОГО СЛОВА ПАМЯТИ
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 ЕСЛИ СЕМАФОР "ОТКРЫТ" (56 РАЗРЯД СЕМАФОРНОГО СЛОВА = 0),
 ПРОИЗВОДИТСЯ "ЗАХВАТ" СЕМАФОРА:
 56 РАЗРЯД СЕМАФОРНОГО СЛОВА
 УСТАНАВЛИВАЕТСЯ В "1",
 В 57-64 РАЗРЯДЫ ЗАПИСЫВАЕТСЯ НОМЕР ТЕКУЩЕГО ПРОЦЕССА.
 ПРИЗНАК @С @Р@Р УСТАНАВЛИВАЕТСЯ В "1".
#А0 ЕСЛИ НОМЕР ТЕКУЩЕГО ПРОЦЕССА СОВПАДАЕТ С 57-64 РАЗРЯДАМИ
 СЕМАФОРНОГО СЛОВА, ПРИЗНАК @С ТАКЖЕ УСТАНАВЛИВАЕТСЯ В "1"
 (СЕМАФОР ЗАХВАЧЕН ЭТИМ ЖЕ ПРОЦЕССОМ!).
#А0 ЕСЛИ СЕМАФОР ЗАНЯТ "ЧУЖИМ ПРОЦЕССОМ (56 РАЗРЯД = "1",
 А 57-64 РАЗРЯДЫ НЕ РАВНЫ НОМЕРУ ПРОЦЕССА),
 ПРИЗНАК @С УСТАНАВЛИВАЕТСЯ В "0"
 (НЕУДАЧНАЯ ПОПЫТКА).
#А0 В КОМАНДЕ
 БЛОКИРОВКИ #Б БПТЗ &И БПТЧ #М
 НЕ УСТАНАВЛИВАЮТСЯ, СЧИТАЯ, ЧТО
 ОНИ ЕСТЬ В @Р@Р, ЕСЛИ В
 СООТВЕТСТВУЮЩИХ СЕМАФОРННЫХ
 ЯЧЕЙКАХ УСТАНОВЛЕНЫ ЗАПРЕТ ЗАПИСИ ИЛИ ЧТЕНИЯ.
 ВОЗМОЖНЫ ВНУТРЕННИЕ ПРЕРЫВАНИЯ (СТРАНИЧНЫЕ И ТЕГОВСКИЕ).
#А0 МАГАЗИННОЕ ОБРАЩЕНИЕ К ПАМЯТИ
 ПРИ 15 ИНДЕКС-РЕГИСТРЕ И 0-ОМ ИСПОЛНИТЕЛЬНОМ АДРЕСЕ
 НЕ ДОПУСКАЕТСЯ.
 СУММАТОР, @Р@М@Р И ПРИЗНАКИ ГРУПП НЕ МЕНЯЮТСЯ.
#ПЕРН F7(367) - СЕМАФОРНАЯ ЗАПИСЬ (@S@E@M@W).
#А0 ЕСЛИ НОМЕР ТЕКУЩЕГО ПРОЦЕССА
 СОВПАДАЕТ С 64-57 РАЗРЯДАМИ СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ
 АДРЕСУ, ТО ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ ЗАПИСЫВАЕТСЯ "0".
#А0 ВОЗМОЖНЫ ВНУТРЕННИЕ ПРЕРЫВАНИЯ
 (СТРАНИЧНЫЕ И ТЕГОВСКИЕ).
 МАГАЗИННОЕ ОБРАЩЕНИЕ К ПАМЯТИ НЕ ДОПУСКАЕТСЯ.
 СУММАТОР, @Р@М@Р И @Р@Р НЕ МЕНЯЮТСЯ.
#ПЕРН F8(370) - ЗАХВАТ "ГЛОБАЛЬНОГО" СЕМАФОРА (@S@M@O@N).
#А0 НА ВРЕМЯ ИСПОЛНЕНИЯ КОМАНДЫ В @Р@Р УСТАНАВЛИВАЮТСЯ:
#Б БЗО, БЗЗ, БПНП, БПТЗ, РОА, РД, ПОП. #М
 ЧИТАЕТСЯ "ГЛОБАЛЬНЫЙ" СЕМАФОР ПАМЯТИ ПО АДРЕСУ
 FFF8 0840 Н.
 ЕСЛИ 56-Й РАЗРЯД СЕМАФОРНОГО СЛОВА РАВЕН "0", ПРОИЗВОДИТСЯ
 ЗАХВАТ СЕМАФОРА: 56-Й РАЗРЯД УСТАНАВЛИВАЕТСЯ В "1", А В 57-64 РАЗРЯДЫ
 ЗАПИСЫВЕТСЯ НОМЕР ТЕКУЩЕГО ПРОЦЕССА.
#А0 ЕСЛИ СЕМАФОР ЗАНЯТ, 57-64 РАЗРЯДЫ ЕГО СРАВНИВАЮТСЯ С СОДЕРЖИМЫМ
 @Р@Н@П. ЕСЛИ СЕМАФОР ЗАНЯТ ДРУГИМ ПРОЦЕССОМ,
 КОМАНДА ЖДЕТ ОСВОБОЖДЕНИЯ СЕМАФОРА, ЗАТЕМ ЗАХВАТЫВЕТ ЕГО.
#А0 ПОСЛЕ ЗАХВАТА СЕМАФОРА ВОССТАНАВЛИВАЕТСЯ СТАРОЕ
 ЗНАЧЕНИЕ @Р@Р И ИСПОЛНЯЕТСЯ КОМАНДА @S@E@T@R
 С ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ. УСТАНАВЛИВАЕТСЯ @Б@В@П.
 МАГАЗИННОЕ ОБРАЩЕНИЕ К ПАМЯТИ НЕ ДОПУСКАЕТСЯ.
 СУММАТОР И @Р@М@Р НЕ МЕНЯЮТСЯ.
#ПЕРН F9(371) - ОСВОБОЖДЕНИЕ "ГЛОБАЛЬНОГО" СЕМАФОРА (@C@M@O@N).
#А0 НА ВРЕМЯ ИСПОЛНЕНИЯ КОМАНДЫ В @Р@Р УСТАНАВЛИВАЮТСЯ:
#Б БЗО, БЗЗ, БПНП, БПТЗ, РОА, РД, ПОП. #М
 ЧИТАЕТСЯ "ГЛОБАЛЬНЫЙ" СЕМАФОР ПО АДРЕСУ FFF8 0840 Н.
 ЕСЛИ НОМЕР ТЕКУЩЕГО ПРОЦЕССА СОВПАДАЕТ С 64-57 РАЗРЯДАМИ
 СЕМАФОРНОГО СЛОВА, ПО ЭТОМУ АДРЕСУ ЗАПИСЫВАЕТСЯ "0".
 ПРОИЗВОДИТСЯ ЧТЕНИЕ ВНЕШНИХ ПРЕРЫВАНИЙ В @Г@Р@П И ИХ СБРОС
 И "ВЗВЕДЕНИЕ" ЗАНОВО ТАЙМЕРА @Б@В@П.
 ЗАТЕМ ВОССТАНАВЛИВАЕТСЯ СТАРОЕ ЗНАЧЕНИЕ @Р@Р И ИСПОЛНЯЕТСЯ
 КОМАНДА @C@L@R@R С ИСПОЛНИТЕЛЬНЫМ АДРЕСОМ.
 МАГАЗИННОЕ ОБРАЩЕНИЕ К ПАМЯТИ НЕ ДОПУСКАЕТСЯ.
 СУММАТОР И @Р@М@Р НЕ МЕНЯЮТСЯ.
#ПЕРН F5(365) - ЗАПИСЬ СУММАТОРА С ЗАДАННЫМ ТЕГОМ (@Т@Т@Х).
#А0 ПРОИЗВОДИТСЯ ЗАПИСЬ СУММАТОРА ПО
 ИСПОЛНИТЕЛЬНОМУ АДРЕСУ С ТЕГОМ, ЗАПИСАННЫМ
 В 1-8 РАЗРЯДАХ @Р@М@Р.
 СУММАТОР, @Р@М@Р, ПРИЗНАК
 ГРУППЫ И ТЕГ РЕЗУЛЬТАТА В @Р@Р@Р СОХРАНЯЮТСЯ.
#ПЕРН F6(366) - ЧТЕНИЕ С ТЕГОМ (@Т@Т@А).
#А0 1-64 РАЗРЯДЫ СЛОВА ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ
 СЧИТЫВАЮТСЯ В РЕГИСТР @А, РАЗРЯДЫ
 ТЕГА - В 1-8 РАЗРЯДЫ @Р@М@Р.
 УСТАНАВЛИВАЕТСЯ ЛОГИЧЕСКАЯ ГРУППА.
#ПЕРН 3F FЕ (077 376) - ВОЗВРАТ ИЗ ЭКСТРАКОДА (@R@E@T).
#А0 ПРОИЗВОДИТСЯ ВОССТАНОВЛЕНИЕ
 РЕГИСТРОВ И ПЕРЕДАЧА УПРАВЛЕНИЯ НА СЛЕДУЮЩУЮ
 ПОСЛЕ ЭКСТРАКОДА КОМАНДУ.
#ПЕРН 3F FF (077 377) - ОСТАНОВ (@H@L@T).
#А0 ЕСЛИ 12 МЛАДШИХ РАЗРЯДОВ ИСПОЛИТЕЛЬНОГО АДРЕСА РАВНЫ "0" -
 ПУСТАЯ КОМАНДА, ИНАЧЕ - ОСТАНОВ.
#НА #Б #ВС8 _
#А0 #Ц ДОПОЛНИТЕЛЬНЫЕ КОМАНДЫ ИЗ СИСТЕМЫ КОМАНД ЭЛЬБРУС-Б #М
#НА #НА #Ц 5.18. КОМАНДЫ ОСНОВНОГО ФОРМАТА #Б ЭЛЬБРУС-Б #М
#ПЕРН 02(002)_-_СЧИТЫВАНИЕ ЧИСЛА БЕЗ ИЗМЕНЕНИЯ
 ПРИЗНАКОВ РЕЗУЛЬТАТА (@С@Н).
#А0 АНАЛОГИЧНА КОМАНДЕ @Х@Т@А,
 НО ПРИЗНАКИ НЕЗУЛЬТАТА НЕ ИЗМЕНЯЮТСЯ.
#ПЕРН 04(004) - @А@С, 05(005) - @А@В, 06(006) - @О@В, 07(007) - @М@В
 0С(014) - @И@З, 0F(017) - @А@У
#А0 АНАЛОГИЧНЫ СООТВЕТСТВУЮЩИМ КОМАНДАМ #Б БЭСМ-6:
 А+Х, А-Х, Х-А, АМХ, AVX, А*Х, #М НО ЕСЛИ ОБА
 ОПЕРАНДА ЦЕЛЫЕ, ТО РЕЗУЛЬТАТ - ЦЕЛОЕ.
#А0 _
#А0 В #Б ЭЛЬБРУС-Б #М ВВЕДЕН НОВЫЙ ТИП ОПЕРАНДОВ - ЦЕЛОЕ ЧИСЛО.
 ЦЕЛОЕ - ЭТО НЕНОРМАЛИЗОВАННОЕ 64-РАЗРЯДНОЕ ЧИСЛО
 С ПОРЯДКОМ -1024, Т.&Е. 64-54 &РАЗРЯДЫ РАВНЫ 0, 53 РАЗРЯД РАВЕН
 52-ОМУ.
#ПЕРН 17(027)_-_УСТАНОВКА РЕЖИМА ВЫПОЛНЕНИЯ КОМАНД ПО КОДУ ЧИСЛА (@Р@К).
#ПЕРН 1Е(036)_-_ОБРАТНЫЙ СДВИГ ПО КОДУ (@О@К).
#А0 АНАЛОГИЧНА ОПЕРАЦИИ @A@S@X, НО НАПРАВЛЕНИЕ СДВИГА
 ПРОТИВОПОЛОЖНОЕ:
 ПАРАМЕТР СДВИГА ПРЕДСТАВЛЯЕТСЯ В ДОПОЛНИТЕЛЬНОМ
 КОДЕ ДЛЯ СДВИГА ВПРАВО, В ПРЯМОМ КОДЕ - ДЛЯ
 СДВИГА ВЛЕВО.
#ПЕРН 1А(032) - УНИВЕРСАЛЬНЫЙ ЦИКЛ (@У@Ц).
#А0 В ПОЛЕ МОДИФИКАТОРА ЗАДАЕТСЯ НОМЕР ИНДЕКС-РЕГИСТРА
 ЦИКЛА (@И@Ц). В КОМАНДЕ УЧАСТВУЮТ ЕЩЕ 2 РЕГИСТРА:
#А0 -_ИНДЕКС-РЕГИСТР ГРАНИЦЫ #Б ИГ: ИГ = ИЦ + 1; #М
#А0 -_ИНДЕКС-РЕГИСТР ШАГА #Б ИШ: ИШ = ИЦ + 2. #М
#А0 @В ПЕРВОЙ ЧАСТИ ОПЕРАЦИИ ОПРЕДЕЛЯЕТСЯ
 ВЕЛИЧИНА #Б (ИГ)-(ИЦ), #М ВЫРАБАТЫВАЮЩАЯ
 УСЛОВИЕ @Г@Б@Ц (ГРАНИЦА БОЛЬШЕ ЦИКЛА) ИЛИ
 УСЛОВИЕ @Г@Р@Ц (ГРАНИЦА РАВНА ЦИКЛУ).
#А0 С УЧЕТОМ ЗНАКОВОГО РАЗРЯДА ИНДЕКС-РЕГИСТРА ШАГА (@З@И@Ш)
 ПЕРЕХОД ПО АДРЕСНОЙ ЧАСТИ КОМАНДЫ
 ПРОИСХОДИТ ПРИ ВЫПОЛНЕНИИ ЛОГИЧЕСКОГО УСЛОВИЯ:
 #Б #А0 #Ц ЗИШ_*_(_ГБЦ_+_ГРЦ_)_+_ЗИШ_*_(_ГБЦ_)_=_1
 #А0 #М @ПРИ НЕВЫПОЛНЕНИИ УСЛОВИЯ ВЫПОЛНЯЕТСЯ
 СЛЕДУЮЩАЯ КОМАНДА. #А0 ЕСЛИ УСЛОВИЕ ПЕРЕХОДА ВЫПОЛНЯЕТСЯ, ТО
 ВО ВТОРОЙ ЧАСТИ КОМАНДЫ ПРОИСХОДИТ СЛОЖЕНИЕ #Б (ИЦ)+(ИШ) #М С ЗАПИСЬЮ
 РЕЗУЛЬТАТА В @И@Ц ДЛЯ ОЧЕРЕДНОГО ЦИКЛА, А ПОТОМ - СОБСТВЕННО ПЕРЕХОД.
 ЕСЛИ ПРИ СЛОЖЕНИИ ПРОИСХОДИТ ПЕРЕПОЛНЕНИЕ РАЗРЯДНОЙ СЕТКИ
 ИНДЕКС-РЕГИСТРОВ,
 ТО ВОЗНИКАЕТ ПРЕРЫВАНИЕ.
 ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 22(042) - #Б ИБР, 23(043) - ИМЕ, 24(044) - ИМР, 25(045) - ИБ.
#А0 #М @КОМАНДЫ УСЛОВНОГО ПЕРЕХОДА ПО СОДЕРЖИМОМУ
 ИНДЕКС-РЕГИСТРА.
 ПЕРЕДАЧА УПРАВЛЕНИЯ ПРОИЗВОДИТСЯ, ЕСЛИ СОДЕРЖИМОЕ
 ИНДЕКС-РЕГИСТРА:
#А0 -_БОЛЬШЕ ИЛИ РАВНО 0;
#А0 -_МЕНЬШЕ 0;
#А0 -_МЕНЬШЕ ИЛИ РАВНО 0;
#А0 -_БОЛЬШЕ НУЛЯ.
#А0 ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 28(050) - #Б УР, 29(051) - УН, 2А(052) - УБР, 2В(053) - УМЕ,
 2С(054) - УМР, 2D(055) - УБ, 2Е(056) - УС, 2F(057) - УНС. #М
#А0 КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ ПО ПРИЗНАКАМ РЕЗУЛЬТАТА
 ОПЕРАЦИИ, ВЫПОЛНЕННОЙ РАНЕЕ.
 ПЕРЕДАЧА УПРАВЛЕНИЯ ПРОИЗВОДИТСЯ, ЕСЛИ РЕЗУЛЬТАТ:
#А0 -_РАВЕН 0;
#А0 -_НЕ РАВЕН 0;
#А0 -_БОЛЬШЕ ИЛИ РАВЕН 0;
#А0 -_МЕНЬШЕ 0;
#А0 -_МЕНЬШЕ ИЛИ РАВЕН 0;
#А0 -_БОЛЬШЕ 0;
#А0 -_ЕСТЬ ОСОБЫЙ СЛУЧАЙ (ПЕРЕПОЛНЕНИЕ);
#А0 -_НЕТ ОСОБОГО СЛУЧАЯ.
#А0 СУММАТОР, @Р@М@Р И ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 30(060) - СЧИТЫВАНИЕ С ТЕГОМ (@С@Т).
#ПЕРН 31(061) - СИНХРОНИЗАЦИОННОЕ СЧИТЫВАНИЕ (@С@С).
#А0 АНАЛОГИЧНА КОМАНДЕ @Х@Т@А, НО ЗАТЕМ
 ПРОИСХОДИТ ЗАПИСЬ КОДА С "1" В 1-ОМ РАЗРЯДЕ
 И С "0" В 2-64 РАЗРЯДАХ В ПАМЯТЬ
 ПО ИСПОЛНИТЕЛЬНОМУ АДРЕСУ.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 34(064) - ЗАПИСЬ НУЛЯ (@З@Н).
#А0 ПРОИЗВОДИТСЯ ЗАПИСЬ НУЛЕВОГО КОДА ПО ИСП.&АДРЕСУ
 НЕЗАВИСИМО ОТ СОДЕРЖИМОГО СУММАТОРА.
 ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 37(067) - ЗАПИСЬ С ТЕГОМ (@З@Т).
#ПЕРН 38(070) - УСТАНОВКА АДРЕСА КОМАНДНОГО СЛОВА (@У@А).
#А0 В ИНДЕКС-РЕГИСТР, УКАЗАННЫЙ В КОМАНДЕ, ЗАНОСИТСЯ
 РЕЗУЛЬТАТ СЛОЖЕНИЯ АДРЕСНОЙ ЧАСТИ КОМАНДЫ
 С АДРЕСОМ КОМАНДНОГО СЛОВА, СЛЕДУЮЩЕГО ЗА ТЕМ, ИЗ
 КОТОРОГО ВЫБРАНА ЭТА КОМАНДА.
 ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 39(071) - КОСВЕННАЯ АДРЕСАЦИЯ (@К@А).
#А0 ОБРАЗОВАНИЕ АИСП. &ПРОИСХОДИТ ТАК ЖЕ, КАК В
 КОМАНДЕ @П@Ф (СМ.&НИЖЕ). ПОЛУЧЕННАЯ СУММА СКЛАДЫВАЕТСЯ С СОДЕРЖИМЫМ
 СУММАТОРА
 И ЗАПИСЫВАЕТСЯ В РГ.С ДЛЯ СЛОЖЕНИЯ
 С АДРЕСНОЙ ЧАСТЬЮ СЛЕДУЮЩЕЙ КОМАНДЫ.
 СУММАТОР, @Р@М@Р И ПРИЗНАКИ РЕЗУЛЬТАТА НЕ МЕНЯЮТСЯ.
#ПЕРН 3А(072) - ПРЕФИКСАЦИЯ (@П@Ф).
#А0 АНАЛОГИЧНА КОМАНДЕ @U@T@C, НО
 ПЕРЕД ОБРАЗОВАНИЕМ АИСП.
 &РАЗРЯДЫ АДРЕСНОЙ ЧАСТИ
 СМЕЩАЮТСЯ ВЛЕВО НА 12 РАЗРЯДОВ.
#ПЕРН 3Е(076) - УСТАНОВКА ГРУППОВОГО РЕЖИМА (@У@Г).
#ПЕРН 40(100) - #Б СЧЦ, 41(101) - СМЦ, 42(102) - СНЦ,
 44(104) - АСЦ, 45(105) - АВЦ, 46(106) - ОВЦ, 47(107) - МВЦ,
 4С(114) - ИЗЦ, 4F(117) - АУЦ. #М
#А0 ЛИТЕРАЛЬНЫЕ КОМАНДЫ. АНАЛОГИЧНЫ
 КОМАНДАМ #Б СЧ(ХТА), СМ(XTS), СН, АС, АВ, ОВ, МВ, ИЗ, АУ #М
 СООТВЕТСТВЕННО, НО ОПЕРАНДОМ ЯВЛЯЕТСЯ САМ ИСПОЛНИТЕЛЬНЫЙ
 АДРЕС С РАЗМНОЖЕНИЕМ ЗНАКА ДО 53 РАЗРЯДА.
#ПЕРН 4В(113) - #Б ЦСЛ, 50(120) - СБЛ, 51(121) - РБЛ. #М
#А0 ТАКЖЕ ЛИТЕРАЛЬНЫЕ КОМАНДЫ. АНАЛОГИЧНЫ
 КОМАНДАМ #Б ЦС(ARX), СБ(АРХ), РБ(AUX), #М НО ОПЕРАНДОМ
 ЯВЛЯЕТСЯ САМ АИСП., А ЗНАЧЕНИЕ ЗНАКОВОГО РАЗРЯДА
 РАЗМНОЖАЕТСЯ ДО 64-ОГО РАЗРЯДА.
#ПЕРН 60(140) - #Б ЗЧК, 61(141) - ЗМК, 62(142) - СНК,
 63(143) - СМК, 64(144) - АСК, 65(145) - АВК, 66(146) - ОВК,
 67(147) - МВК, 68(150) - СЧК, 69(151) - ЛУК, 6А(152) - СРК,
 6В(153) - ЦСК, 6С(154) - ИЗК, 6D(155) - ЛСК, 6Е(156) - АДК,
 6F(157) - АУК, 70(160) - СБК, 71(161) - РБК, 72(162) - ВЧК,
 73(163) - ВНК, 74(164) - СПК, 75(165) - ВПК, 76(166) - СКК,
 78(170) - СТК, 79(171) - ССК,
 7С(174) - ЗНК, 7Е(176) - ОКК, 7F(177) - ЗТК. #М
#А0 КОМПОНЕНТНЫЕ КОМАНДЫ. ЭТО КОМАНДЫ,
 ВЫПОЛНЯЮЩИЕСЯ ПО АЛГОРИТМАМ СХОДНЫХ С НИМИ КОМАНД
 ОСНОВНОГО ФОРМАТА, НО ДОПОЛНИТЕЛЬНО
 В ИНДЕКС-РЕГИСТРЫ, УКАЗАННЫЕ В КОМАНДЕ,
 ЗАНОСИТСЯ ИСП.&АДРЕС, ПРИЧЕМ ОБРАЩЕНИЕ К ПАМЯТИ
 ЗА ОПЕРАНДОМ ПРОИСХОДИТ
 ТОЛЬКО ПО СОДЕРЖИМОМУ ИНДЕКС-РЕГИСТРА,
 БЕЗ УЧАСТИЯ АДРЕСНОЙ ЧАСТИ КОМАНДЫ.
#НА #ВС7 _
#А0 #Ц 5.19. КОМАНДЫ ДОПОЛНИТЕЛЬНОГО ФОРМАТА #Б ЭЛЬБРУС-Б #М
#ПЕРН 3F 11 (077 021) - ВЫДАЧА МАНТИССЫ С @Р@М@Р (@М@М).
#А0 АНАЛОГИЧНА КОМАНДЕ @У@Т@А ДЛЯ #Б ГС, ГУ. #М
 @Р@М@Р НЕ МЕНЯЕТСЯ.
#ПЕРН 3F 14 (077 024) - КОРРЕКЦИЯ ПОРЯДКА (@К@П).
#А0 К КОДУ ПОРЯДКА ЧИСЛА НА СУММАТОРЕ ПРИБАВЛЯЕТСЯ
 КОД 1-11 РАЗРЯДОВ АИСП. &КАК ЦЕЛОЕ ПОЛОЖИТЕЛЬНОЕ ЧИСЛО.
 МАНТИССА СУММАТОРА И @Р@М@Р НЕ МЕНЯЮТСЯ.
 РЕЗУЛЬТАТ ОПЕРАЦИИ НОРМАЛИЗУЕТСЯ,
 ЕСЛИ ОНА НЕ БЛОКИРОВАНА. ВОЗМОЖНО
 ПЕРЕПОЛНЕНИЕ ПОРЯДКОВ С ПОСЛЕДУЮЩИМ ПРЕРЫВАНИЕМ,
 ЕСЛИ ОНО НЕ БЛОКИРОВАНО.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ
 РЕЗУЛЬТАТА.
#ПЕРН 3F 19 (077 031) - ВЫДАЧА #Б РМР (МР). #М
#А0 АНАЛОГИЧНА КОМАНДЕ @У@Т@А ДЛЯ @Г@Л.
#ПЕРН 3F 18 (077 030) - ВЫДАЧА РЕГИСТРА ПРИЗНАКОВ (@В@Р).
#ПЕРН 3F 1А (077 032) - НЕТОЖДЕСТВЕННОСТЬ СТАРШАЯ (@Н@С).
#А0 ПРОИСХОДИТ СРАВНЕНИЕ (СЛОЖЕНИЕ ПО МОД.2) 1-11 РАЗРЯДОВ АИСП.
 И 54-64 РАЗРЯДОВ СУММАТОРА.
 РЕЗУЛЬТАТ СРАВНЕНИЯ ЗАНОСИТСЯ В 54-64 РАЗРЯДЫ СУММАТОРА, 1-53
 РАЗРЯДЫ НЕ  НЕМЯЮТСЯ. РЕЗУЛЬТАТ НЕ НОРМАЛИЗУЕТСЯ.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 1Е (077 036) - ОБРАТНЫЙ СДВИГ (@О@Д).
#А0 АНАЛОГИЧНА КОМАНДЕ @A@S@N, НО НАПРАВЛЕНИЕ СДВИГА
 ПРОТИВОПОЛОЖНОЕ.
#ПЕРН 3F 1F (077 037) - УСТАНОВКА АДРЕСОМ РЕЖИМА
 ВЫПОЛНЕНИЯ КОМАНД (@Р@А).
#ПЕРН 3F 23 (077 043) - ВЫДАЧА ИНДЕКС-РЕГИСТРА КАК ЦЕЛОГО (@В@Ц).
#А0 АНАЛОГИЧНА КОМАНДЕ @I@T@A, НО
 ЗНАЧЕНИЕ ЗНАКА ИНДЕКС-РЕГИСТРА РАЗМНОЖАЕТСЯ ДО 53
 РАЗРЯДА СУММАТОРА, 54-64 РАЗРЯДЫ ОБНУЛЯЮТСЯ.
 @Р@М@Р НЕ МЕНЯЕТСЯ. УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 26  (077 046) - ВЫЧИТАНИЕ ИНДЕКС-РЕГИСТРОВ (@М@И).
#А0 ИЗ СОДЕРЖИМОГО РЕГИСТРА, ЗАДАННОГО В 1-4 РАЗРЯДАХ
 АДРЕСНОЙ ЧАСТИ КОМАНДЫ, ВЫЧИТАЕТСЯ СОДЕРЖИМОЕ
 РЕГИСТРА, ЗАДАННОГО В ПОЛЕ МОДИФИКАТОРА,
 РЕЗУЛЬТАТ В РЕГИСТРЕ, ЗАДАННОМ В ПОЛЕ МОДИФИКАТОРА.
#ПЕРН 3F 34 (077 064) - ВЫДЕЛЕНИЕ ЦЕЛОЙ ЧАСТИ В СМЫСЛЕ АЛГОЛА (@Ц@А).
#А0 ЕСЛИ ПОРЯДОК ЧИСЛА С ПЛАВАЮЩЕЙ ЗАПЯТОЙ НА СУММАТОРЕ
 ПРЕВЫШАЕТ 2064В, ТО ПРОИСХОДИТ ПРЕРЫВАНИЕ ПО ПЕРЕПОЛНЕНИЮ
 СУММАТОРА. В ПРОТИВНОМ СЛУЧАЕ ПРОИСХОДИТ СЛОЖЕНИЕ
 КОДА НА СУММАТОРЕ С ОПЕРАНДОМ, У КОТОРОГО
 ПОРЯДОК = 2064В, А МАНТИССА = 0.
 ВЫДВИНУТЫЕ ИЗ СУММАТОРА В @Р@М@Р
 ПРИ ВЫРАВНИВАНИИ ПОРЯДКОВ РАЗРЯДЫ
 ЯВЛЯЮТСЯ ДРОБНОЙ ЧАСТЬЮ ЧИСЛА.
 В РГ.А ОСТАЕТСЯ ВЫДЕЛЕННАЯ ЦЕЛАЯ ЧАСТЬ ЧИСЛА В ВИДЕ
 ЦЕЛОГО (Т.&Е. &НУЛЕВОЙ ПОРЯДОК).
 ЕСЛИ В РЕЗУЛЬТАТЕ ОПЕРАЦИИ ЗНАЧЕНИЕ
 53 РАЗРЯДА РГ.А НЕ РАВНО ЗНАЧЕНИЮ 52 РАЗРЯДА, ПРОИСХОДИТ ПРЕРЫВАНИЕ
 ПО ПЕРЕПОЛНЕНИЮ СУММАТОРА.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 35 (077 065) - ВЫДЕЛЕНИЕ ЦЕЛОЙ ЧАСТИ В СМЫСЛЕ ФОРТРАНА (@Ц@Ф).
#А0 ДЛЯ ПОЛОЖИТЕЛЬНЫХ ЧИСЕЛ АЛГОРИТМ АНАЛОГИЧЕН
 КОМАНДЕ @Ц@А. ДЛЯ ОТРИЦАТЕЛЬНЫХ,
 ЕСЛИ В РЕЗУЛЬТАТЕ ВЫРАВНИВАНИЯ ПОРЯДКОВ В @Р@М@Р
 ВЫДВИНУЛИСЬ ЗНАЧАЩИЕ РАЗРЯДЫ,
 К МАНТИССЕ РЕЗУЛЬТАТА К МЛАДШЕМУ
 РАЗРЯДУ ПРИБАВЛЯЕТСЯ 1 (НАПРИМЕР,
 ИЗ ОТРИЦАТЕЛЬНОГО ЧИСЛА -7.5 ПОЛУЧАЕТСЯ -7, Т.&Е. &МАКСИМАЛЬНОЕ
 ЦЕЛОЕ ЧИСЛО, НЕ ПРЕВЫШАЮЩЕЕ ПО МОДУЛЮ ИСХОДНОГО ЧИСЛА).
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 36 (077 066) - ПРЯМОЙ СДВИГ ПО КОДУ НА РГ.Р@М@Р (@М@Д).
#А0 ПРОИЗВОДИТСЯ СЛОЖЕНИЕ 1-11 РАЗРЯДОВ
 АИСП. &С 64-59 РАЗРЯДАМИ @Р@М@Р,
 ПРИЧЕМ 1РАЗРЯД АИСП. &СКЛАДЫВАЕТСЯ С 59 РАЗДЯДОМ И Т.&Д.
 ПОЛУЧЕННЫЙ КОД ЯВЛЯЕТСЯ ПАРАМЕТРОМ СДВИГА ДЛЯ ЧИСЛА В РГ.А,
 11-ЫЙ РАЗРЯД ЗАДАЕТ НАПРАВЛЕНИЕ
 СДВИГА, КАК В КОМАНДЕ @A@S@N.
 КОД, ВЫДВИГАЕМЫЙ ИЗ РГ.А, ПОСТУПАЕТ В @Р@М@Р.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 38 (077 070) - КОСВЕННОЕ ЧТЕНИЕ (@К@Ч).
#А0 ПРОИЗВОДИТСЯ ЗАНЕСЕНИЕ В
 ИНДЕКС-РЕГИСТР ПО АИСП.
 МЛАДШЕЙ ПОЛОВИНЫ СУММАТОРА, И ПО ЭТОМУ АДРЕСУ
 ПРОИЗВОДИТСЯ СЧИТЫВАНИЕ ОПЕРАНДА.
 @Р@М@Р НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 3С (077 074) - ПРЕОБРАЗОВАНИЕ В ДОПОЛНИТЕЛЬНЫЙ КОД (@П@Д).
#А0 ЕСЛИ 53 РАЗРЯД РГ.А РАВЕН 1, ТО КОД МАНТИССЫ ЧИСЛА НА
 СУММАТОРЕ ПРЕОБРАЗУЕТСЯ В ДОПОЛНИТЕЛЬНЫЙ, А
 ЗНАЧЕНИЕ 53 РАЗРЯДА РГ.А СОХРАНЯЕТСЯ БЕЗ ИЗМЕНЕНИЯ.
 ВЫПОЛНЯЮТСЯ НОРМАЛИЗАЦИЯ И ОКРУГЛЕНИЕ РЕЗУЛЬТАТА,
 ЕСЛИ ОНИ НЕ БЛОКИРОВАНЫ.
 ЕСЛИ 53 РАЗРЯД РГ.А РАВЕН 0, СУММАТОР НЕ МЕНЯЕТСЯ.
 УСТАНАВЛИВАЮТСЯ ПРИЗНАКИ РЕЗУЛЬТАТА.
#ПЕРН 3F 3Е (077 076) - ОБРАТНЫЙ СДВИГ ПО КОДУ НА @Р@М@Р (@Р@Д).
#А0 АНАЛОГИЧНА КОМАНДЕ @М@Д, НО НАПРАВЛЕНИЕ
 И ПАРАМЕТР СДВИГА ЗАДАЮТСЯ КАК В КОМАНДЕ @О@Д.
#ПЕРН 3F 3F (077 077) - УСТАНОВКА УСЛОВИЯ (@У@У).
#ПЕРН 3F 51 (077 121) - #Б МММ, 3F 54 (077 124) - КПМ,
 3F 56 (077 126) - СДМ, 3F 58 (077 130) - ВРМ, 3F 59 (077 131) - МРМ,
 3F 5А (077 132) - НСМ, 3F 5С (077 134) - КСМ, 3F 5D (077 135) - КВМ,
 3F 5Е (077 136) - ОДМ, 3F 5F (077 137) - РАМ, 3F 62 (077 142) - ВИМ,
 3F 63 (077 143) - ВЦМ, 3F 74 (077 164) - ЦАМ,
 3F 75 (077 165) - ЦФМ, 3F 76 (077 166) - МДМ, 3F 78 (077 170) - КЧМ,
 3F 7С (077 174) - ПДМ, 3F 7Е (077 176) - РДМ, 3F 7F (077 177) - УУМ.
#А0 #М КОМАНДЫ, ВЫПОЛНЯЮЩИЕСЯ В РЕЖИМЕ МАГАЗИНА.
 ВЫПОЛНЯЮТСЯ В СООТВЕТСТВИИ С ОПИСАННЫМИ АЛГОРИТМАМИ
 АНАЛОГИЧНЫХ КОМАНД ДОПОЛНИТЕЛЬНОГО ФОРМАТА,
 НО ПРЕДВАРИТЕЛЬНО ПРОИЗВОДИТСЯ ЗАПИСЬ
 ПРЕДЫДУЩЕГО РЕЗУЛЬТАТА В ПАМЯТЬ ПО АДРЕСУ
 СЧЕТЧИКА МАГАЗИНА, КОТОРЫЙ
 ПОСЛЕ ЭТОГО УВЕЛИЧИВАЕТСЯ НА 1.
#НОВСЦ #СГ0
#А0 #Ц #Б 5.20 СВОДНАЯ ТАБЛИЦА КОМАНД @М@К@Б-8601 #М
#НА ЗНАЧЕНИЯ ОТДЕЛЬНЫХ СТОЛБЦОВ ТАБЛИЦЫ:
#ПЕРН О - КОД ОПЕРАЦИИ ОСНОВНОГО ФОРМАТА;
#ПЕРН Д - КОД ОПЕРАЦИИ ДОПОЛНИТЕЛЬНОГО ФОРМАТА;
#ПЕРН А - ИЗМЕНЯЕТ ЛИ СУММАТОР ( +, ЕСЛИ ДА );
#ПЕРН Р - ИЗМЕНЯЕТ ЛИ @Р@М@Р (+_-_ВСЕГДА, *_-_ПРИ @Р@Э);
#ПЕРН Г - ИЗМЕНЯЕТ ЛИ ПРИЗНАК ГРУППЫ (Л - ЛОГИЧЕСКАЯ
 ГРУППА, С - ГРУППА СЛОЖЕНИЯ,
 У - ГРУППА УМНОЖЕНИЯ, * - РЕГИСТРОВАЯ КОМАНДА);
#ПЕРН М - УЧАСТВУЕТ ЛИ В ФОРМИРОВАНИИ ИСПОЛНИТЕЛЬНОГО
 АДРЕСА
 ИНДЕКС-РЕГИСТР, УКАЗАННЫЙ В КОМАНДЕ (-, ЕСЛИ НЕТ);
#ПЕРН И - ЯВЛЯЕТСЯ ЛИ ИСПОЛНИТЕЛЬНЫЙ АДРЕС АДРЕСОМ
 ОПЕРАНДА ПО ПАМЯТИ (+, ЕСЛИ ДА);
#ПЕРН П - ТРЕБУЕТСЯ ЛИ ПРИ ВЫПОЛНЕНИИ КОМАНДЫ ОБРАЩЕНИЕ
 К ПАМЯТИ (+, ЕСЛИ ДА);
#ПЕРН S - ВОЗМОЖНО ЛИ МАГАЗИННОЕ ИСПОЛНЕНИЕ КОМАНДЫ ПРИ
 15 МОДИФИКАТОРЕ И "0" ИСП.&АДРЕСА (+, ЕСЛИ ДА);
#ПЕРН I - КОМАНДА ВЫПОЛНЯЕТСЯ НАД МОДИФИКАТОРАМИ (+, ЕСЛИ ДА);
#ПЕРН Д - КОМАНДА ПРИВИЛЕГИРОВАННАЯ (+, ЕСЛИ ДА).
#НА _ #А0 _ #ВС10 _
#А0 #Ц 1.КОМАНДЫ ПЕРЕСЫЛОК
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 АТХ__00_____________+_+_+_____ЗАПИСЬ СЛОВА В ПАМЯТЬ
#А0 SТХ__01_____+___Л___+_+_+_____ЗАПИСЬ СЛОВА МАГАЗИННАЯ
#А0 XTS__03_____+___Л___+_+_+_____ЧТЕНИЕ СЛОВА МАГАЗИННОЕ
#А0 ХТА__08_____+___Л___+_+_+_____ЧТЕНИЕ СЛОВА ИЗ ПАМЯТИ
#А0 _ #ВС10 _
#А0 #Ц 2.АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 А+Х__Е5_____+_+_С___+_+_+_____СЛОЖЕНИЕ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А0 А-Х__Е6_____+_+_С___+_+_+_____ВЫЧИТАНИЕ    - " -
#А0 Х-А__Е7_____+_+_С___+_+_+_____ОБРАТНОЕ ВЫЧИТАНИЕ  - " -
#А0 АМХ__Е8_____+_+_С___+_+_+_____ВЫЧИТАНИЕ МОДУЛЕЙ  - " -
#А0 AVX__Е9_____+___С___+_+_+_____ИЗМЕНЕНИЕ ЗНАКА
#А0 А/Х__0Е_____+_+_У___+_+_+_____ДЕЛЕНИЕ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А0 А*Х__ЕА_____+_+_У___+_+_+_____УМНОЖЕНИЕ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А0 Е+Х__14_____+___У___+_+_+_____СЛОЖЕНИЕ ПОРЯДКА С КОДОМ
#А0 Е-Х__15_____+___У___+_+_+_____ВЫЧИТАНИЕ КОДА ИЗ ПОРЯДКА
#А0 Е+N__3F_1С__+___У_____________СЛОЖЕНИЕ ПОРЯДКА С АДРЕСОМ
#А0 Е-N__3F_1D__+___У_____________ВЫЧИТАНИЕ АДРЕСА ИЗ ПОРЯДКА
#А0 УТА__3F_81__+_________________ВЫДАЧА @Р@М@Р
#А0 _ #ВС10 _
#А0 #Ц 3.ЛОГИЧЕСКИЕ КОМАНДЫ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ААХ__09_____+___Л___+_+_+_____ЛОГИЧЕСКОЕ УМНОЖЕНИЕ
#А0 АЕХ__0А_____+_+_Л___+_+_+_____СРАВНЕНИЕ
#А0 ARX__0В_____+___У___+_+_+_____ЦИКЛИЧЕСКОЕ СЛОЖЕНИЕ
#А0 АОХ__0D_____+___Л___+_+_+_____ЛОГИЧЕСКОЕ СЛОЖЕНИЕ
#А0 АРХ__10_____+___Л___+_+_+_____СБОРКА ПО МАСКЕ
#А0 AUX__11_____+___Л___+_+_+_____РАЗБОРКА ПО МАСКЕ
#А0 АСХ__12_____+___Л___+_+_+_____ПОДСЧЕТ ЧИСЛА ЕДИНИЦ
#А0 ANX__13_____+_+_Л___+_+_+_____НОМЕР СТАРШЕЙ ЕДИНИЦЫ
#А0 ASX__16_____+_+_Л___+_+_+_____СДВИГ ПО КОДУ
#А0 ASN__3F_16__+_+_Л_____________СДВИГ ПО АДРЕСУ
#А0 _ #ВС10 _
#А0 #Ц 4.ИНДЕКСНЫЕ КОМАНДЫ #Б БЭСМ-6 #М
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ATI__3F_20____________________УСТАНОВКА МОДИФИКАТОРА
#А0 STI__3F_21__+___Л_____+_______--"-- _--"--_ МАГАЗИННАЯ
#А0 IТА__3F_80__+___Л_____________ВЫДАЧА МОДИФИКАТОРА
#А0 ITS__3F_22__+___Л_____+_______--"-- _--"--_ МАГАЗИННАЯ
#А0 MTJ__3F_24________-_______+___ПЕРЕСЫЛКА МОДИФИКАТОРА
#А0 J+М__3F_25________-_______+___СЛОЖЕНИЕ МОДИФИКАТОРОВ
#А0 UТС__90___________________+___ПРЕФИКСАЦИЯ АДРЕСОМ
#А0 WТС__3В_____________+_+_+_____ПРЕФИКСАЦИЯ КОДОМ
#А0 VТМ__3С___________-_______+___УСТАНОВКА МОДИФИКАТОРА АДРЕСОМ
#А0 UТМ__3D___________-_______+___СЛОЖЕНИЕ РЕГИСТРА С АДРЕСОМ
#А0 _ #ВС10 _
#А0 #Ц 5.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ @Б@Э@С@М-6
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 UZA__ЕВ_______________________УСЛОВНЫЙ ПЕРЕХОД ПО "0" W
#А0 UIA__ЕС_______________________УСЛОВНЫЙ ПЕРЕХОД ПО "1" W
#А0 JМР__18_______________________БЕЗУСЛОВНЫЙ ПЕРЕХОД
#А0 VJM__19___________-_______+___ПЕРЕХОД С ВОЗВРАТОМ
#А0 JMEQ_20___________-_______+___П/У, ЕСЛИ МОДИФИКАТОР = "0"
#А0 JMNE_21___________-_______+___П/У,ЕСЛИ МОДИФ.НЕ РАВЕН "0"
#А0 VLM__1В___________-_______+___КОНЕЦ ЦИКЛА, УВЕЛ.МОДИФ.НА 1
#А0 _ #ВС10 _
#А0 #Ц 6.КОМАНДЫ С РЕГИСТРОМ РЕЖИМОВ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 XTR__DВ_________*___+_+_+_____УСТАНОВКА @Р@Р КОДОМ
#А0 NTR__3F_82______*_____________УСТАНОВКА @Р@Р АДРЕСОМ
#А0 RТЕ__3F_83__+_________________ВЫДАЧА @Р@Р
#А0 *80__80_______________________ЭКСТРАКОД
#А0 _ #ВС10 _
#А0 #Ц 7.КОМАНДЫ С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 А+U__81_____+___У_____________СЛОЖЕНИЕ С ЛИТЕРАЛОМ
#А0 А-U__82_____+___У_____________ВЫЧИТАНИЕ ЛИТЕРАЛА
#А0 U-А__83_____+___У_____________ОБРАТНОЕ ВЫЧИТАНИЕ
#А0 UТА__48_____+___Л_____________ВЫДАЧА ИСПОЛНИТЕЛЬНОГО АДРЕСА
#А0 AAU__49_____+___Л_____________ЛОГИЧЕСКОЕ УМНОЖ. &НА ЛИТЕРАЛ
#А0 AEU__4А_____+___Л_____________СРАВНЕНИЕ С ЛИТЕРАЛОМ
#А0 AOU__4D_____+___Л_____________ЛОГИЧЕСКОЕ СЛОЖЕНИЕ
#А0 А/U__86_____+_+_У_____________ДЕЛЕНИЕ НА ЛИТЕРАЛ
#А0 А*U__87_____+___У_____________УМНОЖЕНИЕ НА ЛИТЕРАЛ
#А0 ACU__52_____+___Л_____________ПОДСЧЕТ ЧИСЛА ЕДИНИЦ
#А0 ANU__53_____+_+_Л_____________НОМЕР СТАРШЕЙ ЕДИНИЦЫ
#А0 UТУ__88_______+_Л_____________ВЫДАЧА ИСП. &АДРЕСА В @Р@М@Р
#А0 UTS__43_____+___Л___+_+_______ЗАПИСЬ АДРЕСА МАГАЗИННАЯ
#А0 _ #ВС10 _
#А0 #Ц 8.КОМАНДЫ С @Р@М@Р
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ХТУ__94_______+_____+_+_+_____ЧТЕНИЕ ИЗ ПАМЯТИ В @Р@М@Р
#А0 УАХ__95_____+___Л___+_+_+_____ЛОГИЧЕСКОЕ УМНОЖЕНИЕ НА @Р@М@Р
#А0 УЕХ__96_____+___Л___+_+_+_____СРАВНЕНИЕ С @Р@М@Р
#А0 УОХ__97_____+___Л___+_+_+_____ЛОГИЧЕСКОЕ СЛОЖЕНИЕ С @Р@М@Р
#А0 УТХ__98_____________+_+_+_____ЗАПИСЬ В ПАМЯТЬ ИЗ @Р@М@Р
#А0 ААУ__3F_84__+___Л_____________ЛОГИЧЕСКОЕ УМНОЖЕНИЕ @А НА @У
#А0 АЕУ__3F_85__+___Л_____________СРАВНЕНИЕ @А С @У
#А0 АОУ__3F_86__+___Л_____________ЛОГИЧЕСКОЕ СЛОЖЕНИЕ @А С @У
#А0 _ #ВС10 _
#А0 #Ц 9.ИНДЕКСНЫЕ КОМАНДЫ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 MCJ__3F_90________-_______+___ОБМЕН ЗНАЧЕНИЙ МОДИФИКАТОРОВ
#А0 MSN__3F_91________-_______+___СДВИГ МОДИФИКАТОРА ВЛЕВО
#А0 J-М__3F_27________-_______+___ВЫЧИТАНИЕ МОДИФИКАТОРОВ
#А0 VТМН_А0___________-_______+___УСТ.МОДИФ.АДРЕСОМ СО СДВ.НА 1
#А0 VTMQ_А1___________-_______+___УСТ.МОДИФ.АДРЕСОМ СО СДВ.НА 2
#А0 VТМВ_А2___________-_______+___УСТ.МОДИФ.АДРЕСОМ СО СДВ.НА 3
#А0 VTMF_А3___________-_______+___УСТ.МОДИФ.АДРЕСОМ СО СДВ.НА 6
#А0 UTCS_А4___________________+___ПРЕФИКСАЦИЯ АДРЕСОМ СО СДВИГОМ
#А0 МРАС_3F_94__+_+_Л_____________УПАКОВКА 4-Х МОДИФ. В А,У
#А0 MUNP_3F_95____________________РАСПАКОВКА 4-Х МОДИФ. ИЗ А,У
#А0 А+I__3F_А2__+___У_____________ЦЕЛОЕ СЛОЖЕНИЕ МОДИФИКАТОРА
#А0 А-I__3F_А3__+___У_____________ЦЕЛОЕ ВЫЧИТАНИЕ МОДИФИКАТОРА
#А0 I-А__3F_А4__+___У_____________ОБР.&ЦЕЛ.&ВЫЧИТАНИЕ МОДИФИК.
#А0 А/I__3F_А7__+_+_У_____________ЦЕЛОЕ ДЕЛЕНИЕ НА МОДИФИКАТОР
#А0 А*I__3F_А8__+___У_____________ЦЕЛОЕ УМНОЖ.&НА МОДИФИКАТОР
#А0 AAI__3F_А9__+___Л_____________ЛОГ.&УМНОЖЕНИЕ НА МОДИФИКАТОР
#А0 AEI__3F_АА__+___Л_____________СРАВНЕНИЕ С МОДИФИКАТОРОМ
#А0 AOI__3F_АВ__+___Л_____________ЛОГ.&СЛОЖЕНИЕ С МОДИФИКАТОРОМ
#А0 _ #ВС10 _
#А0 #Ц 10.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 JMGE_22___________-_______+___П/У ПРИ "0" ЗНАКА МОДИФ.
#А0 JMLT_23___________-_______+___П/У ПРИ "1" ЗНАКА МОДИФ.
#А0 JMLE_24___________-_______+___П/У, ЕСЛИ МОДИФ. < ИЛИ = "0"
#А0 JMGT_25___________-_______+___П/У, ЕСЛИ МОДИФ. &БОЛЬШЕ "0"
#А0 VRM__А9___________-_______+___КОНЕЦ ЦИКЛА, УМЕНЬШ.МОДИФ.НА 1
#А0 UZAS_АА_____+___Л_____+_______П/У ПО "0" РГ.А + ЧТ.&ИЗ МАГ.
#А0 UIAS_АВ_____+___Л_____+_______П/У ПО "1" РГ.А + ЧТ.&ИЗ МАГ.
#А0 JOVR_АС_______________________П/У ПО ПРИЗНАКУ ПЕРЕПОЛНЕНИЯ
#А0 JCRY_AD_______________________П/У ПО ПРИЗНАКУ ПЕРЕНОСА
#А0 JAGT_АЕ_______________________П/У, ЕСЛИ ЦЕЛОЕ А > "0"
#А0 JAGE_AF_______________________П/У, ЕСЛИ ЦЕЛОЕ А > ИЛИ = "0"
#А0 JALT_В0_______________________П/У, ЕСЛИ ЦЕЛОЕ А < "0"
#А0 JALE_В1_______________________П/У, ЕСЛИ ЦЕЛОЕ А < ИЛИ = "0"
#А0 JAEQ_В2_______________________П/У, ЕСЛИ ЦЕЛОЕ А РАВНО "0"
#А0 JANE_В3_______________________П/У, ЕСЛИ ЦЕЛОЕ А НЕ РАВНО "0"
#А0 JMPS_В4_______________+_______ПЕРЕХОД К ПОДПРОГРАММЕ
#А0 RETS_3F_87____________+_______ВОЗВРАТ ИЗ ПОДПРОГРАММЫ
#А0 _ #ВС10 _
#А0 #Ц 11.ЦЕЛАЯ 64-РАЗРЯДНАЯ АРИФМЕТИКА
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ASNA_3F_96__+___Л_____________СДВИГ АРИФМЕТИЧЕСКИЙ
#А0 А+L__99_____+___У___+_+_+_____ЦЕЛОЕ СЛОЖЕНИЕ СЛОВА
#А0 А-L__9А_____+___У___+_+_+_____ЦЕЛОЕ ВЫЧИТАНИЕ СЛОВА
#А0 L-А__9В_____+___У___+_+_+_____ОБР.&ЦЕЛОЕ ВЫЧИТАНИЕ СЛОВА
#А0 А/L__9Е_____+_+_У___+_+_+_____ЦЕЛОЕ ДЕЛЕНИЕ НА СЛОВО
#А0 А*L__9F_____+___У___+_+_+_____ЦЕЛОЕ УМНОЖЕНИЕ НА СЛОВО
#А0 _ #ВС10 _
#А0 #Ц 12.ОПЕРАЦИИ НАД ПОЛУСЛОВАМИ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 АТН__В6_____________+_+_______ЗАПИСЬ ПОЛУСЛОВА В ПАМЯТЬ
#А0 SТН__В7_____+___Л___+_+_______ЗАПИСЬ ПОЛУСЛОВА МАГАЗИННАЯ
#А0 НТА__В8_____+___Л___+_+_______ЧТЕНИЕ ПОЛУСЛОВА ИЗ ПАМЯТИ
#А0 HTS__В9_____+___Л___+_+_______ЧТЕНИЕ ПОЛУСЛОВА МАГАЗИННОЕ
#А0 А+Н__ВА_____+___У___+_+_______ЦЕЛОЕ СЛОЖЕНИЕ ПОЛУСЛОВА
#А0 А-Н__ВВ_____+___У___+_+_______ЦЕЛОЕ ВЫЧИТАНИЕ ПОЛУСЛОВА
#А0 Н-А__ВС_____+___У___+_+_______ОБР.&ЦЕЛ.&ВЫЧИТАНИЕ ПОЛУСЛОВА
#А0 А/Н__BF_____+_+_У___+_+_______ЦЕЛОЕ ДЕЛЕНИЕ НА ПОЛУСЛОВО
#А0 А*Н__С0_____+___У___+_+_______ЦЕЛОЕ УМНОЖ.&НА ПОЛУСЛОВО
#А0 ААН__С1_____+___Л___+_+_______ЛОГ.&УМНОЖЕНИЕ НА ПОЛУСЛОВО
#А0 АЕН__С2_____+___Л___+_+_______СРАВНЕНИЕ С ПОЛУСЛОВОМ
#А0 АОН__С3_____+___Л___+_+_______ЛОГ.&СЛОЖЕНИЕ С ПОЛУСЛОВОМ
#А0 _ #ВС10 _
#А0 #Ц 13.ОПЕРАЦИИ НАД 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ATQ__С4_____________+_+_______ЗАПИСЬ 1/4 СЛОВА В ПАМЯТЬ
#А0 STQ__С5_____+___Л___+_+_______ЗАПИСЬ 1/4 СЛОВА МАГАЗИННАЯ
#А0 QТА__С6_____+___Л___+_+_______ЧТЕНИЕ 1/4 СЛОВА ИЗ ПАМЯТИ
#А0 QTS__С7_____+___Л___+_+_______ЧТЕНИЕ 1/4 СЛОВА МАГАЗИННОЕ
#А0 AEQ__С8_____+___Л___+_+_______СРАВНЕНИЕ С 1/4 СЛОВА
#А0 AAQ__С9_____+___Л___+_+_______ЛОГ.&УМНОЖЕНИЕ НА 1/4 СЛОВА
#А0 AOQ__СА_____+___Л___+_+_______ЛОГ.&СЛОЖЕНИЕ С 1/4 СЛОВА
#А0 _ #ВС10 _
#А0 #Ц 14.ОПЕРАЦИИ НАД БАЙТАМИ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 АТВ__СВ_____________+_+_______ЗАПИСЬ БАЙТА В ПАМЯТЬ
#А0 SТВ__СС_____+___Л___+_+_______ЗАПИСЬ БАЙТА МАГАЗИННАЯ
#А0 ВТА__CD_____+___Л___+_+_______ЧТЕНИЕ БАЙТА ИЗ ПАМЯТИ
#А0 BTS__СЕ_____+___Л___+_+_______ЧТЕНИЕ БАЙТА МАГАЗИННОЕ
#А0 АЕВ__CF_____+___Л___+_+_______СРАВНЕНИЕ С БАЙТОМ
#А0 ААВ__D0_____+___Л___+_+_______ЛОГ.&УМНОЖЕНИЕ БАЙТ
#А0 АОВ__D1_____+___Л___+_+_______ЛОГ.&СЛОЖЕНИЕ С БАЙТОМ
#А0 _ #ВС10 _
#А0 #Ц 15.ОПЕРАЦИИ НАД БИТАМИ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ATF__D2_____________+_+_______ЗАПИСЬ БИТА В ПАМЯТЬ
#А0 STF__D3_____+___Л___+_+_______ЗАПИСЬ БИТА МАГАЗИННАЯ
#А0 FТА__D4_____+___Л___+_+_______ЧТЕНИЕ БИТА ИЗ ПАМЯТИ
#А0 FTS__D5_____+___Л___+_+_______ЧТЕНИЕ БИТА МАГАЗИННОЕ
#А0 AEF__D6_____+___Л___+_+_______СРАВНЕНИЕ С БИТОМ
#А0 AAF__D7_____+___Л___+_+_______ЛОГ.&УМНОЖЕНИЕ НА БИТ
#А0 AOF__D8_____+___Л___+_+_______ЛОГ.&СЛОЖЕНИЕ С БИТОМ
#А0 SETF_D9_____________+_+_______УСТАНОВКА БИТА В "1"
#А0 CLRF_DА_____________+_+_______УСТАНОВКА БИТА В "0"
#А0 EXTF_3F_А1__+_________________РАЗМНОЖЕНИЕ БИТА ВЛЕВО
#А0 NТА__3F_В0__+___Л_____________УСТАНОВКА БИТА РГ.А В "1"
#А0 NTS__3F_В1__+___Л_____________УСТАНОВКА БИТА МАГАЗИННАЯ
#А0 AEN__3F_В2__+___Л_____________СРАВНЕНИЕ В БИТОМ
#А0 AAN__3F_В3__+___Л_____________ЛОГ.УМНОЖЕНИЕ НА БИТ
#А0 AON__3F_В4__+___Л_____________ЛОГ.СЛОЖЕНИЕ С БИТОМ
#А0 _ #ВС10 _
#А0 #Ц 16.АРИФМЕТИКА С ДВОЙНОЙ ТОЧНОСТЬЮ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 ATD__DС_____________+_+_______ЗАПИСЬ С ДВОЙНОЙ ТОЧНОСТЬЮ
#А0 DТА__DD_____+_+_Л___+_+_______ЧТЕНИЕ ДВОЙНОГО СЛОВА
#А0 А+D__DЕ_____+_+_С___+_+_______СЛОЖЕНИЕ С ДВОЙНОЙ ТОЧНОСТЬЮ
#А0 А-D__DF_____+_+_С___+_+_______ВЫЧИТАНИЕ С ДВОЙНОЙ ТОЧН.
#А0 D-А__Е0_____+_+_С___+_+_______ОБР.&ВЫЧИТАНИЕ С ДВ.&ТОЧНОСТЬЮ
#А0 А/D__Е3_____+_+_У___+_+_______ДЕЛЕНИЕ С ДВОЙНОЙ ТОЧНОСТЬЮ
#А0 А*D__Е4_____+_+_У___+_+_______УМНОЖЕНИЕ С ДВ. &ТОЧНОСТЬЮ
#А0 _ #ВС10 _
#А0 #Ц 17.ПРИВИЛЕГИРОВАННЫЕ КОМАНДЫ
#А0 _
#А0 _____О__Д___А_Р_Г_М_И_П_S_I_Д_____
#А0 RMOD_F0_____+___Л___________+_ЧТЕНИЕ СПЕЦИАЛЬНЫХ РЕГИСТРОВ
#А0 WMOD_F1_____________________+_ЗАПИСЬ В СПЕЦИАЛЬНЫЕ РЕГИСТРЫ
#А0 IJP__3F FD__________________+_ВОЗВРАТ ИЗ ПРЕРЫВАНИЯ
#А0 SETR_F2_____________________+_УСТАНОВКА @Р@Р АДРЕСОМ
#А0 CLRR_F3_____________________+_ГАШЕНИЕ @Р@Р АДРЕСОМ
#А0 SEMR_F4_____________+_+_____+_СЕМАФОРНОЕ ЧТЕНИЕ
#А0 SEMW_F7_____________+_+_____+_СЕМАФОРНАЯ_ЗАПИСЬ
#А0 SMON_F8_____________+_+_____+_ЗАХВАТ_ГЛОБАЛЬНОГО СЕМАФОРА
#А0 CMON_F9 ____________+_+_____+_ОСВОБОЖДЕНИЕ_ГЛОБ._СЕМАФОРА
#А0 ТТХ__F5_____________+_+_+___+_ЗАПИСЬ СЛОВА С ЗАДАННЫМ ТЕГОМ
#А0 ТТА__F6_____+_+_Л___+_+_+___+_ЧТЕНИЕ С ТЕГОМ
#А0 RЕТ__3F_FЕ__________________+_ВОЗВРАТ ИЗ ЭКСТРАКОДА
#А0 HLT__3F_FF__________________+_ОСТАНОВ
#СГ0 #НА #НА #НА #ВС10 _
#А0 #Ц #Б 5.21.СКОРОСТЬ ИСПОЛНЕНИЯ КОМАНД _МКБ-8601 #М
#А0 _
#А0 #Ц 1.КОМАНДЫ ПЕРЕСЫЛОК
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 АТХ.!......!......!......!......!......!......!.......!......!
#А0 SТХ.!......!......!......!......!......!......!.......!......!
#А0 XTS.!......!......!......!......!......!......!.......!......!
#А0 ХТА.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 2.АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ С ПЛАВАЮЩЕЙ ЗАПЯТОЙ
#А0 _
#А0 КОД-!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 А+Х.!......!......!......!......!......!......!.......!......!
#А0 А-Х.!......!......!......!......!......!......!.......!......!
#А0 Х-А.!......!......!......!......!......!......!.......!......!
#А0 АМХ.!......!......!......!......!......!......!.......!......!
#А0 AVX.!......!......!......!......!......!......!.......!......!
#А0 А/Х.!......!......!......!......!......!......!.......!......!
#А0 А*Х.!......!......!......!......!......!......!.......!......!
#А0 Е+Х.!......!......!......!......!......!......!.......!......!
#А0 Е-Х.!......!......!......!......!......!......!.......!......!
#А0 Е+N.!......!......!......!......!......!......!.......!......!
#А0 Е-N.!......!......!......!......!......!......!.......!......!
#А0 УТА.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 3.ЛОГИЧЕСКИЕ КОМАНДЫ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ААХ.!......!......!......!......!......!......!.......!......!
#А0 АЕХ.!......!......!......!......!......!......!.......!......!
#А0 ARX.!......!......!......!......!......!......!.......!......!
#А0 АОХ.!......!......!......!......!......!......!.......!......!
#А0 АРХ.!......!......!......!......!......!......!.......!......!
#А0 AUX.!......!......!......!......!......!......!.......!......!
#А0 АСХ.!......!......!......!......!......!......!.......!......!
#А0 ANX.!......!......!......!......!......!......!.......!......!
#А0 ASX.!......!......!......!......!......!......!.......!......!
#А0 ASN.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 4.ИНДЕКСНЫЕ КОМАНДЫ @Б@Э@С@М-6
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ATI.!......!......!......!......!......!......!.......!......!
#А0 STI.!......!......!......!......!......!......!.......!......!
#А0 IТА.!......!......!......!......!......!......!.......!......!
#А0 ITS.!......!......!......!......!......!......!.......!......!
#А0 MTJ.!......!......!......!......!......!......!.......!......!
#А0 J+М.!......!......!......!......!......!......!.......!......!
#А0 UТС.!......!......!......!......!......!......!.......!......!
#А0 WТС.!......!......!......!......!......!......!.......!......!
#А0 VТМ.!......!......!......!......!......!......!.......!......!
#А0 UТМ.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 5.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ @Б@Э@С@М-6
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 UZA.!......!......!......!......!......!......!.......!......!
#А0 UIA.!......!......!......!......!......!......!.......!......!
#А0 JМР.!......!......!......!......!......!......!.......!......!
#А0 VJM.!......!......!......!......!......!......!.......!......!
#А0 JMEQ!......!......!......!......!......!......!.......!......!
#А0 JMNE!......!......!......!......!......!......!.......!......!
#А0 VLM.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 6.КОМАНДЫ С РЕГИСТРОМ РЕЖИМОВ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 XTR.!......!......!......!......!......!......!.......!......!
#А0 NTR.!......!......!......!......!......!......!.......!......!
#А0 RТЕ.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 7.КОМАНДЫ С НЕПОСРЕДСТВЕННЫМ ОПЕРАНДОМ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 А+U.!......!......!......!......!......!......!.......!......!
#А0 А-U.!......!......!......!......!......!......!.......!......!
#А0 U-А.!......!......!......!......!......!......!.......!......!
#А0 UТА.!......!......!......!......!......!......!.......!......!
#А0 AAU.!......!......!......!......!......!......!.......!......!
#А0 AEU.!......!......!......!......!......!......!.......!......!
#А0 AOU.!......!......!......!......!......!......!.......!......!
#А0 А/U.!......!......!......!......!......!......!.......!......!
#А0 А*U.!......!......!......!......!......!......!.......!......!
#А0 ACU.!......!......!......!......!......!......!.......!......!
#А0 ANU.!......!......!......!......!......!......!.......!......!
#А0 UТУ.!......!......!......!......!......!......!.......!......!
#А0 UTS.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 8.КОМАНДЫ С @Р@М@Р
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ХТУ.!......!......!......!......!......!......!.......!......!
#А0 УАХ.!......!......!......!......!......!......!.......!......!
#А0 УЕХ.!......!......!......!......!......!......!.......!......!
#А0 УОХ.!......!......!......!......!......!......!.......!......!
#А0 УТХ.!......!......!......!......!......!......!.......!......!
#А0 ААУ.!......!......!......!......!......!......!.......!......!
#А0 АЕУ.!......!......!......!......!......!......!.......!......!
#А0 АОУ.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 9.ИНДЕКСНЫЕ КОМАНДЫ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 MCJ.!......!......!......!......!......!......!.......!......!
#А0 MSN.!......!......!......!......!......!......!.......!......!
#А0 J-М.!......!......!......!......!......!......!.......!......!
#А0 VТМН!......!......!......!......!......!......!.......!......!
#А0 VTMQ!......!......!......!......!......!......!.......!......!
#А0 VТМВ!......!......!......!......!......!......!.......!......!
#А0 VTMF!......!......!......!......!......!......!.......!......!
#А0 UTCS!......!......!......!......!......!......!.......!......!
#А0 МРАС!......!......!......!......!......!......!.......!......!
#А0 MUNP!......!......!......!......!......!......!.......!......!
#А0 А+I.!......!......!......!......!......!......!.......!......!
#А0 А-I.!......!......!......!......!......!......!.......!......!
#А0 I-А.!......!......!......!......!......!......!.......!......!
#А0 А/I.!......!......!......!......!......!......!.......!......!
#А0 А*I.!......!......!......!......!......!......!.......!......!
#А0 AAI.!......!......!......!......!......!......!.......!......!
#А0 AEI.!......!......!......!......!......!......!.......!......!
#А0 AOI.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 10.КОМАНДЫ ПЕРЕДАЧИ УПРАВЛЕНИЯ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 JMGE!......!......!......!......!......!......!.......!......!
#А0 JMLT!......!......!......!......!......!......!.......!......!
#А0 JMLE!......!......!......!......!......!......!.......!......!
#А0 JMGT!......!......!......!......!......!......!.......!......!
#А0 VRM.!......!......!......!......!......!......!.......!......!
#А0 UZAS!......!......!......!......!......!......!.......!......!
#А0 UIAS!......!......!......!......!......!......!.......!......!
#А0 JOVR!......!......!......!......!......!......!.......!......!
#А0 JCRY!......!......!......!......!......!......!.......!......!
#А0 JAGT!......!......!......!......!......!......!.......!......!
#А0 JAGE!......!......!......!......!......!......!.......!......!
#А0 JALT!......!......!......!......!......!......!.......!......!
#А0 JALE!......!......!......!......!......!......!.......!......!
#А0 JAEQ!......!......!......!......!......!......!.......!......!
#А0 JANE!......!......!......!......!......!......!.......!......!
#А0 JMPS!......!......!......!......!......!......!.......!......!
#А0 RETS!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 11.ЦЕЛАЯ 64-РАЗРЯДНАЯ АРИФМЕТИКА
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ASNA!......!......!......!......!......!......!.......!......!
#А0 А+L.!......!......!......!......!......!......!.......!......!
#А0 А-L.!......!......!......!......!......!......!.......!......!
#А0 L-А.!......!......!......!......!......!......!.......!......!
#А0 А/L.!......!......!......!......!......!......!.......!......!
#А0 А*L.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 12.ОПЕРАЦИИ НАД ПОЛУСЛОВАМИ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 АТН.!......!......!......!......!......!......!.......!......!
#А0 SТН.!......!......!......!......!......!......!.......!......!
#А0 НТА.!......!......!......!......!......!......!.......!......!
#А0 HTS.!......!......!......!......!......!......!.......!......!
#А0 А+Н.!......!......!......!......!......!......!.......!......!
#А0 А-Н.!......!......!......!......!......!......!.......!......!
#А0 Н-А.!......!......!......!......!......!......!.......!......!
#А0 А/Н.!......!......!......!......!......!......!.......!......!
#А0 А*Н.!......!......!......!......!......!......!.......!......!
#А0 ААН.!......!......!......!......!......!......!.......!......!
#А0 АЕН.!......!......!......!......!......!......!.......!......!
#А0 АОН.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 13.ОПЕРАЦИИ НАД 16-РАЗРЯДНЫМИ ФРАГМЕНТАМИ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ATQ.!......!......!......!......!......!......!.......!......!
#А0 STQ.!......!......!......!......!......!......!.......!......!
#А0 QТА.!......!......!......!......!......!......!.......!......!
#А0 QTS.!......!......!......!......!......!......!.......!......!
#А0 AEQ.!......!......!......!......!......!......!.......!......!
#А0 AAQ.!......!......!......!......!......!......!.......!......!
#А0 AOQ.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 14.ОПЕРАЦИИ НАД БАЙТАМИ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 АТВ.!......!......!......!......!......!......!.......!......!
#А0 SТВ.!......!......!......!......!......!......!.......!......!
#А0 ВТА.!......!......!......!......!......!......!.......!......!
#А0 BTS.!......!......!......!......!......!......!.......!......!
#А0 АЕВ.!......!......!......!......!......!......!.......!......!
#А0 ААВ.!......!......!......!......!......!......!.......!......!
#А0 АОВ.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 15.ОПЕРАЦИИ НАД БИТАМИ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ATF.!......!......!......!......!......!......!.......!......!
#А0 STF.!......!......!......!......!......!......!.......!......!
#А0 FТА.!......!......!......!......!......!......!.......!......!
#А0 FTS.!......!......!......!......!......!......!.......!......!
#А0 AEF.!......!......!......!......!......!......!.......!......!
#А0 AAF.!......!......!......!......!......!......!.......!......!
#А0 AOF.!......!......!......!......!......!......!.......!......!
#А0 SETF!......!......!......!......!......!......!.......!......!
#А0 CLRF!......!......!......!......!......!......!.......!......!
#А0 EXTF!......!......!......!......!......!......!.......!......!
#А0 NТА.!......!......!......!......!......!......!.......!......!
#А0 NTS.!......!......!......!......!......!......!.......!......!
#А0 AEN.!......!......!......!......!......!......!.......!......!
#А0 AAN.!......!......!......!......!......!......!.......!......!
#А0 AON.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 16.АРИФМЕТИКА С ДВОЙНОЙ ТОЧНОСТЬЮ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 ATD.!......!......!......!......!......!......!.......!......!
#А0 DТА.!......!......!......!......!......!......!.......!......!
#А0 А+D.!......!......!......!......!......!......!.......!......!
#А0 А-D.!......!......!......!......!......!......!.......!......!
#А0 D-А.!......!......!......!......!......!......!.......!......!
#А0 А/D.!......!......!......!......!......!......!.......!......!
#А0 А*D.!......!......!......!......!......!......!.......!......!
#А0 #ВС10 _
#А0 #Ц 17.ПРИВИЛЕГИРОВАННЫЕ КОМАНДЫ. ЭКСТРАКОДЫ. ПРЕРЫВАНИЯ
#А0 _
#А0 КОД_!__V_ПАМЯТИ___!__СР.КОЛ-ВО__!_____________!___ИЗМЕНЕНИЯ__!
#А0 КОМ.!_МИКРОКОМАНД_!_МИКРОКОМАНД_!___СКОРОСТЬ__!___В_СЛУЧАЕ___!
#А0 ----!-------------!-------------!-------------!--------------!
#А0 ____!__НР__!__РЭ__!__НР__!__РЭ__!__НР__!__РЭ__!_ПИА=1_!__ПК__!
#А0 RMOD!......!......!......!......!......!......!.......!......!
#А0 WMOD!......!......!......!......!......!......!.......!......!
#А0 IJP.!......!......!......!......!......!......!.......!......!
#А0 SETR!......!......!......!......!......!......!.......!......!
#А0 CLRR!......!......!......!......!......!......!.......!......!
#А0 SEMR!......!......!......!......!......!......!.......!......!
#А0 SEMW!......!......!......!......!......!......!.......!......!
#А0 SMON!......!......!......!......!......!......!.......!......!
#А0 CMON!......!......!......!......!......!......!.......!......!
#А0 ТТХ.!......!......!......!......!......!......!.......!......!
#А0 ТТА.!......!......!......!......!......!......!.......!......!
#А0 RЕТ.!......!......!......!......!......!......!.......!......!
#А0 HLT.!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ МИКРОПРОГРАММА ВХОДА В ЭКСТРАКОД
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ ВНУТРЕННИЕ ПРЕРЫВАНИЯ
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ ВНЕШНИЕ ПРЕРЫВАНИЯ
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ СООБЩЕНИЕ @П@П И ОСТАНОВ
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ МАТ.&АДРЕС РАВЕН 0 (14)
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ ЗАПРОС МОДИФИКАЦИИ ПРИОРИТЕТОВ СТРАНИЦ (24)
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ МИКРОСЕКУНДНЫЙ ТАЙМЕР @С@В РАВЕН 0 (26)
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ ОБРАЩЕНИЕ @П@П НА ЧТЕНИЕ/ЗАПИСЬ РЕГИСТРОВ (28)
#А0 ....!......!......!......!......!......!......!.......!......!
#А0 #ВС3 _ ОСТАНОВ (32)
#А0 ....!......!......!......!......!......!......!.......!......!
#НОВСЦ #СГ0
#НА #А0 #Ц #Б 5.22.ТАБЛИЦЫ КОДОВ КОМАНД #М
#НА #А0 #Ц КОДЫ КОМАНД ЭМУЛЯТОРА @Б@Э@С@М-6
#НА
#А0 _____________М_Л_А_Д_Ш_И_Е___Р_А_З_Р_Я_Д_Ы
#А0 СТ._0/8____1/9____2/А____3/В____4/С____5/D____6/Е____7/F
#А0 __---------------------------------------------------------
#А0 0_I.АТХ..I.SТХ..I......I.XTS..I.А+Х..I.А-Х..I.Х-А..I.АМХ..I
#А0 __I.ХТА..I.ААХ..I.АЕХ..I.ARX..I.AVX..I.АОХ..I.А/Х..I.А*Х..I
#А0 1_I.АРХ..I.AUX..I.АСХ..I.ANX..I.Е+Х..I.Е-Х..I.ASX..I.XTR..I
#А0 __I.RТЕ..I.УТА..I......I......I.Е+N..I.Е-N..I.ASN..I.NTR..I
#А0 2_I.ATI..I.STI..I.IТА..I.ITS..I.MTJ..I.J+М..I......I......I
#А0 __I.*50..I.*51..I.*52..I.*53..I.*54..I.*55..I.*56..I.*57..I
#А0 3_I.*60..I.*61..I.*62..I.*63..I.*64..I.*65..I.*66..I.*67..I
#А0 __I.*70..I.*71..I.*72..I.*73..I.*74..I.*75..I.*76..I.*77..I
#А0 4_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 5_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 6_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 7_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 8_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 9_I.UТС..I......I......I......I......I......I......I......I
#А0 __I.WТС..I......I......I......I......I......I......I......I
#А0 А_I.VТМ..I......I......I......I......I......I......I......I
#А0 __I.UТМ..I......I......I......I......I......I......I......I
#А0 В_I.UZA..I......I......I......I......I......I......I......I
#А0 __I.UIA..I......I......I......I......I......I......I......I
#А0 С_I.JМР..I......I......I......I......I......I......I......I
#А0 __I.VJM..I......I......I......I......I......I......I......I
#А0 D_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 Е_I.JMEQ.I......I......I......I......I......I......I......I
#А0 __I.JMNE.I......I......I......I......I......I......I......I
#А0 F_I......I......I......I......I......I......I......I......I
#А0 __I.VLM..I......I......I......I......I......I......I......I
#А0 __---------------------------------------------------------
#НОВСЦ
#НА #А0
#Ц КОДЫ КОМАНД #Б ЭЛЬБРУС-Б &И МКБ-8601 #М ОСНОВНОГО ФОРМАТА
#НА
#А0 _____________М_Л_А_Д_Ш_И_Е___Р_А_З_Р_Я_Д_Ы
#А0 СТ._0/8____1/9____2/А____3/В____4/С____5/D____6/Е____7/F
#А0 __---------------------------------------------------------
#А0 0_I.АТХ..I.SТХ..I..СН..I.XTS..I..АС..I..АВ..I..ОВ..I..МВ..I
#А0 __I.ХТА..I.ААХ..I.АЕХ..I.ARX..I..ИЗ..I.АОХ..I.А/Х..I..АУ..I
#А0 1_I.АРХ..I.AUX..I.АСХ..I.ANX..I.Е+Х..I.Е-Х..I.ASX..I..РК..I
#А0 __I.JМР..I.VJM..I..УЦ..I.VLM..I......I......I..ОК..I......I
#А0 2_I.JMEQ.I.JMNE.I.JMGE.I.JMLT.I.JMLE.I.JMGT.I......I......I
#А0 __I..УР..I..УН..I.УБР..I.УМЕ..I.УМР..I..УБ..I..УС..I.УНС..I
#А0 3_I..СТ..I..СС..I.ПРИВ.I.ПРИВ.I..ЗН..I.ПРИВ.I.ПРИВ.I..ЗТ..I
#А0 __I..УА..I..КА..I..ПФ..I.WТС..I.VТМ..I.UТМ..I..УГ..I..ДФ..I
#А0 4_I.СЧЦ..I.СМЦ..I.СНЦ..I.UTS..I.АСЦ..I.АВЦ..I.ОВЦ..I.МВЦ..I
#А0 __I.UТА..I.AAU..I.AEU..I.ЦСЛ..I.ИЗЦ..I.AOU..I......I.АУЦ..I
#А0 5_I.СБЛ..I.РБЛ..I.ACU..I.ANU..I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 6_I.ЗЧК..I.ЗМК..I.СНК..I.СМК..I.АСК..I.АВК..I.ОВК..I.МВК..I
#А0 __I.СЧК..I.ЛУК..I.СРК..I.ЦСК..I.ИЗК..I.ЛСК..I.АДК..I.АУК..I
#А0 7_I.СБК..I.РБК..I.ВЧК..I.ВНК..I.СПК..I.ВПК..I.СКК..I......I
#А0 __I.СТК..I.ССК..I.ПРИВ.I.ПРИВ.I.ЗНК..I.ПРИВ.I.ОКК..I.ЗТК..I
#А0 8_IЭКСТР.I.А+U..I.А-U..I.U-А..I......I......I.А/U..I.А*U..I
#А0 __I.UТУ..I......I......I......I......I......I......I......I
#А0 9_I.UТС..I......I......I......I.ХТУ..I.УАХ..I.УЕХ..I.УОХ..I
#А0 __I.УТХ..I.А+L..I.А-L..I.L-А..I......I......I.А/L..I.А*L..I
#А0 А_I.VТМН.I.VTMQ.I.VТМВ.I.VTMF.I.UTCS.I......I......I......I
#А0 __I......I.VRM..I.UZAS.I.UIAS.I.JOVR.I.JCRY.I.JAGT.I.JAGE.I
#А0 В_I.JALT.I.JALE.I.JAEQ.I.JANE.I.JMPS.I......I.АТН..I.SТН..I
#А0 __I.НТА..I.HTS..I.А+Н..I.А-Н..I.Н-А..I......I......I.А/Н..I
#А0 С_I.А*Н..I.ААН..I.АЕН..I.АОН..I.ATQ..I.STQ..I.QТА..I.QTS..I
#А0 __I.AEQ..I.AAQ..I.AOQ..I.АТВ..I.SТВ..I.ВТА..I.BTS..I.АЕВ..I
#А0 D_I.ААВ..I.АОВ..I.ATF..I.STF..I.FТА..I.FTS..I.AEF..I.AAF..I
#А0 __I.AOF..I.SETF.I.CLRF.I.XTR..I.ATD..I.DТА..I.А+D..I.А-D..I
#А0 Е_I.D-А..I......I......I.А/D..I.А*D..I.А+Х..I.А-Х..I.Х-А..I
#А0 __I.АМХ..I.AVX..I.А*Х..I.UZA..I.UIA..I......I......I......I
#А0 F_I.RMOD.I.WMOD.I.SETR.I.CLRR.I.SEMR.I.ТТХ..I.ТТА..I.SEMW.I
#А0 __I.SMON.I.CMON.I......I......I......I......I......I......I
#А0 __---------------------------------------------------------
#НОВСЦ
#НА #А0 #Ц КОДЫ КОМАНД #Б ЭЛЬБРУС-Б &И МКБ-8601 #М
#А0 #Ц ДОПОЛНИТЕЛЬНОГО ФОРМАТА
#НА
#А0 _____________М_Л_А_Д_Ш_И_Е___Р_А_З_Р_Я_Д_Ы
#А0 СТ._0/8____1/9____2/А____3/В____4/С____5/D____6/Е____7/F
#А0 __---------------------------------------------------------
#А0 0_IЭКСТР.I.ПРИВ.I.ПРИВ.I.ПРИВ.I......I......I.ПРИВ.I.ПРИВ.I
#А0 __I......I......I......I......I......I......I......I......I
#А0 1_I......I..ММ..I......I......I..КП..I......I.ASN..I......I
#А0 __I..ВР..I..МР..I..НС..I.ПРИВ.I.Е+N..I.Е-N..I..ОД..I..РА..I
#А0 2_I.ATI..I.STI..I.ITS..I..ВЦ..I.MTJ..I.J+М..I..МИ..I.J-М..I
#А0 __I.ПРИВ.I.ПРИВ.I.ПРИВ.I......I.ПРИВ.I......I......I......I
#А0 3_I......I......I......I......I..ЦА..I..ЦФ..I..МД..I......I
#А0 __I..КЧ..I......I......I......I..ПД..I......I..РД..I..УУ..I
#А0 4_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 5_I......I.МММ..I......I......I.КПМ..I......I.СДМ..I......I
#А0 __I.ВРМ..I.МРМ..I.НСМ..I.ПРИВ.I.КСМ..I.КВМ..I.ОДМ..I.РАМ..I
#А0 6_I......I......I.ВИМ..I.ВЦМ..I......I......I......I......I
#А0 __I......I......I.ПРИВ.I......I......I......I......I......I
#А0 7_I......I......I......I......I.ЦАМ..I.ЦФМ..I.МДМ..I......I
#А0 __I.КЧМ..I......I......I......I.ПДМ..I......I.РДМ..I.УУМ..I
#А0 8_I.IТА..I.УТА..I.NTR..I.RТЕ..I.ААУ..I.АЕУ..I.АОУ..I.RETS.I
#А0 __I......I......I......I......I......I......I......I......I
#А0 9_I.MCJ..I.MSN..I......I......I.МРАС.I.MUNP.I.ASNA.I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 А_I......I.EXTF.I.А+I..I.А-I..I.I-А..I......I......I.А/I..I
#А0 __I.А*I..I.AAI..I.AEI..I.AOI..I......I......I......I......I
#А0 В_I.NТА..I.NTS..I.AEN..I.AAN..I.AON..I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 С_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 D_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 Е_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I......I......I......I
#А0 F_I......I......I......I......I......I......I......I......I
#А0 __I......I......I......I......I......I.IJP..I.RЕТ..I.HLT..I
#А0 -----------------------------------------------------------
#НОВСЦ #СГ0
#А0 #Б #Ц 5.23.ТИПЫ ОПЕРАНДОВ _МКБ-8601_ И ОПЕРАЦИИ С НИМИ #М
#А0 _
#А0 _________________Т_И_П_Ы____О_П_Е_Р_А_Н_Д_О_В
#А0 _
#А0 ОПЕРАЦИЯ:__Х_:__I_:__U_:_Х,У:_А,У:__L_:__Н_:__Q_:__В_:_F,N:_D_
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЗАПИСЬ__:АТХ_:ATI_:____:УТХ_:____:АТХ_:АТН_:ATQ_:АТВ_:ATF_:ATD
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЗАПИСЬ__:SТХ_:STI_:____:____:____:SТХ_:SТН_:STQ_:SТВ_:STF_:___
#А0 МАГАЗИН.:____:____:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЧТЕНИЕ__:ХТА_:IТА_:UТА_:ХТУ_:УТА_:ХТА_:НТА_:QТА_:ВТА_:FТА_:DТА
#А0 ________:____:____:UТУ_:____:____:____:____:____:____:NТА_:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЧТЕНИЕ__:XTS_:ITS_:UTS_:____:____:XTS_:HTS_:QTS_:BTS_:FTS_:___
#А0 МАГАЗИН.:____:____:____:____:____:____:____:____:____:NTS_:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 СЛОЖЕНИЕ:А+Х_:J+М_:А+U_:____:____:А+L_:А+Н_:____:____:____:А+D
#А0 ________:____:А+I_:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ВЫЧИТА-_:А-Х_:J-М_:А-U_:____:____:А-L_:А-Н_:____:____:____:А-D
#А0 НИЕ____.:____:А-I_:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ОБРАТНОЕ:Х-А_:I-А_:U-А_:____:____:L-А_:Н-А_:____:____:____:D-А
#А0 ВЫЧИТАН.:____:____:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ВЫЧИТАН.:АМХ_:____:____:____:____:____:____:____:____:____:___
#А0 МОДУЛЕЙ.:____:____:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ИЗМЕНЕН.:AVX_:____:____:____:____:____:____:____:____:____:___
#А0 ЗНАКА___:____:____:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ДЕЛЕНИЕ_:А/Х_:А/I_:А/U_:____:____:А/L_:А/Н_:____:____:____:А/D
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 УМНОЖЕН.:А*Х_:А*I_:А*U_:____:____:А*L_:А*Н_:____:____:____:А*D
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЛОГИЧ.__:ААХ_:AAI_:AAU_:УАХ_:ААУ_:ААХ_:ААН_:AAQ_:ААВ_:AAF_:___
#А0 УМНОЖЕН.:____:____:____:____:____:____:____:____:____:AAN_:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 СРАВНЕ-_:АЕХ_:AEI_:AEU_:УЕХ_:АЕУ_:АЕХ_:АЕН_:AEQ_:АЕВ_:AEF_:___
#А0 НИЕ_____:____:____:____:____:____:____:____:____:____:AEN_:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЛОГИЧ.__:АОХ_:AOI_:AOU_:УОХ_:АОУ_:АОХ_:АОН_:AOQ_:АОВ_:AOF_:___
#А0 СЛОЖЕНИЕ:____:____:____:____:____:____:____:____:____:AON_:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЦИКЛИЧ._:ARX_:____:____:____:____:ARX_:____:____:____:____:___
#А0 СЛОЖЕНИЕ:____:____:____:____:____:____:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 СБОРКА__:АРХ_:____:____:____:____:АРХ_:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 РАСБОРКА:AUX_:____:____:____:____:AUX_:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 ЧИСЛО_ЕД:АСХ_:____:ACU_:____:____:АСХ_:____:____:____:____:___
#А0 --------:----:----:----:----:----:----:----:----:----:----:---
#А0 НОМЕР_ЕД:ANX_:____:ANU_:____:____:ANX_:____:____:____:____:___
#А0 --------------------------------------------------------------
#НОВСЦ
#НА #А0 _ #Б
#Ц 6._ОПИСАНИЕ ПРОЦЕССОРА_-_ЭМУЛЯТОРА
#А0 #Ц НА МИКРОУРОВНЕ #М
#НА #НА #А0 #Б
#Ц 6.1. БЛОК МИКРОПРОГРАММНОГО УПРАВЛЕНИЯ #А0
#НА ЦЕНТРАЛЬНЫЙ
 ПРОЦЕССОР ПРЕДСТАВЛЯЕТ ИЗ СЕБЯ УСТРОЙСТВО С
 МИКРОПРОГРАММНЫМ УПРАВЛЕНИЕМ.
 В @Э@В@М С МИКРОПРОГРАММНЫМ ПРИНЦИПОМ УПРАВЛЕНИЯ МОЖНО РАЗЛИЧИТЬ
 ДВА УРОВНЯ: УРОВЕНЬ МИКРОМАШИНЫ (РЕГИСТРЫ, ПАМЯТЬ,
 АРИФМЕТИКО-ЛОГИЧЕСКОЕ УСТРОЙСТВО @А@Л@У ИЛИ МИКРОПРОЦЕССОР),
 ДОСТУПНЫЙ ТОЛЬКО ИЗ МИКРОПРОГРАММЫ, И УРОВЕНЬ ПОЛЬЗОВАТЕЛЯ.
#НА УРОВЕНЬ ПОЛЬЗОВАТЕЛЯ ОПРЕДЕЛЯЕТСЯ УРОВНЕМ МИКРОМАШИНЫ,
 В ЧАСТНОСТИ, СОДЕРЖИМЫМ ПАМЯТИ МИКРОКОМАНД, ЧТО В НЕКОТОРОМ
 СМЫСЛЕ МОЖЕТ БЫТЬ ПРОИЗВОЛЬНЫМ.
#НА В СОСТАВ УСТРОЙСТВА МИКРОПРОГРАММНОГО УПРАВЛЕНИЯ
 ВХОДЯТ ТАБЛИЧНАЯ ПАМЯТЬ ПРЕОБРАЗОВАТЕЛЯ
 НАЧАЛЬНОГО АДРЕСА @П@Н@А, ПАМЯТЬ МИКРОКОМАНД,
 СХЕМА УПРАВЛЕНИЯ АДРЕСОМ
 МИКРОПРОГРАММЫ (@С@У@А@М) И
 КОНВЕЙЕРНЫЙ РЕГИСТР.
 ПАМЯТЬ МИКРОКОМАНД ПРЕДНАЗНАЧЕНА ДЛЯ ХРАНЕНИЯ МИКРОПРОГРАММ,
 РЕАЛИЗУЮЩИХ НАБОР МАШИННЫХ КОМАНД УРОВНЯ ПОЛЬЗОВАТЕЛЯ.
 НАЧАЛЬНЫЙ АДРЕС МИКРОПРОГРАММЫ, СООТВЕТСТВУЮЩЕЙ
 КАКОЙ-ЛИБО КОМАНДЕ
 УРОВНЯ ПОЛЬЗОВАТЕЛЯ, НАХОДИТСЯ В @П@Н@А ПО АДРЕСУ,
 ОПРЕДЕЛЯЕМОМУ КОДОМ ЭТОЙ КОМАНДЫ.
 ИСКЛЮЧЕНИЕ СОСТАВЛЯЕТ МИКРОПРОГРАММА
 ВХОДА В ОБРАБОТКУ ПРЕРЫВАНИЙ,
 АДРЕС КОТОРОЙ ФИКСИРОВАН.
#НА ПАМЯТЬ МИКРОПРОГРАММ ОБЕСПЕЧИВАЕТ ОРГАНИЗАЦИЮ ПОСЛЕДОВАТЕЛЬНОСТИ
 МИКРОКОМАНД В МИКРОПРОГРАММЕ И УПРАВЛЯЕТ СООТВЕТСТВУЮЩИМ УСТРОЙСТВОМ,
 УСТАНАВЛИВАЯ НУЖНЫЕ ДЛЯ ЭТОГО АППАРАТНЫЕ СИГНАЛЫ.
 НАПРИМЕР, ОНИ ОПРЕДЕЛЯЮТ, КАКАЯ ИНФОРМАЦИЯ ДОЛЖНА БЫТЬ ПОДАНА
 НА ВХОДЫ @А@Л@У, КУДА ДОЛЖНА ПОДАВАТЬСЯ ИНФОРМАЦИЯ С ЕГО ВЫХОДОВ
 И Т.&Д.
#НОВСЦ
#А0 #Ц @Б@И@С УПРАВЛЕНИЯ ПОСЛЕДОВАТЕЛЬНОСТЬЮ ВЫПОЛНЕНИЯ
#А0 #Ц ---------------------------------------------
#А0 #Ц МИКРОКОМАНД (К1804ВУ4)
#А0 #Ц ----------------------
#НА #Б БИС @К1804ВУ4 (СУАМ) #М
 - УСТРОЙСТВО УПРАВЛЕНИЯ ПОСЛЕДОВАТЕЛЬНОСТЬЮ
 МИКРОКОМАНД,
 ПОЗВОЛЯЮЩЕЕ АДРЕСОВАТЬ МИКРОПРОГРАММУ РАЗМЕРОМ ДО 4К
 СЛОВ. УСТРОЙСТВО УПРАВЛЕНИЯ ИМЕЕТ МУЛЬТИПЛЕКСОР С
 ЧЕТЫРЬМЯ ВХОДАМИ, ИСПОЛЬЗУЕМЫЙ ДЛЯ
 ВЫБОРА В КАЧЕСТВЕ ИСТОЧНИКА АДРЕСА СЛЕДУЮЩЕЙ
 МИКРОКОМАНДЫ РЕГИСТР/СЧЕТЧИК @R@C, ВХОД ПРЯМОГО АДРЕСА @D,
 СЧЕТЧИК МИКРОКОМАНД @Р@С ИЛИ СТЕК.
#НА #Ц СТРУКТУРНАЯ СХЕМА УСТРОЙСТВА:
#НА
#А0 ______________I_D__I_/RLD________________---->
#А0 ______--------I____I_____________________I_FULL
#А0 ______I_______V____V_____________________I
#А0 ______I___-------------_________-------------------
#А0 ______I___I__РЕГИСТР/_I_________I_УКАЗАТЕЛЬ_СТЕКА_I
#А0 ___---I-->I__СЧЕТЧИК__I_________-------------------
#А0 ___I__I___-------------_________________I
#А0 ___I__I______I__________________-----------------
#А0 ___I__I______I___---------------I____С_Т_Е_К____I
#А0 ___I__I______I___I______________-----------------
#А0 ___I__----___I___I___-------------------I
#А0 ___I_____I___I___I___I__________-----------------
#А0 ___I_____I___I___I___I__________I____СЧЕТЧИК____I
#А0 ___I_____V___V___V___V__________I__МИКРОКОМАНД__I
#А0 ___I__-------------------_______-----------------
#А0 ___I__I__D___R___F__РС__I_______________I
#А0 ___I__I_________________I_______----------------
#А0 ___I__I__МУЛЬТИПЛЕКСОР__I_______I__УСТРОЙСТВО__I<--
#А0 ___I__I___СЛЕДУЮЩЕГО____I_______I__ПРИРАЩЕНИЯ__I_CI
#А0 ___I__I_____АДРЕСА______I_______----------------
#А0 ___I__-------------------_______________I
#А0 ___I_____I____________I_________________I
#А0 ___I__--------------__-------------------
#А0 ___-->I____________I____________I
#А0 /СС-->I_УПРАВЛЕНИЕ_I____________V_У0-У11
#А0 CCEN->I____________I<------
#А0 __Т-->I------------I__I0-I3
#А0 _________I___I___I
#А0 _________I___I___I
#А0 _________V___V___V
#А0 ________/РЕ_/МЕ_/VЕ
#НА #Б СЧЕТЧИК МИКРОКОМАНД (РС) #М ИСПОЛЬЗУЕТСЯ
 ОДНИМ ИЗ ДВУХ СПОСОБОВ. КОГДА СИГНАЛ @C@I ИМЕЕТ
 ВЫСОКИЙ УРОВЕНЬ, В @Р@С ВО ВРЕМЯ СЛЕДУЮЩЕГО ТАКТА
 ЗАГРУЖАЕТСЯ ПЕРЕДАВАЕМЫЙ НА ВЫХОД @У АДРЕС,
 УВЕЛИЧЕННЫЙ НА 1 (@У+1_=>_@Р@С).
 ТАКИМ ОБРАЗОМ ОБЕСПЕЧИВАЕТСЯ ПОСЛЕДОВАТЕЛЬНОЕ
 ВЫПОЛНЕНИЕ КОМАНД.
 ЕСЛИ @C@I ИМЕЕТ НИЗКИЙ УРОВЕНЬ, ТО @Р@С ПЕРЕЗАГРУЖАЕТСЯ
 ТЕМ ЖЕ САМЫМ АДРЕСОМ (@У_=>_@Р@С).
 СЛЕДОВАТЕЛЬНО, ОДНА И ТА ЖЕ КОМАНДА
 МОЖЕТ ВЫПОЛНЯТЬСЯ ЛЮБОЕ КОЛИЧЕСВО РАЗ.
#НА ЗАПИСЬ В #Б РЕГИСТР/СЧЕТЧИК RС #М ОСУЩЕСТВЛЯЕТСЯ
 ПРИ ВЫДАЧЕ СИГНАЛА РАЗРЕШЕНИЯ ЗАГРУЗКИ (/@R@L@D),
 А ТАКЖЕ ПРИ ВЫПОЛНЕНИИ НЕКОТОРЫХ КОМАНД.
 ВХОД ПРЯМОГО АДРЕСА D ЯВЛЯЕТСЯ
 ИСТОЧНИКОМ ДАННЫХ, ЗАГРУЖАЕМЫХ В РЕГИСТР/СЧЕТЧИК,
 А ВЫХОД РЕГИСТРА ПОДКЛЮЧЕН К МУЛЬТИПЛЕКСОРУ
 И МОЖЕТ БЫТЬ ИСПОЛЬЗОВАН В КАЧЕСТВЕ ИСТОЧНИКА АДРЕСА
 СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ.
 РЕГИСТР/СЧЕТЧИК ПРИ ВЫПОЛНЕНИИ НЕКОТОРЫХ
 ОПЕРАЦИЙ РАБОТАЕТ КАК СЧЕТЧИК,
 ВЫПОЛНЯЮЩИЙ ОТРИЦАТЕЛЬНОЕ ПРИРАЩЕНИЕ,
 ПРИЧЕМ ПОЛУЧЕННОЕ В РЕЗУЛЬТАТЕ ТАКОГО
 ПРИРАЩЕНИЯ ЗНАЧЕНИЕ 0 ИСПОЛЬЗУЕТСЯ КАК
 ПРИЗНАК ПЕРЕХОДА.
#НА #Б ИСТОЧНИК ПРЯМОГО АДРЕА D #М ИСПОЛЬЗУЕТСЯ
 ДЛЯ ВЫПОЛНЕНИЯ ПЕРЕХОДОВ В МИКРОПРОГРАММЕ
 ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ ВНЕШНЕГО ИСТОЧНИКА.
#НА #Б СТЕК #М  ОБЬЕМОМ 5 СЛОВ ПРЕДНАЗНАЧЕН
 ДЛЯ ХРАНЕНИЯ АДРЕСА ВОЗВРАТА ПРИ ВЫПОЛНЕНИИ В МИКРОПРОГРАММЕ
 ПОДПРОГРАММ И ЦИКЛОВ.
 ПРИ ВЫПОЛНЕНИИ ОДНИХ ОПЕРАЦИЙ ПРОИСХОДИТ
 ЗАГРУЗКА ИНФОРМАЦИИ В СТЕК С УВЕЛИЧЕНИЕМ
 НА 1 УКАЗАТАЛЯ СТЕКА (PUSH), ПРИ ВЫПОЛНЕНИИ ДРУГИХ -
 ИЗВЛЕЧЕНИЕ (РОР) С УМЕНЬШЕНИЕМ НА 1 УКАЗАТЕЛЯ СТЕКА.
 ПРИ ВЫПОЛНЕНИИ ОПЕРАЦИИ НАЧАЛЬНОЙ УСТАНОВКИ
 ГЛУБИНА СТЕКА (УКАЗАТЕЛЬ) СТАНОВИТСЯ РАВНОЙ НУЛЮ.
#НА #ВС6 _
#А0 #Ц ИСПОЛЬЗОВАНИЕ СИГНАЛОВ:
#НА #Б БИС СУАМ #М ВЫРАБАТЫВАЕТ СИГНАЛЫ
 #Б /VЕ, /МЕ, /РЕ, #М КОТОРЫЕ ИСПОЛЬЗУЮТСЯ
 ДЛЯ ВЫБОРКИ ВНЕШНИХ ИСТОЧНИКОВ,
 ПОДКЛЮЧЕННЫХ К ШИНЕ @D:
#А0 -_ПРЕОБРАЗОВАТЕЛЬ НАЧАЛЬНОГО АДРЕСА КОМАНД #Б RMOD,WMOD #М
 И ОБРАЩЕНИЙ @П@П
 (ПРИ НАЛИЧИИ ПРИЗНАКА @M@O@D, СИГНАЛ /@М@Е);
#А0 -_ДОПОЛНИТЕЛЬНЫЙ ПРЕОБРАЗОВАТЕЛЬ АДРЕСА, ЗАДАЮЩИЙ АДРЕСА
 ВЕКТОРОВ ПРЕРЫВАНИЯ.
 А ТАКЖЕ ЗНАКОВ СОМНОЖИТЕЛЕЙ
 ДЛЯ КОРРЕКЦИИ ПОИЗВЕДЕНИЯ (@V@E).
 (СИГНАЛ /@Р@Е НЕ ИСПОЛЬЗУЕТСЯ).
#НА КАЖДОЙ МИКРОКОМАНДОЙ ВЫРАБАТЫВАЕТСЯ ТОЛЬКО
 ОДИН СИГНАЛ РАЗРЕШЕНИЯ ДЛЯ ВНЕШНЕГО ИСТОЧНИКА.
#НА СИГНАЛЫ #Б I0-I3 #М ПОСТУПАЮТ ИЗ МИКРОПРОГРАММЫ;
 /@R@L@D - С ДЕШИФРАТОРА ТРИГГЕРОВ ПРИЗНАКОВ;
 /@С@С - С МУЛЬТИПЛЕКСОРА УСЛОВИЙ; ВЫХОДЫ
 @У0-@У11 ПЕРЕДАЮТ ПОЛУЧЕННЫЙ АДРЕС МИКРОКОМАНДЫ;
 НА ВХОД @C@I В ЗАВИСИМОСТИ ОТ
 36 РАЗРЯДА @М@П ПОДАЕТСЯ ЛИБО "1",
 ЛИБО ПРЯМОЙ ИЛИ ИНВЕРСНЫЙ ВЫХОД
 С МУЛЬТИПЛЕКСОРА УСЛОВИЙ, ЛИБО "0"
 В МОМЕНТ ВХОДА В МИКРОПРОГРАММУ ОБРАБОТКИ ПРЕРЫВАНИЙ;
 СИГНАЛ /@C@C@E@N ВСЕГДА РАВЕН "0".
#НА #ВС6 _
#А0 #Ц КОДЫ ОПЕРАЦИЙ @С@У@А@М
#А0 #Ц ------------------
#ПЕРН 0_-_ПЕРЕХОД ПО НУЛЕВОМУ АДРЕСУ ИЛИ
 НАЧАЛЬНАЯ  УСТАНОВКА (@J@Z).
#А0 @У0-@У11 И УКАЗАТЕЛЬ СТЕКА УСТАНАВЛИВАЮТСЯ В 0.
#ПЕРН 1_-_УСЛОВНЫЙ ПЕРЕХОД К ПОДПРОГРАММЕ
 ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ КОНВЕЙЕРНОГО РЕГИСТРА (@C@J@S).
#А0 ЕСЛИ УСЛОВИЕ ВЫПОЛНЯЕТСЯ, АДРЕС ВОЗВРАТА (@Р@С+1)
 ЗАГРУЖАЕТСЯ В СТЕК И ПРОИСХОДИТ ПЕРЕХОД К
 ПОДПРОГРАММЕ ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ
 КОНВЕЙЕРНОГО РЕГИСТРА (АДРЕС ПЕРЕХОДА
 В МИКРОКОМАНДЕ).
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 2_-_ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ
 ДЕШИФРИРУЮЩЕГО @П@З@У (@J@M@A@P).
#А0 ПРОИЗВОДИТСЯ ВЫДАЧА СИГНАЛА РАЗРЕШЕНИЯ ВЫБОРКИ /@М@Е,
 И АДРЕС СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ ВЫБИРАЕТСЯ ИЗ ДЕШИФРИРУЮЩЕГО @П@З@У.
#ПЕРН 3_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ
 КОНВЕЙЕРНОГО РЕГИСТРА (@C@J@P).
#А0 ПРИ ВЫПОЛНЕНИИ УСЛОВИЯ ПРОИЗВОДИТСЯ ПЕРЕДАЧА УПРАВЛЕНИЯ
 ПО АДРЕСУ, СОДЕРЖАЩЕМУСЯ В КОНВЕЙЕРНОМ РЕГИСТРЕ.
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 4_-_ЗАГРУЗКА СТЕКА И УСЛОВНАЯ ЗАГРУЗКА СЧЕТЧИКА (@P@U@S@H).
#А0 ПРОИЗВОДИТСЯ ЗАГРУЗКА В СТЕК АДРЕСА СЛЕДУЮЩЕЙ
 МИКРОКОМАНДЫ (@Р@С+1),
 ПРИ ВЫПОЛНЕНИИ УСЛОВИЯ - В РЕГИСТР/СЧЕТЧИК ЗАГРУЖАЕТСЯ
 ВЕЛИЧИНА, НАХОДЯЩАЯСЯ В ПОЛЕ АДРЕСА ПЕРЕХОДА КОНВЕЙЕРНОГО
 РЕГИСТРА. ЕСЛИ УСЛОВИЕ НЕ ВЫПОЛНЕНО, ЗАГРУЗКА СЧЕТЧИКА НЕ
 ПРОИЗВОДИТСЯ. ЗАТЕМ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ
 МИКРОКОМАНДА.
#ПЕРН 5_-_УСЛОВНЫЙ ПЕРЕХОД К ПОДПРОГРАММЕ ПО АДРЕСУ, ВЫБИРАЕМОМУ
 ИЗ РЕГИСТРА/СЧЕТЧИКА ИЛИ
 ИЗ КОНВЕЙЕРНОГО РЕГИСТРА (@J@S@R@P).
#А0 ПРОИЗВОДИТСЯ ЗАГРУЗКА СТЕКА ВЕЛИЧИНОЙ @Р@С+1 И
 ИНИЦИИРУЕТСЯ ОДНА ИЗ ДВУХ ПОДПРОГРАММ: ЕСЛИ
 УСЛОВИЕ ВЫПОЛНЯЕТСЯ, АДРЕС СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ ОПРЕДЕЛЯЕТСЯ
 СОДЕРЖИМЫМ КОНВЕЙЕРНОГО РЕГИСТРА, ИНАЧЕ -
 СОДЕРЖИМЫМ РЕГИСТРА/СЧЕТЧИКА.
#ПЕРН 6_-_УСЛОВНЫЙ ПЕРЕХОД ПО ВЕКТОРНОМУ АДРЕСУ (@C@J@V).
#А0 ЕСЛИ УСЛОВИЕ ВЫПОЛНЯЕТСЯ, ПРОИЗВОДИТСЯ ВЫДАЧА
 СИГНАЛА РАЗРЕШЕНИЯ ВЫБОРКИ /@V@E И ПРОИЗВОДИТСЯ ПЕРЕХОД ПО ВЕКТОРНОМУ
 АДРЕСУ. ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 7_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ
 ИЗ РЕГИСТРА/СЧЕТЧИКА ИЛИ КОНВЕЙЕРНОГО РЕГИСТРА (@J@R@P).
#А0 ЕСЛИ УСЛОВИЕ ВЫПОЛНЯЕТСЯ, АДРЕС СЛЕДУЮЩЕЙ
 МИКРОКОМАНДЫ ОПРЕДЕЛЯЕТСЯ СОДЕРЖИМЫМ КОНВЕЙЕРНОГО РЕГИСТРА,
 ИНАЧЕ - СОДЕРЖИМЫМ РЕГИСТРА/СЧЕТЧИКА.
#ПЕРН 8_-_ПОВТОРЕНИЕ ЦИКЛА, ЕСЛИ СЧЕТЧИК НЕ РАВЕН 0 (@R@F@C@T).
#А0 ЕСЛИ СОДЕРЖИМОЕ РЕГИСТРА/СЧЕТЧИКА ОТЛИЧНО
 ОТ 0, ЕГО ЗНАЧЕНИЕ УМЕНЬШАЕТСЯ НА 1, И АДРЕС СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ
 ИЗВЛЕКАЕТСЯ ИЗ СТЕКА. ЕСЛИ СЧЕТЧИК РАВЕН 0, ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ
 МИКРОКОМАНДА, А УКАЗАТЕЛЬ СТЕКА УМЕНЬШАЕТСЯ НА 1.
 ПЕРЕД ВЫПОЛНЕНИЕМ ЭТОЙ МИКРОКОМАНДЫ В
 РЕГИСТР/СЧЕТЧИК ДОЛЖНО БЫТЬ ЗАНЕСЕНО ЧИСЛО
 ПОВТОРЕНИЙ МИКРОКОМАНД В ЦИКЛЕ, А В СТЕК -
 АДРЕС НАЧАЛА ЦИКЛА.
#ПЕРН 9_-_ПОВТОРЕНИЕ ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ
 КОНВЕЙЕРНОГО РЕГИСТРА, ЕСЛИ СЧЕТЧИК НЕ РАВЕН 0 (@R@P@C@T).
#А0 ЕСЛИ СОДЕРЖИМОЕ РЕГИСТРА/СЧЕТЧИКА НЕ РАВНО 0,
 ЕГО ЗНАЧЕНИЕ УМЕНЬШАЕТСЯ НА 1, И ПРОИЗВОДИТСЯ ПЕРЕДАЧА
 УПРАВЛЕНИЯ ПО АДРЕСУ, СОДЕРЖАЩЕМУСЯ В КОНВЕЙЕРНОМ РЕГИСТРЕ.
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
 ПЕРЕД ВЫПОЛНЕНИЕМ ЭТОЙ МИКРОКОМАНДЫ (@R@P@C@T) В
 РЕГИСТР/СЧЕТЧИК ДОЛЖНО БЫТЬ ЗАНЕСЕНО
 ЧИСЛО ПОВТОРЕНИЙ ЦИКЛА.
#ПЕРН 10_-_УСЛОВНЫЙ ВОЗВРАТ ИЗ ПОДПРОГРАММЫ (@C@R@T@N).
#А0 ЕСЛИ УСЛОВИЕ ВЫПОЛНЯЕТСЯ, ПРОИЗВОДИТСЯ ВОЗВРАТ
 ИЗ ПОДПРОГРАММЫ ПО АДРЕСУ,ВЫБИРАЕМОМУ ИЗ СТЕКА.
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 11_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ
 ИЗ КОНВЕЙЕРНОГО РЕГИСТРА, И ИЗВЛЕЧЕНИЕ ИЗ СТЕКА (@C@J@P@P).
#А0 ЕСЛИ УСЛОВИЕ ВЫПОЛНЯЕТСЯ, ТО ПРОИЗВОДИТСЯ ПЕРЕХОД ПО
 АДРЕСУ МИКРОКОМАНДЫ И ОПЕРАЦИЯ ИЗВЛЕЧЕНИЯ ИЗ СТЕКА.
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 12_-_ЗАГРУЗКА СЧЕТЧИКА И ПОСЛЕДОВАТЕЛЬНА ВЫБОРКА (@L@D@C@T).
#А0 ПРОИЗВОДИТСЯ ЗАГРУЗКА РЕГИСТРА/СЧЕТЧИКА СОДЕРЖИМЫМ ПОЛЯ
 АДРЕСА МИКРОКОМАНДЫ И ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ МИКРОКОМАНДА.
#ПЕРН 13_-_ПРОВЕРКА УСЛОВИЯ ОКОНЧАНИЯ ЦИКЛА (@L@O@O@P).
#А0 ЕСЛИ УСЛОВИЕ НЕ ВЫПОЛНЕНО, ПРОИЗВОДИТСЯ
 ПЕРЕХОД ПО НАХОДЯЩЕМУСЯ В СТЕКЕ АДРЕСУ,
 ИНАЧЕ ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ ПО ПОРЯДКУ МИКРОКОМАНДА
 И ПРОИЗВОДИТСЯ ОПЕРАЦИЯ ИЗВЛЕЧЕНИЯ
 ИЗ СТЕКА.
#ПЕРН 14_-_ПОСЛЕДОВАТЕЛЬНАЯ ВЫБОРКА (@C@O@N@T).
#А0 ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ ПО ПОРЯДКУ МИКРОКОМАНДА.
#ПЕРН 15_-_ПЕРЕХОД ПО ОДНОМУ ИЗ ТРЕХ АДРЕСОВ (@T@W@B).
#А0 ЕСЛИ УСЛОВИЕ НЕ ЗАДАНО, ПРОИЗВОДИТСЯ ОТРИЦАТЕЛЬНОЕ ПРИРАЩЕНИЕ
 СЧЕТЧИКА И ПЕРЕХОД ПО АДРЕСУ СТЕКА, ПОКА СЧЕТЧИК НЕ РАВЕН 0,
 ЗАТЕМ АДРЕС СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ ВЫБИРАЕТСЯ ИЗ
 КОНВЕЙЕРНОГО РЕГИСТРА.
 ЕСЛИ УСЛОВИЕ ЗАДАНО, ВЫПОЛНЯЕТСЯ СЛЕДУЮЩАЯ ПО ПОРЯДКУ МИКРОКОМАНДА.
 ПРИ ВЫХОДЕ ИЗ ЦИКЛА В ОБОИХ СЛУЧАЯХ УКАЗАТЕЛЬ
 СТЕКА УМЕНЬШАЕТСЯ НА 1.
 ПЕРЕД ВЫПОЛНЕНИЕМ МИКРОКОМАНДЫ @T@W@B
 В РЕГИСТР/СЧЕТЧИК ДОЛЖНО БЫТЬ ЗАНЕСЕНО ЧИСЛО
 ПОВТОРЕНИЙ ЦИКЛА, А В СТЕК - АДРЕС НАЧАЛА ЦИКЛА.
#ПЕРН УСЛОВИЕ @Н@Е ЗАДАНО:
#А0 СЧ.#Б НЕ РАВЕН #М 0: СЧ.= СЧ.- 1, ПЕРЕХОД ПО АДРЕСУ СТЕКА;
#А0 СЧ.#Б РАВЕН #М 0: ПЕРЕХОД ПО АДРЕСУ ИЗ @К@Р.
#ПЕРН УСЛОВИЕ ЗАДАНО:
#А0 ВЫПОЛНЯЕТСЯ СЛЕДУЮЩИЯ КОМАНДА.
#НОВСЦ
#Б #Ц 6.2. ФОРМАТ МИКРОКОМАНДЫ____ #М
#НА _
#А0 --------------------------------------------------------------
#А0 __ПОЛЕ__!__КОП__!АДРЕС:_СЛЕД._!ВЫБОР!ВЫХ!ФУНК-!32/!___АДРЕС
#А0 _МИКРО-_!_СУАМ__!МИКРОКОМАНДЫ_!_ПНА_!_У_!_ЦИЯ_!64Р!__РЗУ_МПС
#А0 КОМАНДЫ_!-------!___----------!-----!МПС!_МПС_!МПС!__В__!__А
#А0 ________!I3_-_I0!___!ПЗУ_КОНСТ!В___А!___!I8-I0!___!_____!
#А0 --------!-------!---!---------!-----!---!-----!---!-----!-----
#А0 _РАЗРЯД_!112_109!108!107____97!96_95!_94!93_85!_84!83_80!79_76
#А0 --------!-------!-------------!-----!---!-----!---!-----!-----
#А0 _N_ТАБЛ.!___1___!_____________!__2__!___!3,4,5!___!__6__!__6
#А0 --------!-------!-------------!-----!---!-----!---!-----!-----
#А0 МНЕМОКОД!__SQI__!______А______!_МАР_!ALU!_FUNC!_Н_!__RВ_!__RА
#А0 --------------------------------------------------------------
#НА _
#А0 --------------------------------------------------------------
#А0 _ФУНК-_!ПР.!ИСТ.N_!_НОМЕР_!ИСТОЧ-!ПРИЕМ-!_КОП_!_КОП_!ЗАП!_ПРО-
#А0 __ЦИЯ__!R/W!МОДИФ.!МОДИФИК!_НИК__!_НИК__!СДВИ-!АРБИТ!_В_!ПУСК_
#А0 _СУСС__!I/О!ИЛИ_ПАР.СДВИГА!ШИНЫ_D!ШИНЫ_У!_ГА__!_РА__!РЕГ!_ПИА_
#А0 -------!---!--------------!------!------!-----!-----!---!-----
#А0 I12-I10!___!В____А!D_____А!D____А!D____А!I1_I0!D___А!___!_____
#А0 -------!---!------!-------!------!------!-----!-----!---!-----
#А0 75___64!_63!62__61!60___56!55__52!51__48!47_46!45_42!_41!__40
#А0 -------!---!------!-------!------!------!-----!-----!---!-----
#А0 ___7___!___!____8,9/10____!__11__!__12__!__13_!__14_!___!_____
#А0 -------!---!-----PSHF-----!------!------!-----!-----!---!-----
#А0 __STF__!MOD!_MNSA_!_MODNM_!_DSRC_!_YDST_!_SHF_!_ARBI!RLD!LЕТС
#А0 --------------------------------------------------------------
#НА _
#А0 --------------------------------------------------------------
#А0 _УПР.!УПР!ИНВ!ИНВ!___!_ЗАПИСЬ_В!УПР._ОЗУ!КАН!ЗАП!АДРЕС!КАН!ЗАП
#А0 ДЛИТ.!_CI!_CI!УСЛ!ПМИ!_РГ.СУСС:!МОДИФИК:!_В_!_ПО!КАН.В!_А_!_ПО
#А0 ТАКТА!_SQ!_SQ!___!___!_М__!_N__!_CS!_WR_!БОИ!_В_!_БОИ_!БОИ!_А_
#А0 -----!---!---!---!---!----!----!---!----!---!---!-----!---!---
#А0 С___А!___!___!___!___!____!____!___!____!___!___!В___А!___!___
#А0 -----!---!---!---!---!----!----!---!----!---!---!-----!---!---
#А0 39_37!_36!_35!_34!_33!_32_!_31_!_30!_29_!_28!_27!26_25!_24!_23
#А0 -----!---!---!---!---!----!----!---!----!---!---!-----!---!---
#А0 __15_!___!___!___!___!____!____!___!____!___!___!__16_!___!___
#А0 -----!---!---!---!---!----!----!---!----!---!---!-----!---!---
#А0 CYSTR!SCI!ICI!IСС!ISE!_СЕМ!_CEN!CSM!_WЕМ!ЕСВ!WRB!_BRA_!ЕСА!WRA
#А0 --------------------------------------------------------------
#НА _
#А0 --------------------------------------------------------------
#А0 АДРЕС!ИСТОЧН!ЗАП._В!ИСТОЧН!ЗАП._В!ОЗУ_ПП!УСТАН/СБРОС_!УСЛО!МОД
#А0 КАН.А!ПРИЕМН!ИСТ/ПР!ПРИЕМН!ИСТ/ПР!_ИЛИ__!ТГ.ПРИЗН.ИЛИ!_ВИЕ!ИЛИ
#А0 _БОИ_!ШИНЫ У!ШИНЫ_У!ШИНЫ_D!ШИНЫ_D!ПРИЗН.!АДРЕС_ОЗУ_ПП!____!СДВ
#А0 -----!------!------!------!------!------!------------!----!---
#А0 В___А!С____А!______!С____А!______!______!Е__________А!Е__А!
#А0 -----!------!------!------!------!------!------------!----!---
#А0 22_21!20__18!__17__!16__14!__13__!__12__!11_________7!6__2!_1
#А0 -----!------!------!------!------!------!------------!----!---
#А0 __17_!__18__!______!__19__!______!______!___20/21____!_22_!
#А0 -----!------!------!------!------!------!------------!----!---
#А0 _ARA_!_YDEV_!_WRY__!_DDEV_!_WRD__!_IОМР_!FFCNT/MPADR_!COND!MPS
#А0 --------------------------------------------------------------
#Б #ВС10 _
#А0 #Ц 6.3. ТАБЛИЦЫ ПОЛЕЙ МИКРОПРОГРАММНОГО СЛОВА
#А0 #Ц И ИХ НАЗНАЧЕНИЯ
#НА #НА #ВС7 _
#Б #А0 #Ц ТАБЛИЦА 1
#А0 #Ц К_О_П___СУАМ
#А0 #Ц SEQUENCER INSTRUCTION (SQI)
#М #НА _
#А0 I3_I2_I1_I0
#А0 0__0__0__0_-_0_-_ПЕРЕХОД ПО 0-ОМУ АДРЕСУ (@J@Z).
#А0 0__0__0__1_-_1_-_УСЛОВНЫЙ ПЕРЕХОД К ПОДПРОГРАММЕ ПО
#А17 АДРЕСУ, ВЫБИРАЕМОМУ ИЗ КОНВЕЙЕРНОГО
#А17 РЕГИСТРА (@C@J@S) *).
#А0 0__0__1__0_-_2_-_ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ ИЗ
#А17 ДЕШИФРИРУЮЩЕГО @П@П@З@У (@J@M@A@P).
#А0 0__0__1__1_-_3_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ
#А17 ИЗ КОНВЕЙЕРНОГО РЕГИСТРА (@C@J@P).
#А0 0__1__0__0_-_4_-_ЗАГРУЗКА СТЕКА И УСЛОВНАЯ ЗАГРУЗКА
#А17 СЧЕТЧИКА (@P@U@S@H).
#А0 0__1__0__1_-_5_-_УСЛОВНЫЙ ПЕРЕХОД К ПОДПРОГРАММЕ ПО
#А17 АДРЕСУ, ВЫБИРАЕМОМУ ИЗ РЕГИСТРА/СЧЕТЧИКА
#А17 ИЛИ ИЗ КОНВЕЙЕРНОГО РЕГИСТРА (@J@S@R@P).
#А0 0__1__1__0_-_6_-_УСЛОВНЫЙ ПЕРЕХОД ПО ВЕКТОРНОМУ
#А17 АДРЕСУ (@C@J@V).
#А0 0__1__1__1_-_7_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ,
#А17 ВЫБИРАЕМОМУ ИЗ РЕГИСТРА/СЧЕТЧИКА ИЛИ ИЗ
#А17 КОНВЕЙЕРНОГО РЕГИСТРА (@J@R@P).
#А0 1__0__0__0_-_8_-_ПОВТОРЕНИЕ ЦИКЛА, ЕСЛИ СЧЕТЧИК
#А17 НЕ РАВЕН 0 (@R@F@C@T).
#А0 1__0__0__1_-_9_-_ПОВТОРЕНИЕ ПО АДРЕСУ, ВЫБИРАЕМОМУ
#А17 ИЗ КОНВЕЙЕРНОГО РЕГИСТРА, ЕСЛИ СЧЕТЧИК
#А17 НЕ РАВЕН 0 (@R@P@C@T).
#А0 1__0__1__0_-_10_-_УСЛОВНЫЙ ВОЗВРАТ ИЗ ПОДПРОГРАММЫ (@C@R@T@N).
#А0 1__0__1__1_-_11_-_УСЛОВНЫЙ ПЕРЕХОД ПО АДРЕСУ, ВЫБИРАЕМОМУ
#А17 ИЗ КОНВЕЙЕРНОГО РЕГИСТРА, И ИЗВЛЕЧЕНИЕ
#А17 ИЗ СТЕКА (@C@J@P@P).
#А0 1__1__0__0_-_12_-_ЗАГРУЗКА СЧЕТЧИКА И ПОСЛЕДОВАТЕЛЬНАЯ
#А17 ВЫБОРКА (@L@D@C@T).
#А0 1__1__0__1_-_13_-_ПРОВЕРКА УСЛОВИЯ ОКОНЧАНИЯ ЦИКЛА (@L@O@O@P).
#А0 1__1__1__0_-_14_-_ПОСЛЕДОВАТЕЛЬНАЯ ВЫБОРКА (@C@O@N@T).
#А0 1__1__1__1_-_15_-_ПЕРЕХОД ПО ОДНОМУ ИЗ ТРЕХ АДРЕСОВ (@T@W@B).
#НА *).ВМЕСТО КОНВЕЙЕРНОГО РЕГИСТРА МОЖЕТ ИСПОЛЬЗОВАТЬСЯ
 ДРУГОЙ ИСТОЧНИК АДРЕСА НА ВХОД @D @С@У@А@М (СМ. ТАБЛ.2).
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 2
#А0 #Ц ВЫБОР ИСТОЧНИКА АДРЕСА НА ВХОД__D___С_У_А_М
#А0 #Ц (МАР)
#НА #М
#А0 В_А
#А0 0_0_-_КОНВЕЙЕРНЫЙ РЕГИСТР (СИГНАЛ @Р@Е)
#А0 0_1_-_@П@Н@А @К@О@П ОСНОВНОГО ИЛИ ДОПОЛНИТЕЛЬНОГО ФОРМАТА
#А0 ______В ЗАВИСИМОСТИ ОТ @К@О@П ОСНОВНОГО ФОРМАТА (3F)
#А0 1_0_-_@П@Н@А ГРУПП ИЗ @Р@Р, "СЛЕД0", "СЛЕД1"
#А0 1_1_-_НЕ ИСПОЛЬЗУЕТСЯ
#А0 _ #Б
#А3 /МЕ СУАМ - ПНА #М ЧТЕНИЯ/ЗАПИСИ РЕГИСТРОВ И ПАМЯТИ ПО
 ОБРАЩЕНИЮ @П@П И КОМАНДАМИ #Б RMOD, WMOD.
#А3 /VЕ СУАМ - ПНА #М ПРЕРЫВАНИЙ.
#А0 _
#А0 D00_-_НАЧАЛЬНЫЙ АДРЕС @П@Н@А ЧТ/ЗП РЕГИСТРОВ И ПАМЯТИ
#А0 Е00_-_НАЧАЛЬНЫЙ АДРЕС @П@Н@А ГРУПП
#А0 F00_-_НАЧАЛЬНЫЙ АДРЕС @П@Н@А ПРЕРЫВАНИЙ
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 3
#А0 #Ц ПРИЕМНИКИ РЕЗУЛЬТАТА___А_Л_У___М_П_С
#А0 #Ц ALU_DESTINATION_(ALUD)
#НА #М _
#А0 I8_I7_I6_________СДВИГ___ЗАГРУЗКА___СДВИГ___ЗАГРУЗКА____У
#А0 0__0__0__-_0_______-________-_________-______F_->_Q_____F
#А0 0__0__1__-_1_______-________-_________-_________-_______F
#А0 0__1__0__-_2_______-______F_->_В______-_________-_______А
#А0 0__1__1__-_3_______-______F_->_В______-_________-_______F
#А0 1__0__0__-_4____ВПРАВО__F/2_->_В___ВПРАВО___Q/2_->_Q____F
#А0 1__0__1__-_5_____-_"_-__F/2_->_В______-_________-_______F
#А0 1__1__0__-_6_____ВЛЕВО___2F_->_В____ВЛЕВО____2Q_->_Q____F
#А0 1__1__1__-_7_____-_"_-___2F_->_В______-_________-_______F
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 4
#А0 #Ц КОДЫ ОПЕРАЦИЙ___А_Л_У___М_П_С
#А0 #Ц FUNCTION (FUNC)
#НА #М _
#А0 I5_I4_I3___________ОПЕРАЦИИ
#А0 0__0__0__-__0____R_+_S_+_С0
#А0 0__0__1__-__1____S_-_R_-_1_+_С0
#А0 0__1__0__-__2____R_-_S_-_1_+_С0
#А0 0__1__1__-__3____R.OR.S
#А0 1__0__0__-__4____R.AND.S
#А0 1__0__1__-__5____(.NОТ.R).AND.S
#А0 1__1__0__-__6____R.EOR.S
#А0 1__1__1__-__7____.NОТ.(R.EOR.S)
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 5
#А0 #Ц ИСТОЧНИКИ ОПЕРАНДОВ___А_Л_У___М_П_С
#А0 #Ц ALU_SOURCE (ALUS)
#НА #М _
#А0 I2_I1_I0______@R___@S
#А0 0__0__0_-_0___А___Q
#А0 0__0__1_-_1___А___В
#А0 0__1__0_-_2___0___Q
#А0 0__1__1_-_3___0___В
#А0 1__0__0_-_4___0___А
#А0 1__0__1_-_5___D___А
#А0 1__1__0_-_6___D___Q
#А0 1__1__1_-_7___D___0
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 6
#А0 #Ц АДРЕСА РЕГИСТРОВ__КАНАЛОВ__А_И_В__МПС
#А0 #Ц RА__И__RВ
#НА #М _
#А0 D__С__В__А
#А0 Х__Х__Х__Х__-__НОМЕР РЕГИСТРА @М@П@С, ИСПОЛЬЗУЕМОГО
#А0 _______________В МИКРОПРОГРАММЕ
#НА #Б #ВС10 _
#А0 #Ц ТАБЛИЦА 7
#А0 #Ц КОДЫ ОПЕРАЦИЙ СУСС
#А0 #Ц STATUS FUNCTION (STF)
#НА #М _
#А0 #Ц ОПЕРАЦИИ С БИТАМИ РЕГИСТРА СОСТОЯНИЯ @N (/@C@E@N=0)
#А0 _
#А0 I5_I4_I3_I2_I1_I0
#А0 0__0__1__0__0__0___0->NZ___УСТ._В_"0"_ПРИЗНАКА_Z
#А0 0__0__1__0__0__1___1->NZ___УСТ._В_"1"_ПРИЗНАКА_Z
#А0 0__0__1__0__1__0___0->NС___УСТ._В_"0"_ПРИЗНАКА_С
#А0 0__0__1__0__1__1___1->NС___УСТ._В_"1"_ПРИЗНАКА_С
#А0 0__0__1__1__0__0___0->NN___УСТ._В_"0"_ПРИЗНАКА_N
#А0 0__0__1__1__0__1___1->NN___УСТ._В_"1"_ПРИЗНАКА_N
#А0 0__0__1__1__1__0___0->NV___УСТ._В_"0"_ПРИЗНАКА_OVR
#А0 0__0__1__1__1__1___1->NV___УСТ._В_"1"_ПРИЗНАКА_OVR
#А0 #ВС5 _
#А0 #Ц ОПЕРАЦИИ СО СЛОВАМИ РЕГИСТРА СОСТОЯНИЯ @N (/@C@E@N=0)
#А0 _
#А0 I5_I4_I3_I2_I1_I0
#А0 0__0__0__0__0__0____М->N____ЗАПИСЬ СОДЕРЖИМОГО РГ.М В РГ.N
#А0 0__0__0__0__0__1____1->N____УСТ. В "1" ВСЕХ РАЗРЯДОВ РГ.N
#А0 0__0__0__0__1__0____М<->N___РЕГИСТРОВЫЙ ОБМЕН
#А0 0__0__0__0__1__1____0->N____УСТ. В "0" ВСЕХ РАЗРЯДОВ РГ.N
#А0 #ВС5 _
#А0 #Ц ОПЕРАЦИИ ЗАГРУЗКИ РЕГИСТРА СОСТОЯНИЯ @N (/@C@E@N=0)
#А0 _
#А0 I5_I4_I3_I2_I1_I0
#А0 0__0__0__1__1__0____IZ->NZ_______ЗАГРУЗКА_С_ЗАПОМИНАНИЕМ
#А0 0__0__0__1__1__1____IС->NС_______ПРИЗНАКА_ПЕРЕПОЛНЕНИЯ
#А0 ____________________IN->NN__
#А0 __________________IV.OR.NV->NV__
#А0 _
#А0 0__1__1__0__0__Х____IZ->NZ_______ЗАГРУЗКА_С_ИНВЕРСИЕЙ
#А0 1__0__1__0__0__Х___/IС->NС_______ПРИЗНАКА ПЕРЕНОСА
#А0 1__1__1__0__0__Х____IN->NN
#А0 ____________________IV->NV
#А0 _
#А0 0__0__0__1__0__Х____IZ->NZ_______ЗАГРУЗКА НЕПОСРЕДСТВЕННО
#А0 0__1__0__Х__Х__Х____IС->NС_______СО ВХОДОВ ПРИЗНАКОВ
#А0 0__1__1__0__1__Х____IN->NN_______СОСТОЯНИЯ
#А0 0__1__1__1__Х__Х____IV->NV
#А0 1__0__0__Х__Х__Х
#А0 1__0__1__0__1__Х
#А0 1__0__1__1__Х__Х
#А0 1__1__0__Х__Х__Х
#А0 1__1__1__0__1__Х
#А0 1__1__1__1__Х__Х
#А0 #ВС7 _
#А0 #Ц РЕГИСТРОВЫЕ ОПЕРАЦИИ РГ.М
#А0 #Ц /СЕМ_=_/EZ_=_/ЕС_=_/EN_=_/EV_=_0
#А0 _
#А0 I5_I4_I3_I2_I1_I0
#А0 0__0__0__0__0__0____У->М____ЗАПИСЬ С ШИНЫ У В РГ.М
#А0 0__0__0__0__0__1____1->М____УСТ. В "1" ВСЕХ РАЗРЯДОВ РГ.М
#А0 0__0__0__0__1__0____N<->М___РЕГИСТРОВЫЙ ОБМЕН
#А0 0__0__0__0__1__1____0->М____УСТ. В "0" ВСЕХ РАЗРЯДОВ РГ.М
#А0 0__0__0__1__0__1___/М->М____ИНВЕРТИРОВАНИЕ СОДЕРЖИМОГО РГ.М
#А0 _
#А0 0__0__0__1__0__0____IZ->MZ__ИСПОЛЬЗУЕТСЯ ПРИ ОРГАНИЗАЦИИ
#А0 ____________________MV->МС__СДВИГОВ С ИСПОЛЬЗОВАНИЕМ
#А0 ____________________IN->MN__ПРИЗНАКА ПЕРЕПОЛНЕНИЯ,
#А0 ____________________МС->MV__А НЕ ПЕРЕНОСА
#А0 _
#А0 0__0__1__0__0__Х____IZ->MZ__ЗАГРУЗКА
#А0 0__1__1__0__0__Х___/IС->МС__С ИНВЕРСИЕЙ
#А0 1__0__1__0__0__Х____IN->MN__ПРИЗНАКА ПЕРЕНОСА
#А0 1__1__1__0__0__Х____IV->MV
#А0 _
#А0 0__0__0__1__1__Х____IZ->MZ__ЗАГРУЗКА НЕПОСРЕДСТВЕННО
#А0 0__0__1__0__1__Х____IС->МС__СО ВХОДОВ ПРИЗНАКОВ
#А0 0__0__1__1__Х__Х____IN->MN__СОСТОЯНИЯ
#А0 0__1__0__Х__Х__Х____IV->MV
#А0 0__1__1__0__1__Х
#А0 0__1__1__1__Х__Х
#А0 1__0__0__Х__Х__Х
#А0 1__0__1__0__1__Х
#А0 1__0__1__1__Х__Х
#А0 1__1__0__Х__Х__Х
#А0 1__1__1__0__1__Х
#А0 1__1__1__1__Х__Х
#А0 #ВС7 _
#А0 #Ц УПРАВЛЕНИЕ ВЫВОДОМ ИНФОРМАЦИИ ЧЕРЕЗ ШИНУ @У
#А0 _
#А0 /ОЕУ_I5_I4_____У
#А0 __1___Х__Х_____Z___СОСТОЯНИЕ ВЫСОКОГО СОПРОТИВЛЕНИЯ
#А0 __0___0__Х___N->У__ПРИ "0" НА ВХОДАХ @I5-@I0 ШИНА @У ВСЕГДА
#А0 ___________________ЯВЛЯЕТСЯ ВХОДНОЙ, НЕЗАВИСИМО ОТ /@О@Е@У
#А0 __0___1__0___М->У
#А0 __0___1__1___I->У
#А0 #ВС6 _
#А0 #Ц УПРАВЛЕНИЕ ВЫХОДОМ КОДА @С@Т #Б (/ОЕСТ=0) #М _
#А0 _
#А0 I3__I1______I5=I4=0_____I5=0,I4=1____I5=1,I4=0_____I5=I4=1
#А0 __I2__I0
#А0 0_0_0_0_(NN.EOR.NV).OR.NZ_______(MN.EOR.MV).OR.MZ_
#А0 __________________(NN.EOR.NV).OR.NZ________(IN.EOR.IV).OR.IZ
#А0 0_0_0_1_/(NN.EOR.NV).AND./NZ__/(MN.EOR.MV).AND./MZ
#А0 ________________/(NN.EOR.NV).AND./NZ_____/(IN.EOR.IV).AND./IZ
#А0 0_0_1_0____NN.EOR.NV____NN.EOR.NV____MN.EOR.MV____IN.EOR.IV
#А0 0_0_1_1___/(NN.EOR.NV)_/(NN.EOR.NV)_/(MN.EOR.MV)_/(IN.EOR.IV)
#А0 0_1_0_0________NZ___________NZ___________MZ___________IZ
#А0 0_1_0_1_______/NZ__________/NZ__________/MZ__________/IZ
#А0 0_1_1_0________NV___________NV___________MV___________IV
#А0 0_1_1_1_______/NV__________/NV__________/MV__________/IV
#А0 1_0_0_0_____NС.OR.NZ_____NС.OR.NZ_____МС.OR.MZ____/IС.OR.IZ
#А0 1_0_0_1___/NС.AND./NZ__/NС.AND./NZ__/МС.AND./MZ___IС.AND./IZ
#А0 1_0_1_0________NС___________NС___________МС___________IС
#А0 1_0_1_1_______/NС__________/NС__________/МС__________/IС
#А0 1_1_0_0____/NС.OR.NZ____/NС.OR.NZ____/МС.OR.MZ____/IС.OR.IZ
#А0 1_1_0_1____NС.AND./NZ___NС.AND./NZ___МС.AND./MZ___IС.AND./IZ
#А0 1_1_1_0____IN.EOR.MN________NN___________MN___________IN
#А0 1_1_1_1___/(IN.EOR.MN)_____/NN__________/MN__________/IN
#А0 #ВС8 _
#А0 #Ц ПРОВЕРКА ОТНОШЕНИЯ ЧИСЕЛ @А И @В
#А0 #Ц ПОСЛЕ ВЫПОЛНЕНИЯ ОПЕРАЦИИ (@А-@В)
#А0 #Ц ЧИСЛА БЕЗ ЗНАКА
#А0 _
#А0 ОТНОШЕНИЕ_____________@I3-@I0_______@I3-@I0
#А0 _________СОСТОЯНИЕ_____@С@Т=1________@С@Т=0
#А0 _А.EQ.В_____Z=1______0_1_0_0_____0_1_0_1
#А0 _А.NЕ.В_____Z=0______0_1_0_1_____0_1_0_0
#А0 _А.GЕ.В_____С=1______1_0_1_0_____1_0_1_1
#А0 _А.LТ.В_____С=0______1_0_1_1_____1_0_1_0
#А0 _А.GТ.В__С.AND./Z=1__1_1_0_1_____1_1_0_0
#А0 _А.LЕ.В__/С.OR.Z=1___1_1_0_0_____1_1_0_1
#А0 #ВС7 _
#А0 #Ц ЧИСЛА В ДОПОЛНИТЕЛЬНОМ КОДЕ
#А0 _
#А0 ОТНОШЕНИЕ_____________________@I3-@I0_______@I3-@I0
#А0 ______________СОСТОЯНИЕ________@С@Т=1________@С@Т=0
#А0 _А.EQ.В__________Z=1_________0_1_0_0_____0_1_0_1
#А0 _А.NЕ.В__________Z=0_________0_1_0_1_____0_1_0_0
#А0 _А.GЕ.В_____/(N.EOR.V)=1_____0_0_1_1_____0_0_1_0
#А0 _А.LТ.В_______N.EOR.V=1______0_0_1_0_____0_0_1_1
#А0 _А.GТ.В_/(N.EOR.V).AND./Z=1__0_0_0_1_____0_0_0_0
#А0 _А.LЕ.В___(N.EOR.V).OR.Z=1___0_0_0_0_____0_0_0_1
#А0 #ВС7 _
#А0 #Ц УПРАВЛЕНИЕ ФОРМИРОВАНИЕМ СИГНАЛА ВХОДНОГО ПЕРЕНОСА
#А0 _
#А0 I12___I11___I5__I3__I2__I1____@С0
#А0 _0_____0_____Х___Х___Х___Х_____0
#А0 _0_____1_____Х___Х___Х___Х_____1
#А0 _1_____0_____Х___Х___Х___Х____СХ
#А0 _1_____1_____0___0___Х___Х____NС
#А0 _1_____1_____0___Х___1___Х____NС
#А0 _1_____1_____0___Х___Х___1____NС
#А0 _1_____1_____0___1___0___0___/NС
#А0 _1_____1_____1___0___Х___Х____МС
#А0 _1_____1_____1___Х___1___Х____МС
#А0 _1_____1_____1___Х___Х___1____МС
#А0 _1_____1_____1___1___0___0___/МС
#А0 ВС7 _
#А0 #Ц УПРАВЛЕНИЕ СДВИГАМИ #Б (/SЕ=0) #М
#А0 I10_I9_I8_I7_I6_______ТИП__СДВИГА__________PF0_PF3_PQ0_PQ3__МС
#ВС3 _
#А0 _________________"0"_________"0"
#А0 _0__0__0__0__0____-->РОН-->___-->РГ.Q-->____Z___0___Z___0___-
#ВС3 _
#А0 _________________"1"_________"1"
#А0 _0__0__0__0__1____-->РОН-->___-->РГ.Q-->____Z___1___Z___1___-
#ВС3 _
#А0 _________________МС<-------I__MN
#А0 _0__0__0__1__0____"0"->РОН-I__-->РГ.Q-->____Z___0___Z__MN__PF0
#ВС3 _
#А0 _________________"1"
#А0 _0__0__0__1__1____-->РОН-------->РГ.Q-->____Z___1___Z__PF0__-
#ВС3 _
#А0 _
#А0 _0__0__1__0__0____МС-->РОН------>РГ.Q-->____Z__МС___Z__PF0__-
#ВС3 _
#А0 __________________
#А0 _0__0__1__0__1____MN-->РОН------>РГ.Q-->____Z__MN___Z__PF0__-
#ВС3 _
#А0 _________________"0"
#А0 _0__0__1__1__0____-->РОН-------->РГ.Q-->____Z___0___Z__PF0__-
#ВС3 _
#А0 ___________________МС<-----------------I
#А0 _0__0__1__1__1____"0"-->РОН----->РГ.Q--I____Z___0___Z__PF0_PQ0
#ВС3 _
#А0 ____________________I-------I_I--------I
#А0 _0__1__0__0__0__МС<-I->РОН--I_I->РГ.Q--I____Z__PF0__Z__PQ0_PF0
#ВС3 _
#А0 ________________V---------I___I--------I
#А0 _0__1__0__0__1__МС-->РОН--I___I->РГ.Q--I____Z__МС___Z__PQ0_PF0
#ВС3 _
#А0 _________________I--------I___I--------I
#А0 _0__1__0__1__0___I-->РОН--I___I->РГ.Q--I____Z__PF0__Z__PQ0__-
#ВС3 _
#А0 _
#А0 _0__1__0__1__1____IС-->РОН------>РГ.Q-->____Z__IС___Z__PF0__-
#ВС3 _
#А0 __________________V--------------------I
#А0 _0__1__1__0__0____МС->РОН------>РГ.Q---I____Z__МС___Z__PF0_PQ0
#ВС3 _
#А0 ______________________I----------------I
#А0 _0__1__1__0__1___МС<--I-->РОН--->РГ.Q--I____Z__PQ0__Z__PF0_PQ0
#ВС3 _
#А0 ________________IN.EOR.IV
#А0 _0__1__1__1__0___------->РОН---->РГ.Q-->__Z_IN.EOR.IV_Z_PF0_-
#ВС3 _
#А0 _________________I---------------------I
#А0 _0__1__1__1__1___I--->РОН------>РГ.Q---I____Z__PQ0__Z__PF0__-
#ВС3 _
#А0 ________________________"0"__________"0"
#А0 _1__0__0__0__0__МС<--РОН<--___<--РГ.Q<--____0___Z___0___Z__PF3
#ВС3 _
#А0 ________________________"1"__________"1"
#А0 _1__0__0__0__1__МС<--РОН<--___<--РГ.Q<--____1___Z___1___Z__PF3
#ВС3 _
#А0 ________________________"0"___________"0"
#А0 _1__0__0__1__0____<--РОН<--___<--РГ.Q<--____0___Z___0___Z___-
#ВС3 _
#А0 ________________________"1"___________"1"
#А0 _1__0__0__1__1____<--РОН<--___<--РГ.Q<--____1___Z___1___Z___-
#ВС3 _
#А0 _____________________________________"0"
#А0 _1__0__1__0__0__МС<--РОН<-------РГ.Q<---___PQ3__Z___0___Z__PF3
#ВС3 _
#А0 _____________________________________"1"
#А0 _1__0__1__0__1__МС<--РОН<-------РГ.Q<---___PQ3__Z___1___Z__PF3
#ВС3 _
#А0 _____________________________________"0"
#А0 _1__0__1__1__0___<---РОН<-------РГ.Q<---___PQ3__Z___0___Z___-
#ВС3 _
#А0 _____________________________________"1"
#А0 _1__0__1__1__1___<---РОН<-------РГ.Q<---___PQ3__Z___1___Z___-
#ВС3 _
#А0 ___________________I-------I__I--------I
#А0 _1__1__0__0__0_МС<-I-РОН<--I__I--РГ.Q<-I___PF3__Z__PQ3__Z__PF3
#ВС3 _
#А0 _________________I---------I__I--------I
#А0 _1__1__0__0__1___МС<--РОН<-I__I--РГ.Q<-I___МС___Z__PQ3__Z__PF3
#ВС3 _
#А0 __________________I-------I___I--------I
#А0 _1__1__0__1__0____I--РОН<-I___I--РГ.Q<-I___PF3__Z__PQ3__Z___-
#ВС3 _
#А0 ___________________МС----I___________"0"
#А0 _1__1__0__1__1___<--РОН<-I___<--РГ.Q<---___МС___Z___0___Z___-
#ВС3 _
#А0 __________________I--------------------I
#А0 _1__1__1__0__0____МС<--РОН<-----РГ.Q<--I___PQ3__Z___МС__Z__PF3
#ВС3 _
#А0 ______________________I----------------I
#А0 _1__1__1__0__1___МС<--I--РОН<----РГ.Q<-I___PQ3__Z__PF3__Z__PF3
#ВС3 _
#А0 _____________________МС----------------I
#А0 _1__1__1__1__0_____<--РОН<------РГ.Q<--I___PQ3__Z___МС__Z___-
#ВС3 _
#А0 ___________________I-------------------I
#А0 _1__1__1__1__1_____I---РОН<-----РГ.Q<--I___PQ3__Z__PF3__Z___-
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 8
#А0 #Ц ИСТОЧНИК НОМЕРА МОДИФИКАТОРА
#А0 #Ц MODIFICATOR NUMBER SOURCE ADRESS (MNSA)
#НА #М _
#А0 В_А
#А0 0__0__-__ИСПОЛНИТЕЛЬНЫЙ АДРЕС
#А0 0__1__-__ПОЛЕ МОДИФИКАТОРА КОМАНДЫ
#А0 1__0__-__
#А0 1__1__-__МИКРОПРОГРАММА
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 9
#А0 #Ц НОМЕР МОДИФИКАТОРА В ГРУППЕ
#А0 #Ц MODIFICATOR NUMBER (MODNM)
#НА #М _
#А0 Е__D__С__В__А
#А0 Х__Х__Х__Х__Х_-_НОМЕР МОДИФИКАТОРА, ИСПОЛЬЗУЕМОГО
#А0 ________________В МИКРОПРОГРАММЕ (В ОБРАТНОМ КОДЕ)
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 10
#А0 #Ц ПАРАМЕТР СДВИГА
#А0 #Ц (PSHF)
#НА #М _
#А0 J__F__Е__D__С__В__А___ПАРАМЕТР СДВИГА СДВИГАТЕЛЯ
#А0 _
#А0 0__Х__Х__Х__Х__Х__Х_-_СДВИГ ВЛЕВО, КОЛИЧЕСТВО СДВИГОВ
#А0 ______________________ЗАДАЕТСЯ В ДОПОЛНИТЕЛЬНОМ КОДЕ;
#А0 1__Х__Х__Х__Х__Х__Х_-_СДВИГ ВПРАВО, КОЛИЧЕСТВО СДВИГОВ
#А0 ______________________ЗАДАЕТСЯ В ПРЯМОМ КОДЕ.
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 11
#А0 #Ц ИСТОЧНИКИ ИНФОРМАЦИИ НА ШИНУ D ЦП
#А0 #Ц D_-_SOURCE (DSRC)
#НА #М _
#А0 D_С_В_А
#А0 0_0_0_0_-_НЕ ИСПОЛЬЗУЕТСЯ
#А0 0_0_0_1_-_РЕГИСТР НОМЕРА ГРУППЫ @О@З@У МОДИФИКАТОРОВ
#А0 0_0_1_0_-_РЕГИСТР НОМЕРА ПРОЦЕССА
#А0 0_0_1_1_-_ТРИГГЕРЫ ПРИЗНАКОВ
#А0 0_1_0_0_-_РЕГИСТР ФИЗИЧЕСКОЙ СТРАНИЦЫ
#А0 0_1_0_1_-_РЕГИСТР @К@О@П АРБИТРА
#А0 0_1_1_0_-_ПРОИЗВЕДЕНИЕ (МЛАДШИЕ РАЗРЯДЫ)
#А0 0_1_1_1_-_ПРОИЗВЕДЕНИЕ (СТАРШИЕ РАЗРЯДЫ)
#А0 1_0_0_0_-_АДРЕС КОМАНДЫ
#А0 1_0_0_1_-_РЕЗУЛЬТАТ СДВИГА
#А0 1_0_1_0_-_@К@О@П КОМАНДЫ
#А0 1_0_1_1_-_РЕЗУЛЬТАТ ПОИСКА ЛЕВОЙ ЕДИНИЦЫ
#А0 1_1_0_0_-_@П@З@У КОНСТАНТ
#А0 1_1_0_1_-_
#А0 1_1_1_0_-_ЧТЕНИЕ ЧАСОВ И ТАЙМЕРА @С@В (НЕТ DSRC15 И WRD)
#А0 1_1_1_1_-_ПЕРЕКЛЮЧЕНИЕ НАПРАВЛЕНИЯ @Ш@Ф ОТ ШИНЫ @У @Ц@П
#А0 __________К ЧАСАМ И ТАЙМЕРУ @С@В (ЗАПИСЬ: DSRC15 + WRD)
#НА #Б #ВС7 _
#А0 #Ц ТАБЛИЦА 12
#А0 #Ц ПРИЕМНИКИ ИНФОРМАЦИИ С ШИНЫ У ЦП; _СТРОБ Т1
#А0 #Ц У_-_DESTINATION (YDST)
#НА #М
#А0 С_В_А
#А0 0_0_0_0_-_НЕ ИСПОЛЬЗУЕТСЯ
#А0 0_0_0_1_-_РЕГИСТР НОМЕРА ГРУППЫ @О@З@У МОДИФИКОТОРОВ
#А0 0_0_1_0_-_РЕГИСТР НОМЕРА ПРОЦЕССА
#А0 0_0_1_1_-_РЕГИСТР РЕЖИМОВ И ТРИГГЕРЫ ПРИЗНАКОВ (КРОМЕ ТКК)
#А0 0_1_0_0_-_РЕГИСТР ФИЗИЧЕСКОЙ СТРАНИЦЫ
#А0 0_1_0_1_-_РЕГИСТР @К@О@П АРБИТРА
#А0 __________(ДЛЯ ПУЛЬТОВОГО ОСТАНОВА)
#А0 0_1_1_0_-_МНОЖИМОЕ
#А0 0_1_1_1_-_МНОЖИТЕЛЬ, ОДНОВРЕМЕННО - ЗАПУСК УМНОЖИТЕЛЯ
#А0 1_0_0_0_-_РЕГИСТР ИСПОЛНИТЕЛЬНОГО АДРЕСА
#А0 1_0_0_1_-_РЕГИСТР ПАРАМЕТРА СДВИГА
#А0 1_0_1_0_-_ЗАПУСК СБРОСА КЭША.
#А0 __________НА ВРЕМЯ СБРОСА КЭША ОБРАЩЕНИЕ К НЕМУ БЛОКИРУЕТСЯ,
#А0 __________ЧТЕНИЕ ПРОИСХОДИТ ТОЛЬКО ИЗ ПАМЯТИ.
#А0 1_0_1_1_-_УСТАНОВКА АРБИТРА В НАЧАЛЬНОЕ СОСТОЯНИЕ ИЛИ
#А0 __________СБРОС @B@T@R (ОДНОВРЕМЕННО С @Н@О@П АРБИТРА).
#А0 __________ЕСЛИ @К@О@П АРБИТРА НЕ 0, ПРОИСХОДИТ ЗАПУСК АРБИТРА!
#А0 1_1_0_0_-_
#А0 1_1_0_1_-_
#А0 1_1_1_0_-_
#А0 1_1_1_1_-_
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 13
#А0 #Ц КОД ОПЕРАЦИИ СДВИГАТЕЛЯ
#А0 #Ц SHIFT FUNCTION (SHF)
#НА #М
#А0 В_А
#А0 0_0_-_ЦИКЛИЧЕСКИЙ СДВИГ ВПРАВО
#А0 0_1_-_ЛОГИЧЕСКИЙ СДВИГ
#А0 1_0_-_АРИФМЕТИЧЕСКИЙ СДВИГ
#А0 1_1_-_"РАСХЛОПЫВАНИЕ" (ПЕРЕХОД К ФОРМАТУ @Б@Э@С@М-6)
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 14
#А0 #Ц К_О_П___АРБИТРА
#А0 #Ц ARBITER INSTRUCTION (ARBI)
#НА #М _
#А0 D_С_В_А
#А0 0_0_0_0_-_@Н@О@П
#А0 0_0_0_1_-_ЧТЕНИЕ КЭШ КОМАНД
#А0 0_0_1_0_-_ЗАПИСЬ В КЭШ КОМАНД
#А0 0_0_1_1_-_ЧТЕНИЕ КЭШ ОПЕРАНДОВ
#А0 0_1_0_0_-_ЗАПИСЬ В КЭШ ОПЕРАНДОВ
#А0 0_1_0_1_-_
#А0 0_1_1_0_-_
#А0 0_1_1_1_-_
#А0 1_0_0_0_-_ЧТЕНИЕ КОМАНДЫ
#А0 1_0_0_1_-_ЧТЕНИЕ ОПЕРАНДА
#А0 1_0_1_0_-_ЗАПИСЬ РЕЗУЛЬТАТА
#А0 1_0_1_1_-_ЧТЕНИЕ - МОДИФИКАЦИЯ - ЗАПИСЬ
#А0 __________(СЕМАФОРНОЕ ЧТЕНИЕ)
#А0 1_1_0_0_-_ЗАПИСЬ В РЕЖИМЕ БЛОЧНОЙ ПЕРЕДАЧИ (@B@T@R)
#А0 1_1_0_1_-_ЧТЕНИЕ В РЕЖИМЕ БЛОЧНОЙ ПЕРЕДАЧИ (@B@T@R)
#А0 1_1_1_0_-_СБРОС ПРЕРЫВАНИЙ НА ШИНЕ
#А0 1_1_1_1_-_ЧТЕНИЕ ПРЕРЫВАНИЙ С ШИНЫ
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 15
#А0 #Ц УПРАВЛЕНИЕ ДЛИТЕЛЬНОСТЬЮ ТАКТОВОГО ИМПУЛЬСА
#А0 #Ц CYCLE STRATCH (CYSTR)
#НА #М _
#А0 С_В_А
#А0 0_0_1_-_3 НАНОТАКТА
#А0 ________(МИНИМАЛЬНАЯ ДЛИТЕЛЬНОСТЬ ТАКТОВОГО ИМПУЛЬСА)
#А0 0_0_0_-_4
#А0 1_0_0_-_5
#А0 1_1_0_-_6
#А0 0_1_0_-_7
#А0 0_1_1_-_8
#А0 1_1_1_-_9
#А0 1_0_1_-_10 НАНОТАКТОВ (МАКСИМАЛЬНАЯ)
#НА #ВС12 _
#А0 000___________________________001
#А0 _______--------_1_----_______________---------_1_----
#А0 _Т1_---I___2__I---I_______________---I___3___I---I___
#А0 _
#А0 _______-----___2__----_______________-------__2__----
#А0 _Т2_---I_1_I------I_______________---I__2__I-----I
#А0 _
#А0 _______-----___2__----_______________-------__2__----
#А0 _Т3_---I_1_I------I_______________---I__2__I-----I
#А0 _
#А0 ____----_1_--------_______________----_1_---------___
#А0 _Т4____I---I___2__I---_______________I---I___3___I---
#НА #ВС12 _
#А0 101___________________________111
#А0 _______----------_1_----_____________-----------_1_----
#А0 _Т1_---I____4___I---I_____________---I____5____I---I
#А0 _
#А0 _______--------__2__----_____________---------__2__----
#А0 _Т2_---I___3__I-----I_____________---I___4___I-----I
#А0 _
#А0 _______-------___3__----_____________--------___3__----
#А0 _Т3_---I__2__I------I_____________---I___3__I------I
#А0 _
#А0 ____----_1_----------_____________----_1_-----------
#А0 _Т4____I---I____4___I---_____________I---I____5____I---
#НА #ВС12 _
#А0 011___________________________010
#А0 _______------------_1_----___________-------------_1_----
#А0 _Т1_---I_____6____I---I___________---I_____7_____I---I
#А0 _
#А0 _______----------__2__----___________-----------__2__----
#А0 _Т2_---I____5___I-----I___________---I____5____I-----I
#А0 _
#А0 _______-------___4____----___________---------___4___----
#А0 _Т3_---I__3__I--------I___________---I___4___I-------I
#А0 _
#А0 ____----_1_------------___________----_1_-------------
#А0 _Т4____I---I____6_____I---___________I---I_____7_____I---
#НА #ВС12 _
#А0 110___________________________100
#А0 _______--------------_1_----_________---------------_1_----
#А0 _Т1_---I______8_____I---I_________---I______9______I---I
#А0 _
#А0 _______------------__2__----_________-------------__2__----
#А0 _Т2_---I_____6____I-----I_________---I_____8_____I-----I
#А0 _
#А0 _______---------____5___----_________----------____5___----
#А0 _Т3_---I___4___I--------I_________---I____5___I--------I
#А0 _
#А0 ____----_1_--------------_________----_1_---------------__
#А0 _Т4____I---I_____8______I---_________I---I______9______I---
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 16
#А0 #Ц АДРЕСА РЕГИСТРОВ_КАНАЛА__В__Б_О_И___ДАННЫХ И ТЕГА
#А0 #Ц В_-_REGISTER ADRESS (BRA)
#НА #М
#А0 В_А
#А0 0_0_-_RG0_-_ФИЗИЧЕСКИЙ АДРЕС;
#А0 ____________В БОИ ТЕГА: НЕ ИСПОЛЬЗУЕТСЯ.
#А0 0_1_-_RG1_-_РЕГИСТР ЛЕВОЙ, ПРАВОЙ КОМАНДЫ;
#А0 ____________В БОИ ТЕГА: ТЕГ КОМАНДЫ.
#А0 1_0_-_RG2_-_РЕГИСТР ОПЕРАНДА;
#А0 ____________В БОИ ТЕГА: ТЕГ ОПЕРАНДА.
#А0 1_1_-_RG3_-_РЕГИСТР РЕЗУЛЬТАТА;
#А0 ____________В БОИ ТЕГА: ТЕГ РЕЗУЛЬТАТА (СУММАТОРА)
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 17
#А0 #Ц АДРЕСА РЕГИСТРОВ_КАНАЛА А БОИ ДАННЫХ
#А0 #Ц А_-_REGISTER ADRESS (ARA)
#НА #М
#А0 В_А
#А0 0_0_-_RG0_-_ФИЗИЧЕСКИЙ АДРЕС;
#А0 0_1_-_RG1_-_РЕГИСТР ЛЕВОЙ, ПРАВОЙ КОМАНДЫ;
#А0 1_0_-_RG2_-_РЕГИСТР ОПЕРАНДА;
#А0 1_1_-_RG3_-_РЕГИСТР РЕЗУЛЬТАТА.
#НА #Б #ВС7 _
#А0 #Ц ТАБЛИЦА 18
#А0 #Ц ИСТОЧНИКИ/ПРИЕМНИКИ ИНФОРМАЦИИ С ШИНЫ  У
#А0 #Ц У_-_DEVICE (YDEV)
#НА #М
#А0 С_В_А
#А0 0_0_0_-_НЕ ИСПОЛЬЗУЕТСЯ
#А0 0_0_1_-_КАНАЛ @В @Б@О@И ТЕГА (@Е@С@В)
#А0 0_1_0_-_ФИЗИЧЕСКИЙ АДРЕС (ТОЛЬКО НА ЧТЕНИЕ)
#А0 ________ОДНОВРЕМЕННО - СИГНАЛ ЗАПИСИ В @Р@Ф@С И
#А0 ________ИЗМЕНЕНИЕ ПРИЗНАКОВ #Б БОБР,БИЗМ,БМСП #М И ЗАПУСК АРБИТРА
#А0 0_1_1_-_РЕГИСТР ИСПОЛНИТЕЛЬНОГО АДРЕСА (ТОЛЬКО НА ЧТЕНИЕ)
#А0 ________(ЗАПИСЬ - СМ. ТАБЛИЦУ 12)
#А0 1_0_0_-_@О@З@У ПРИПИСОК (@C@S)
#А0 1_0_1_-_@О@З@У ОБМЕНА С @П@П
#А0 1_1_0_-_@О@З@У ОСТАНОВА 0 (ТОЛЬКО НА ЗАПИСЬ)
#А0 1_1_1_-_@О@З@У ОСТАНОВА 1 (ТОЛЬКО НА ЗАПИСЬ)
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 19
#А0 #Ц ИСТОЧНИКИ/ПРИЕМНИКИ ИНФОРМАЦИИ С ШИНЫ D
#А0 #Ц D_-_DEVICE (DDEV)
#НА #М
#А0 С_В_А
#А0 0 0_0_-_НЕ ИСПОЛЬЗУЕТСЯ #Б
#А0 0_0_1_-_БОБР, БИЗМ
#А0 0_1_0_-_БМСП #М
#А0 0_1_1_-_СБРОС @П@И@А
#А0 1_0_0_-_РЕГИСТР И ТАЙМЕР СЧЕТНОГО ВРЕМЕНИ (СИГНАЛ @C@S) (*)
#А0 1_0_1_-_@С@У@С@С (**)
#А0 1_1_0_-_@О@З@У ПРИОРИТЕТОВ СТРАНИЦ 0 (**)
#А0 1_1_1_-_@О@З@У ПРИОРИТЕТОВ СТРАНИЦ 1 (**)
#А0 _
#А0 БЛОКИ, ПОМЕЧЕННЫЕ (*): ИСТОЧНИКИ, ПРИЕМНИКИ С ШИНЫ @У;
#А0 БЛОКИ, ПОМЕЧЕННЫЕ (**): ИСТОЧНИКИ - НА ШИНУ @D,
 ПРИЕМНИКИ - С ШИНЫ @У;
#А0 НЕПОМЕЧЕННЫЕ: ИСТОЧНИКИ, ПРИЕМНИКИ С ШИНЫ @D.
#НА #Б #ВС7 _
#А0 #Ц ТАБЛИЦА 20
#А0 #Ц УСТАНОВКА/СБРОС ТРИГГЕРОВ ПРИЗНАКОВ
#А0 #Ц FLIP-FLOP CONTROL (FFCNT)
#НА #М _
#А0 Е_D_С_В_А
#А0 0_0_0_0_0_-_НЕ ИСПОЛЬЗУЕТСЯ
#А0 0_0_0_0_1_-_ЛОГИЧЕСКАЯ ГРУППА
#А0 0_0_0_1_0_-_ГРУППА УМНОЖЕНИЯ
#А0 0_0_0_1_1_-_ГРУППА СЛОЖЕНИЯ
#А0 0_0_1_0_0_-_
#А0 0_0_1_0_1_-_УСТАНОВКА @П@И@А
#А0 0_0_1_1_0_-_СБРОС @П@П@К
#А0 0_0_1_1_1_-_УСТАНОВКА - " -
#А0 0_1_0_0_0_-_СБРОС @П@П@У
#А0 0_1_0_0_1_-_УСТАНОВКА - " -
#А0 0_1_0_1_0_-_СБРОС МАСКИ ПРЕРЫВАНИЙ
#А0 0_1_0_1_1_-_УСТАНОВКА - " -
#А0 0_1_1_0_0_-_СБРОС @М@П ПРИЗНАКА "СЛЕД 0"
#А0 0_1_1_0_1_-_УСТАНОВКА - " -
#А0 0_1_1_1_0_-_СБРОС @М@П ПРИЗНАКА "СЛЕД 1"
#А0 0_1_1_1_1_-_УСТАНОВКА - " -
#А0 1_0_0_0_0_-_СБРОС ПРЕРЫВАНИЯ ОТ ЧАСОВ СЧЕТНОГО ВРЕМЕНИ
#А0 1_0_0_0_1_-_СБРОС ПРЕРЫВАНИЯ ОТ ТАЙМЕРА СЧЕТНОГО ВРЕМЕНИ
#А0 1_0_0_1_0_-_СБРОС @Т@К@К (@П@П@К СТАНДАРТИЗАТОРА)
#А0 1_0_0_1_1_-_УСТАНОВКА   -   "   -
#А0 1_0_1_0_0_-_УСТАНОВКА НОВОГО РЕЖИМА
#А0 1_0_1_0_1_-_ЗАПУСК ЗАГРУЗКИ #Б ОЗУ БМСП #М ЕДИНИЦАМИ
#А0 1_0_1_1_0_-_УСТАНОВКА РЕЖИМА ЭМУЛЯЦИИ
#А0 1_0_1_1_1_-_ПЕРЕБРОС ТГ.Т@К@К
#А0 1_1_0_0_0_-_УСТАНОВКА ТГ. "ОСТАНОВ" (@H@A@L@T)
#А0 1_1_0_0_1_-_СБРОС ПРЕРЫВАНИЙ (КРОМЕ ПРЕРЫВАНИЙ ОТ ТАЙМЕРОВ)
#А0 1_1_0_1_0_-_СБРОС ТГ. "@П@У@С@К"
#А0 1_1_0_1_1_-_УСТАНОВКА ПРИЗНАКА "ОЗУ ПП->ЦП" ПРОЧИТАНО
#А0 1_1_1_0_0_-_УСТАНОВКА ПРИЗНАКА В "ОЗУ ПП->ЦП" ЕСТЬ ИНФОРМАЦИЯ
#А0 1_1_1_0_1_-_УСТАНОВКА ПРИЗНАКА В "ОЗУ ЦП->ПП" #СГ12
 ЕСТЬ ИНФОРМАЦИЯ,
 ОДНОВРЕМЕННО - УСТАНОВКА ТГ., ЧТО "ОЗУ ЦП->ПП ЗАНЯТО"
 (УСЛОВИЕ 10111) #СГ0
#А0 1_1_1_1_0_-_УСТАНОВКА ПРОГРАММНОГО #СГ12
 ПРЕРЫВАНИЯ (ПРЕРЫВАНИЕ С НОМЕРОМ 31, ПРОХОДЯЩЕЕ ПРИ
 ОТСУТСТВИИ @Б@В@П И СТРОБИРУЕМОЕ @П@М@И) #СГ0
#А0 1_1_1_1_1_-_УСТАНОВКА ВНЕШНЕГО ПРЕРЫВАНИЯ НА МАГИСТРАЛЬ
 #СГ12 ПО ШИНЕ @D0 (@Ц@П ПОСЫЛАЕТ ПРЕРЫВАНИЕ, САМ НЕ ПРЕРЫВАЯСЬ) #СГ0
#А0 _ #А0 _
#А0 _В_А_-_СИГНАЛЫ А1,А0 ПРИ ОБРАЩЕНИИ К ЧАСАМ И ТАЙМЕРАМ
 #Б (IОМР=1). #М
#НА #Б #ВС9 _
#А0 #Ц ТАБЛИЦА 21
#А0 #Ц АДРЕС ОЗУ ОБМЕНА С ПП
#А0 #Ц (MPADR)
#НА #М _
#А0 D__С__В__А
#А0 Х__Х__Х__Х__-__АДРЕС СЛОВА @О@З@У ОБМЕНА
#НА #Б #ВС8 _
#А0 #Ц ТАБЛИЦА 22
#А0 #Ц АДРЕС ВЫБОРКИ УСЛОВИЯ
#А0 #Ц CONDITION (COND)
#НА #М _
#А0 Е_D_С_В_А
#А0 0_0_0_0_0_-_"ДА" #Б
#А0 0_0_0_0_1_-_БНОР
#А0 0_0_0_1_0_-_БОКР
#А0 0_0_0_1_1_-_БПП
#А0 0_0_1_0_0_-_ББЧ
#А0 0_0_1_0_1_-_БППУ
#А0 0_0_1_1_0_-_РД
#А0 0_0_1_1_1_-_РЭ
#А0 0_1_0_0_0_-_ППК
#А0 0_1_0_0_1_-_ПИА #М
#А0 0_1_0_1_0_-_20-Й РАЗРЯД #Б РР (РЭС)
#А0 0_1_0_1_1_-_СТ СУСС #М _
#А0 0_1_1_0_0_-_СЛЕД1 #Б _
#А0 0_1_1_0_1_-_ПОП
#А0 0_1_1_1_0_-_ИР15
#А0 0_1_1_1_1_-_ТКК #М
#А0 1_0_0_0_0_-_"ПУСК"
#А0 1_0_0_0_1_-_ОТСУТСТВИЕ ГОТОВНОСТИ УМНОЖИТЕЛЯ
#А0 1_0_0_1_0_-_5 РАЗРЯД СТАТУСНОГО РЕГИСТРА @Ц@П
#А0 1_0_0_1_1_-_ПРИЗНАК НАЛИЧИЯ ПРЕРЫВАНИЙ
#А0 1_0_1_0_0_-_@О@З@У @Б@М@С@П ЕДИНИЦАМИ ЗАПОЛНЕНО
#А0 1_0_1_0_1_-_ГОТОВНОСТЬ АРБИТРА
#А0 1_0_1_1_0_-_
#А0 1_0_1_1_1_-_@О@З@У ОБМЕНА "ЦП->ПП" ПРОЧИТАНО ("1");
#СГ12 FFCNT29 УСТАНАВЛИВАЕТ ЕГО В "0";
 @П@П КОМАНДОЙ #Б OUT 7F #М УСТАНАВЛИВАЕТ В "1". #СГ0
#А0 1_1_0_0_0_-_
#А0 1_1_0_0_1_-_
#А0 1_1_0_1_0_-_
#А0 1_1_0_1_1_-_
#А0 1_1_1_0_0_-_
#НА #Б #ВС7 _
#А0 #Ц ЗНАЧЕНИЯ ОДНОБИТОВЫХ ПОЛЕЙ МИКРОИНСТРУКЦИИ
#НА #М
#А0 @A@L@U__-_РАЗРЕШЕНИЕ ВЫХОДА #Б У МПС (ОЕ МПС) #М
#А0 @Н____-_В ОПЕРАЦИИ @А@Л@У УЧАСТВУЮТ 32 (0) ИЛИ 64 (1) РАЗРЯДА @@М@П@С
#А0 @M@O@D__-_РЕЖИМ КОМАНД #Б RMOD, WMOD #М
#А0 @R@L@D__-_ЗАГРУЗКА В РГ/СЧ @С@У@А@М (СИГНАЛ @R@L@D) #СГ7
 И УПРАВЛЕНИЕ @Ш@Ф ШИН #Б У ЦП &И D СУАМ; #М #СГ0
#А0 @L@E@T@C_-_ПРОПУСК @П@И@А НА ВХОД @П@Н@А @К@О@П
#А0 @S@C@I__-_УСЛОВИЕ, ВЫБИРАЕМОЕ ПОЛЕМ @C@O@N@D, #СГ7
 ПОДАЕТСЯ НА ВХОД @C@I @С@У@А@М ("ЖДУ");
 ЕСЛИ @S@C@I НЕ ЗАДАНО, #Б CI СУАМ #М РАВЕН 1. #СГ0
#А0 @I@C@I__-_ИНВЕРСИЯ УСЛОВИЯ, ПОДАВАЕМОГО #СГ7
 НА ВХОД @C@I @С@У@А@М. #СГ0
#А0 @I@C@C__-_ИНВЕРСИЯ УСЛОВИЙ, ВЫБИРАЕМЫХ ПОЛЕМ @C@O@N@D
#А0 @I@S@E__-_ПРИЗНАК ПОСЛЕДНЕЙ МИКРОИНСТРУКЦИИ, #СГ7
 РАЗРЕШАЮЩИЙ ПРОХОЖДЕНИЕ НЕКОТОРЫХ ПРЕРЫВАНИЙ
 И КОПИРОВАНИЕ #Б ТКК &В ППК #М
 (INTERRUPT STROBE ENABLE) #СГ0
#А0 @С@Е@М__-_РАЗРЕШЕНИЕ ЗАПИСИ В РЕГИСТР #Б М СУСС (/СЕМ) #М
#А0 @C@E@N__-_РАЗРЕШЕНИЕ ЗАПИСИ В РЕГИСТР @N @С@У@С@С (/@C@E@N)
#А0 @C@S@M__-_ОБРАЩЕНИЕ К @О@З@У МОДИФИКАТОРОВ
#А0 @W@E@M__-_ЗАПИСЬ В @О@З@У МОДИФИКАТОРОВ #СГ7
 (WRITE ENABLE MODIFICATOR) #СГ0
#А0 @Е@С@В__-_ВЫБОР КАНАЛА @В @Б@О@И ДАННЫХ
#А0 @W@R@B__-_ЗАПИСЬ ПО КАНАЛУ @В В @Б@О@И ДАННЫХ И @Б@О@И ТЕГА
#А0 @Е@С@А__-_ВЫБОР КАНАЛА @А @Б@О@И ДАННЫХ
#А0 @W@R@A__-_ЗАПИСЬ ПО КАНАЛУ @А В @Б@О@И ДАННЫХ
#А0 @W@R@Y__-_ЗАПИСЬ В ИСТОЧНИКИ/ПРИЕМНИКИ ШИНЫ @У
#А0 @W@R@D__-_ЗАПИСЬ В ИСТОЧНИКИ/ПРИЕМНИКИ ПОЛЯ @D@D@E@V
#А0 @I@O@M@P_-_ВЫБОР @О@З@У ОБМЕНА, СИГНАЛОВ @А1@А0 ДЛЯ ТАЙМЕРОВ #СГ7
 ИЛИ ДЕШИФРАТОРА ТРИГГЕРОВ ПРИЗНАКОВ:
#А0 "1"_-_7:10 РАЗРЯДЫ ПОЛЯ @М@П - АДРЕС @О@З@У ОБМЕНА;
#А0 "1"_-_7:8 РАЗРЯДЫ - СИГНАЛЫ @А1@А0 ЧАСОВ И ТАЙМЕРОВ;
#А0 "0"_-_7:11  - УПРАВЛЕНИЕ ТРИГГЕРАМИ ПРИЗНАКОВ. #СГ0
#А0 @M@P@S__-_ЗАДАНИЕ ПАРАМЕТРА СДВИГА:
#А7 1_-_ИЗ МИКРОПРОГРАММЫ (56:62 РАЗРЯДЫ);
#А7 0_-_В РЕГИСТРЕ ПАРАМЕТРА СДВИГА.
#НОВСЦ
#А0 #Б
#Ц 6.4.НЕКОТОРЫЕ БИС, ВХОДЯЩИЕ В СОСТАВ ЦП, И ИХ ИСПОЛЬЗОВАНИЕ
#А0 _
#А0 #Ц 6.4.1.БЛОК ОБМЕНА ИНФОРМАЦИЕЙ _(_@Б_@О_@И_)  #А0 #М
#НА ОБМЕН ИНФОРМАЦИЕЙ МЕЖДУ
 ЦЕНТРАЛЬНЫМИ ПРОЦЕССОРАМИ,
 @О@З@У И ВНЕШНИМИ УСТРОЙСТВАМИ
 ОСУЩЕСТВЛЯЕТСЯ 16 4-РАЗРЯДНЫМИ #Б БИС #М ТИПА @К1802@В@В1,
 ИСПОЛЬЗУЕМЫМИ
 ДЛЯ ЧТЕНИЯ, ЗАПИСИ КОМАНД И ДАННЫХ,
 И СХЕМОЙ ИЗ 2 АНАЛОГИЧНЫХ @Б@И@С
 ДЛЯ ЧТЕНИЯ, ЗАПИСИ ТЕГА.
#А0 _
#А0 #Ц СТРУКТУРНАЯ_СХЕМА_БОИ__
#А0 _
#А15 ______А_______________А
#А15 ______I_______________I_
#А15 ____4_V_А___________4_V_Х
#А15 -----------------------------_<---_А0-А1
#А15 I___________________________I_<---_ЕС
#А15 I____RG0,_RG1,_RG2,_RG3_____I_<---_R
#А15 I___________________________I_<---_W
#А15 -----------------------------
#А15 ____4_А_В___________4_А_С
#А15 ______I_______________I
#А15 ______V_______________V
#А0 _
#НА @Б@О@И СОДЕРЖИТ 4 РЕГИСТРА: #Б RG0,RG1,RG2,RG3. #М
 ВВОД И ВЫВОД
 ДАННЫХ В РЕГИСТРЫ ПРОИЗВОДИТСЯ ПО 4-М КАНАЛАМ: @А,@В,@С,@Х.
 КАНАЛ @Х МОЖЕТ ИСПОЛЬЗОВАТЬСЯ ДЛЯ ВЫДАЧИ ИНФОРМАЦИИ
 НА ДЛИННЫЕ ЛИНИИ СВЯЗИ; ОН ПОДКЛЮЧЕН
 К ОБЩЕЙ ШИНЕ ДАННЫХ.
#НА РАЗРЕШЕНИЕМ ОБМЕНА ИНФОРМАЦИЕЙ С КАНАЛАМИ УПРАВЛЯЮТ
 СИГНАЛЫ #Б /ЕСА, /ЕСВ, /ЕСС, /ЕСХ #М (@ENABLE @CHANNEL) #М
 (ЗДЕСЬ И ДАЛЕЕ СИМВОЛ "/" ОЗНАЧАЕТ ИНВЕРТИРОВАННЫЙ СИГНАЛ).
 ПРИ "0" НА ЭТИХ ВХОДАХ РАЗРЕШЕН ОБМЕН ИНФОРМАЦИЕЙ ВЫБРАННОГО
 РЕГИСТРА С СООТВЕТСТВУЮЩИМ КАНАЛОМ.
 ВЫБОРКА РЕГИСТРА ОСУЩЕСТВЛЯЕТСЯ ПОДАЧЕЙ 2-РАЗРЯДНОГО
 ДВОИЧНОГО КОДА
 НА АДРЕСНЫЕ ВХОДЫ #Б АА0-АА1, АВ0-АВ1, АС0-АС1, АХ0-АХ1. #М
#НА СИГНАЛЫ #Б /RА, /RВ, /RС, /RХ #М (@READ) РАЗРЕШАЮТ СЧИТЫВАНИЕ
 ВЫБРАННЫХ
 РЕГИСТРОВ  ПО КАНАЛАМ #Б А,В,С,Х. #М
 СИГНАЛЫ #Б /WА, /WВ, /WС, /WХ #М (@WRITE) - РАЗРЕШАЮТ ЗАПИСЬ,
 ПРИЧЕМ  ЗАПИСЬ В @R@G0 ПРОИЗВОДИТСЯ
 "ФРОНТОМ", А В ОСТАЛЬНЫЕ РЕГИСТРЫ - "ПОТЕНЦИАЛОМ".
#НА #ВС7 _
#А0 #Ц ИСПОЛЬЗОВАНИЕ РЕГИСТРОВ : #А0
#ПЕРН @R@G0 - ФИЗИЧЕСКИЙ АДРЕС СЛОВА В @О@З@У
 (КОМАНДЫ ИЛИ ОПЕРАНДА), ИСПОЛЬЗУЮТСЯ
 ТОЛЬКО МЛАДШИЕ 20 РАЗРЯДОВ;
#А0 В @Б@О@И ТЕГА - НЕ ИСПОЛЬЗУЕТСЯ.
#ПЕРН @R@G1 - РЕГИСТР КОМАНДНОГО СЛОВА;
 В СТАРШИХ 32 РАЗРЯДАХ - КОД
 ЛЕВОЙ КОМАНДЫ, В МЛАДШИХ - ПРАВОЙ;
#А0 В @Б@О@И ТЕГА - ТЕГ КОМАНДЫ.
#ПЕРН @R@G2 - РЕГИСТР ОПЕРАНДА, 64 РАЗРЯДА;
#А0 В @Б@О@И ТЕГА - ТЕГ ОПЕРАНДА, 8 РАЗРЯДОВ.
#ПЕРН @R@G3 - РЕГИСТР РЕЗУЛЬТАТА, 64 РАЗРЯДА;
#А0 В @Б@О@И ТЕГА - ТЕГ РЕЗУЛЬТАТА, 8 РАЗРЯДОВ.
#НА #ВС7 _
#А0 #Ц  ИСПОЛЬЗОВАНИЕ КАНАЛОВ : #А0
#ПЕРН @Х__-_СЧИТЫВАНИЕ ФИЗИЧЕСКОГО АДРЕСА ИЗ @R@G0
 НА ОБЩУЮ ШИНУ;
#А0 -_ЗАПИСЬ КОМАНДНОГО СЛОВА И ТЕГА КОМАНДЫ С
 ОБЩЕЙ ШИНЫ В @R@G1;
#А0 -_ЗАПИСЬ ОПЕРАНДА И ТЕГА ОПЕРАНДА С ОБЩЕЙ ШИНЫ
 В @R@G@2;
#А0 -_ЧТЕНИЕ РЕЗУЛЬТАТА И ТЕГА РЕЗУЛЬТАТА
 ИЗ @R@G@3 НА ОБЩУЮ ШИНУ.
#ПЕРН @А__-_ЧТЕНИЕ, ЗАПИСЬ С ШИНЫ @D @Ц@П
 ДАННЫХ
 В РЕГИСТРЫ @Б@О@И (В ЧАСТНОСТИ, В @R@G2 И @R@G3).
#ПЕРН @В__-_ЧТЕНИЕ, ЗАПИСЬ ДАННЫХ С ШИНЫ @У @Ц@П;
#А0 -_ЧТЕНИЕ, ЗАПИСЬ ТЕГА С ШИНЫ @У.
#ПЕРН @С__-_ЧТЕНИЕ ЛЕВОЙ, ПРАВОЙ КОМАНДЫ ИЗ @R@G1.
#НА #ВС6 _
#А0 #Ц ИСПОЛЬЗОВАНИЕ СИГНАЛОВ: #А0 _
#НА ПРИ НАЛИЧИИ СИГНАЛОВ /@W И /@Е@С ПРИ ОБРАЩЕНИЯХ
 К @Б@О@И ПРОИСХОДИТ ЗАПИСЬ В СООТВЕТСТВУЮЩИЙ РЕГИСТР.
 ПРИ НАЛИЧИИ СИГНАЛА /@Е@С И ОТСУТСТВИИ /@W
 ПРОИСХОДИТ ЧТЕНИЕ ВНУТРЕННЕГО РЕГИСТРА.
 СИГНАЛАМИ КАНАЛОВ, ОБРАЩЕННЫМИ К ВНЕШНЕЙ
 ШИНЕ ДАННЫХ #Б (/WХ, /ЕСХ, АХ0-АХ1), #М УПРАВЛЯЕТ
 АРБИТР ШИНЫ. КОД АДРЕСА РЕГИСТРА КАНАЛА @С
 #Б АС0-АС1 #М ВСЕГДА РАВЕН 10. СИГНАЛАМИ #Б /WА, /WВ, /ЕСА, /ЕСВ
 #М УПРАВЛЯЕТ МИКРОПРОГРАММА.
 ЗНАЧЕНИЯ #Б АА0-АА1, АВ0-АВ1 #М ЗАДАЮТСЯ
 ТАКЖЕ В МИКРОПРОГРАММЕ.
#НОВСЦ _
#Б
#А0 #Ц  6.4.2.МИКРОПРОЦЕССОРНАЯ_СЕКЦИЯ__(К1804ВС1)
#НА ЧЕТЫРЕХРАЗРЯДНАЯ МИКРОПРОЦЕССОРНАЯ
 СЕКЦИЯ #Б (МПС) #М СОСТОИТ ИЗ ЧЕТЫРЕХ
 ОСНОВНЫХ БЛОКОВ: ВНУТРЕННЕЙ
 ПАМЯТИ, @А@Л@У, РЕГИСТРА @Q И УПРАВЛЕНИЯ.
#НА  #А0 #Ц СТРУКТУРНАЯ СХЕМА @М@П@С:__
#НА
#А0 БЛОК_ВНУТРЕННЕЙ
#А0 ____ПАМЯТИ_________-------------------
#А0 ___________________I________________4I
#А0 ___________________V_________________I
#А0 _______PR3_-----------------_PR0_____I
#А0 _______<-->I____С__Д__А____I<-->_____I
#А0 ___________-----------------_________I
#А0 ___________________I_4_______________I_____БЛОК_РЕГИСТРА_Q
#А0 ___________________V_________________I
#А0 __А0-А3__4_-----------------_________I__________------------
#А0 __-------->I_______________I_________I__________I__________I
#А0 __В0-В3__4_I____Р__З__У____I_________I__________V__________I
#А0 __-------->I_______________I_________I_PQ3_-----------_PQ0_I
#А0 ___________-----------------_________I_<-->I__С_Д_Р__I<-->_I
#А0 _______________I_______I_____________I_____-----------_____I
#А0 _______________V_______V_____________I------____I__________I
#А0 ___________--------_--------_________I______I___I_4________I
#А0 Т---->_____I_РГ.А_I_I_РГ.В_I_________I______V___V__________I
#А0 ___________--------_--------_________I_____-----------_____I
#А0 _______________I_______I_____________I_____I__РГ._Q__I_____I
#А0 _______________I4______I4____________I_____-----I-----_____I
#А0 _____----------I_______I_____________I__________V__________I
#А0 _____I_________I_______I___----------+----------------------
#А0 D0-D3I_________I__"0"__I___I_________I___________
#А0 -----+------___I___I___I___I_________I___________
#А0 _____I____4I___I___I4__I___I4________I
#А0 _____I_____V___V___V___V___V_________I
#А0 _____I_---------------------------___I
#А0 _____I_I____D___А___0___В___Q____I___I
#А0 _____I_I__________С_И_Д__________I___I_
#А0 _____I_---------------------------___I________УПРАВЛЯЮЩИЕ
#А0 _____I____I_4_________________I_4____I__________СИГНАЛЫ
#А0 _____I____V___________________V______I__________А....А
#А0 _____I_--------___________--------___I__________I....I
#А0 _С4<-+-\___R___\_________/___S___/___I______--------------
#А0 _/G<-+--\_______---------_______/____I______I____БЛОК____I
#А0 _/Р<-+---\_______А__Л__У_______/__С0_I______I_УПРАВЛЕНИЯ_I
#А0 OVR<-+----\___________________/<----_I______--------------
#А0 __Z<-+-----\________F________/_______I_________А___А___А
#А0 _F3<-+------\---------------/________I_________I___I___I
#А0 _____I______________I________________I_________I___I_I2-I0
#А0 _____-----------I___I-----------------_________I_I5-I3
#А0 ________________V___V________________________I8-I6
#А0 _____________---------------
#А0 _____________I___С__В__Д___I_________________БЛОК_УПРАВЛЕНИЯ
#А0 _____________---------------
#А0 АРИФМЕТИЧЕСКО-______I_4_
#А0 __ЛОГИЧЕСКИЙ________I<------/ОЕ
#А0 _____БЛОК___________V_У
#НА #Б БЛОК ВНУТРЕННЕЙ ПАМЯТИ #М
 СОДЕРЖИТ РЕГИСТРОВОЕ ЗАПОМИНАЮЩЕЕ
 УСТРОЙСТВО (@Р@З@У) С ДВУМЯ
 НЕЗАВИСИМЫМИ КАНАЛАМИ ВЫБОРА
 ИНФОРМАЦИИ.
 ВЫБОР ИЗ БЛОКА ВНУТРЕННЕЙ ПАМЯТИ
 ЛЮБОГО РЕГИСТРА
 В КАЧЕСТВЕ ИСТОЧНИКА ИНФОРМАЦИИ
 ОСУЩЕСТВЛЯЕТСЯ СИГНАЛАМИ НА АДРЕСНЫХ
 ВХОДАХ @А0-@А3 ИЛИ @В0-@В3. ИЗ @Р@З@У
 МОГУТ БЫТЬ ОДНОВРЕМЕННО СЧИТАНЫ 2 СЛОВА,
 ПРИ ЭТОМ, ЕСЛИ НА АДРЕСНЫХ
 ВХОДАХ УСТАНОВЛЕНЫ ОДИНАКОВЫЕ АДРЕСА,
 НА ОБОИХ ВЫХОДАХ @Р@З@У ПОЯВЯТСЯ
 ИДЕНТИЧНЫЕ ДАННЫЕ.
#НА ЗАПИСЬ ДАННЫХ ПРОИЗВОДИТСЯ В РЕГИСТР,
 АДРЕСУЕМЫЙ СИГНАЛАМИ
 @В0-@В3.
 МОМЕНТОМ НАЧАЛА ЗАПИСИ
 ЯВЛЯЕТСЯ МОМЕНТ ПЕРЕХОДА ТАКТОВОГО
 СИГНАЛА @Т ИЗ "1" В "0".
 С ЭТОГО МОМЕНТА ИНФОРМАЦИЯ
 НА ВЫХОДАХ ИЗ РЕГИСТРОВ @А И @В
 ФИКСИРУЕТСЯ, ЧТО УСТРАНЯЕТ
 НЕОПРЕДЕЛЕННОСТЬ В КОЛЬЦЕ ПЕРЕДАЧИ ИНФОРМАЦИИ
 С ВЫХОДА БЛОКА ВНУТРЕННЕЙ ПАМЯТИ НА ЕГО ВХОД.
#НА ИНФОРМАЦИЯ
 ПЕРЕД ЗАПИСЬЮ В @Р@З@У МОЖЕТ
 БЫТЬ СДВИНУТА ВЛЕВО ИЛИ ВПРАВО НА 1
 РАЗРЯД. ЭТУ ОПЕРАЦИЮ
 ВЫПОЛНЯЕТ СДВИГАТЕЛЬ ДАННЫХ @С@Д@А.
 P@R0, @P@R3 - СИГНАЛЫ НА ДВУНАПРАВЛЕННЫХ
 ВЫВОДАХ @М@П@С, ВОЗНИКАЮЩИЕ ПРИ ВЫПОЛНЕНИИ
 ОПЕРАЦИИ СДВИГА ПЕРЕД
 ЗАПИСЬЮ В @Р@З@У.
#НА #Б АРИФМЕТИЧЕСКО-ЛОГИЧЕСКИЙ БЛОК #М ВКЛЮЧАЕТ
 ДВУХВХОДОВОЕ АРИФМЕТИЧЕСКО-ЛОГИЧЕСКОЕ УСТРОЙСТВО (@А@Л@У),
 ВЫПОЛНЯЮЩЕЕ 8 ЛОГИЧЕСКИХ
 И АРИФМЕТИЧЕСКИХ ОПЕРАЦИЙ И
 ФОРМИРУЮЩЕЕ 4 ПРИЗНАКА РЕЗУЛЬТАТА: ПЕРЕНОС
 ИЗ СТАРШЕГО РАЗРЯДА @С4,
 ПЕРЕПОЛНЕНИЕ @O@V@R, ЗНАК ИЛИ СОДЕРЖИМОЕ
 СТАРШЕГО РАЗРЯДА НА ВЫХОДЕ @F3 @А@Л@У
 И ПРИЗНАК НУЛЕВОГО ЗНАЧЕНИЯ @Z ВСЕХ
 ВЫХОДОВ @А@Л@У.
 НА ВХОДАХ @А@Л@У ВКЛЮЧЕН СЕЛЕКТОР
 ИСТОЧНИКА ДАННЫХ (@С@И@Д),
 ПОЗВОЛЯЮЩИЙ ВЫБИРАТЬ В КАЧЕСТВЕ
 ПАРЫ ОПЕРАНДОВ @А@Л@У ИНФОРМАЦИЮ
 ИЗ 5 ИСТОЧНИКОВ: С ВНЕШНЕЙ ШИНЫ
 ДАННЫХ @D0-@D3, С КАНАЛОВ @А И @В
 @Р@З@У, ИЗ ДОПОЛНИТЕЛЬНОГО
 РЕГИСТРА @Q ИЛИ НУЛЕВУЮ
 КОНСТАНТУ. С ВЫХОДА @А@Л@У
 ИНФОРМАЦИЯ ПОДАЕТСЯ НА СЕЛЕКТОР
 ВЫХОДНЫХ ДАННЫХ (@С@В@Д). НА
 ВТОРОЙ ВХОД СЕЛЕКТОРА ИНФОРМАЦИЯ
 МОЖЕТ БЫТЬ ПЕРЕДАНА ПРЯМО
 С ВЫХОДА @А @Р@З@У, МИНУЯ
 @А@Л@У. С ВЫХОДА @С@В@Д
 ИНФОРМАЦИЯ ПЕРЕДАЕТСЯ НА ВЫХОДНУЮ
 ШИНУ @У. РАЗРЕШЕНИЕМ ВЫДАЧИ ИНФОРМАЦИИ
 ЧЕРЕЗ @У-ВЫХОДЫ УПРАВЛЯЕТ СИГНАЛ /@О@Е.
#НА ВЫБОР ИСТОЧНИКОВ ДАННЫХ
 НА ВХОДЫ  @R И @S @А@Л@У
 ЗАДАЕТСЯ
 СИГНАЛАМИ МИКРОКОМАНДЫ @I0-@I2, ПРИЕМНИКА РЕЗУЛЬТАТА - СИГНАЛАМИ
 @I6-@I8, ФУНКЦИИ - СИГНАЛАМИ @I3-@I5.
#НА АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ В @А@Л@У
 ВЫПОЛНЯЮТСЯ С УЧЕТОМ ЗНАЧЕНИЯ
 СИГНАЛА ВХОДНОГО ПЕРЕНОСА @С0
 ПО ПРАВИЛАМ ДОПОЛНИТЕЛЬНОГО
 КОДА ПРИ ПРЕДСТАВЛЕНИИ
 ОТРИЦАТЕЛЬНЫХ ЧИСЕЛ.
 (В ЧАСТНОСТИ, ПРИ ВЫПОЛНЕНИИ ОПЕРАЦИИ
 ВЫЧИТАНИЯ
 @С0 УСТАНАВЛИВАЕТСЯ В 1 ДЛЯ
 ПРЕДСТАВЛЕНИЯ РЕЗУЛЬТАТА В ДОПОЛНИТЕЛЬНОМ КОДЕ).
#НА #Б БЛОК РЕГИСТРА Q #М СОСТОИТ
 ИЗ ДОПОЛНИТЕЛЬНОГО РЕГИСТРА @Q И СДВИГАТЕЛЯ
 РЕГИСТРА (@С@Д@Р), КОТОРЫЙ ПОЗВОЛЯЕТ
 ЗАПИСЫВАТЬ ИНФОРМАЦИЮ В РЕГИСТР @Q С ВЫХОДА @А@Л@У
 И СДВИГАТЬ СОДЕРЖИМОЕ РЕГИСТРА @Q ВПРАВО
 ИЛИ ВЛЕВО НА 1 РАЗРЯД.
 P@Q0, @P@Q3 - СИГНАЛЫ НА ДВУНАПРАВЛЕННЫХ
 ВЫВОДАХ @М@П@С, ВОЗНИКАЮЩИЕ ПРИ
 ВЫПОЛНЕНИИ ОПЕРАЦИИ СДВИГА
 ИНФОРМАЦИИ ПЕРЕД ЗАПИСЬЮ В РЕГИСТР @Q.
#НА #Б БЛОК УПРАВЛЕНИЯ #М ФОРМИРУЕТ УПРАВЛЯЮЩИЕ
 СИГНАЛЫ ДЛЯ ОСТАЛЬНЫХ БЛОКОВ @М@П@С
 В ЗАВИСИМОСТИ ОТ СИГНАЛОВ
 КОДА МИКРОКОМАНДЫ @I0-@I8.
#НА АРИФМЕТИЧЕСКИЕ И ЛОГИЧЕСКИЕ
 ОПЕРАЦИИ В @Ц@П С 64-РАЗРЯДНЫМИ
 ДАННЫМИ ПРОИЗВОДЯТСЯ
 СХЕМОЙ ИЗ 16 4-РАЗРЯДНЫХ
 МИКРОПРОЦЕССОРНЫХ СЕКЦИЙ.
 АДРЕСНЫЕ ВЫЧИСЛЕНИЯ И АРИФМЕТИЧЕСКИЕ
 ОПЕРАЦИИ НАД МОДИФИКАТОРАМИ
 (32 РАЗРЯДА) ВЫПОЛНЯЮТСЯ СХЕМОЙ
 ИЗ 8 @М@П@С, СООТВЕТСТВУЮЩЕЙ
 МЛАДШЕЙ ПОЛОВИНЕ 64-РАЗРЯДНОЙ СХЕМЫ,
 ПРИЧЕМ СИГНАЛЫ ВЫХОДНОГО
 ПЕРЕНОСА, ЗНАКОВОГО РАЗРЯДА,
 ПЕРЕПОЛНЕНИЯ И НУЛЕВОГО
 РЕЗУЛЬТАТА
 ФОРМИРУЮТСЯ В ЗАВИСИМОСТИ
 ОТ ТИПА ДАННЫХ (64 ИЛИ 32).
#НА _
#А0 #Ц ИСПОЛЬЗОВАНИЕ СИГНАЛОВ:
#НА СИГНАЛАМИ #Б I0-I8, А0-А3, В0-В3,
 /ОЕ, С0 #М УПРАВЛЯЕТ МИКРОПРОГРАММА;
 СИГНАЛЫ @D0-@D3 ПОСТУПАЮТ
 С ВХОДНОЙ ШИНЫ #Б D ЦП; У0-У3 #М ВЫХОДЯТ
 НА ШИНУ #Б У ЦП; #М СИГНАЛЫ #Б С4, F4, OVR, Z,
 PR0, PR3, PQ0, PQ3 #М ПЕРЕДАЮТСЯ
 НА СХЕМУ УПРАВЛЕНИЯ СОСТОЯНИЕМ И СДВИГАМИ @К1804@В@Р2,
 И ДАЛЕЕ - НА МУЛЬТИПЛЕКСОР УСЛОВИЙ; /@Р И @G
 ИСПОЛЬЗУЮТСЯ ЛДЯ ФОРМИРОВАНИЯ УСКОРЕННОГО
 ПЕРЕНОСА.
#НОВСЦ #Б #НА #Б
#А0 #Ц 6.4.3.СХЕМА УПРАВЛЕНИЯ СОСТОЯНИЕМ И СДВИГАМИ (К1804ВР2)
#НА _ #А0 _ #М
#А0 _____________________________________БЛОК_ОБРАБОТКИ
#А0 _____________________IZ,IN,IV,IС________ПРИЗНАКОВ
#А0 __________________________I
#А0 __________________________I_4
#А0 ____________--------------+-------------
#А0 ____________I_________----+---------___I
#А0 ____________I___------+---+----____I___I___-------
#А0 __________4_I___I_____I___I___I____I_4_I_4_I_4___I
#А0 ____________V___V_____I___I___I____V___V___V_____I
#А0 _______------------___I___I___I___------------___I
#А0 _______I___MUXN___I___I___I___I___I___MUXM___I___I
#А0 _______------------___I___I___I___------------___I
#А0 ____________I_4_______I___I___I________I_4_______I
#А0 ____________V_________I___I___I________V_________I
#А0 __/CEN_------------___I___I___I___------------___I/СЕМ
#А0 __---->I___РГ.N___I___I___I___I___I___РГ.М___I<--+----
#А0 _______------------___А___I___А___------------___I_/EV
#А0 ____________I_________I_4_I_4_I_4______I_________I_/EZ
#А0 ____________----------I___I___----------_________I_/EN
#А0 I*____________________V___V___V__________________I_/ЕС
#А0 __А__А__А__А_______---------------_______________I
#А0 __I__I__I__I_______I___MUX_ВЫХ___I_______________А
#А0 --------------_____---------------_______________I
#А0 I____БЛОК____I____________I______________________I
#А0 I_УПРАВЛЕНИЯ_I____________I------------>-----------------<--->
#А0 --------------____________V__________4_____________YZ,YN,YV,УС
#А0 ______А__________------------------
#А0 ______I_6________I_СХЕМА_ПРОВЕРКИ_I
#А0 ____I0-I5________I_____УСЛОВИЯ____I
#А0 _________________------------------
#А0 __________________________I___________/ОЕСТ
#А0 __________________________I<---------------
#А0 _______________________СТ_V___БЛОК_ПРОВЕРКИ
#А0 ________________________________УСЛОВИЯ
#А0 _
#А0 _______СХ__"0"_"1"__МС__NС_________"0"_"1"_МС__MN__IС_IN$IV
#А0 ________I___I___I___I___I___________I___I___I___I___I___I
#А0 ________V___V___V___V___V___________V___V___V___V___V___V
#А0 ____2__-------------------_______PF3---------------------PF0
#А0 ------>I_БЛОК_УПРАВЛЕНИЯ_I<--____<->I_ БЛОК_УПРАВЛЕНИЯ__I<->
#А0 I11,I12I____ПЕРЕНОСОМ____I_I*____PQ3I______СДВИГАМИ_____IPQ0
#А0 _______------------------________<->---------------------<->
#А0 ________________I_______________________А_____А_____I
#А0 ________________I_С0____________________I_____I5____V
#А0 ________________V______________________/SЕ__I6-I10__ЗАГРУЗКА
#А0 ____________________________________________________РАЗРЯДА_МС
#НА #НА СХЕМА УПРАВЛЕНИЯ СОСТОЯНИЕМ И
 СДВИГАМИ (@С@У@С@С)
 ПРЕДНАЗНАЧЕНА ДЛЯ ВЫПОЛНЕНИЯ РАЗЛИЧНЫХ
 ФУНКЦИЙ ОБСЛУЖИВАНИЯ @А@Л@У:
 ФОРМИРОВАНИЯ СИГНАЛА ВХОДНОГО ПЕРЕНОСА
 В @М@П@С И СХЕМУ УСКОРЕННОГО ПЕРЕНОСА;
 ОРГАНИЗАЦИИ СДВИГОВ; ВЫПОЛНЕНИЯ
 ОПЕРАЦИИ С РЕГИСТРАМИ СОСТОЯНИЯ;
 ПРОВЕРКИ ОДНОГО ИЗ 16
 УСЛОВИЙ,
 ПОСТУПАЮЩИХ С ВЫХОДОВ РЕГИСТРОВ СОСТОЯНИЯ
 ИЛИ @М@П@С. В СХЕМЕ @С@У@С@С
 МОЖНО ВЫДЕЛИТЬ 5 ОСНОВНЫХ БЛОКОВ:
 ОБРАБОТКИ ПРИЗНАКОВ, ПРОВЕРКИ УСЛОВИЯ,
 УПРАВЛЕНИЯ ПЕРЕНОСОМ, УПРАВЛЕНИЯ
 СДВИГАМИ, УПРАВЛЕНИЯ.
#НА #Б БЛОК ОБРАБОТКИ ПРИЗНАКОВ #М
 СОСТОИТ ИЗ ДВУХ 4-РАЗРЯДНЫХ
 РЕГИСТРОВ СОСТОЯНИЯ (РГ.N И РГ.М),
 ДВУХ ВХОДНЫХ МУЛЬТИПЛЕКСОРОВ #Б (MUXN
 &И MUXM) #М И ВЫХОДНОГО
 МУЛЬТИПЛЕКСОРА (@M@U@X @ВЫХ)
 И ПРЕДНАЗНАЧЕН ДЛЯ ХРАНЕНИЯ И МОДИФИКАЦИИ
 ПРИЗНАКОВ СОСТОЯНИЯ @М@П@С:
 ПЕРЕНОСА (@С), ЗНАКА (@N), ПЕРЕПОЛНЕНИЯ (@O@V@R)
 И НУЛЯ (@Z).
#НА В РГ.N ИНФОРМАЦИЯ ПОСТУПАЕТ С ВЫХОДА
 ДВУХВХОДОВОГО #Б MUXN. В #М ЗАВИСИМОСТИ
 ОТ СИГНАЛОВ МИКРОКОМАНДЫ @I0-@I5 В РГ.N
 МОЖЕТ БЫТЬ ЗАПИСАНА ИНФОРМАЦИЯ СО ВХОДОВ
 ПРИЗНАКОВ СОСТОЯНИЯ #Б (IС, IN, IV, IZ) #М
 ИЛИ С ВЫХОДОВ РГ.М #Б (МС, MN, MV, MZ), #М А
 ТАКЖЕ "0" ИЛИ "1". ДЛЯ ЗАПИСИ
 НЕОБХОДИМО, ЧТОБ СИГНАЛ РАЗРЕШЕНИЯ ЗАПИСИ
 /@C@E@N БЫЛ УСТАНОВЛЕН В "0".
  С РГ.N МОЖНО ВЫПОЛНЯТЬ
 ОПЕРАЦИИ ЗАГРУЗКИ РЕГИСТРА СО
 ВХОДОВ ПРИЗНАКОВ СОСТОЯНИЯ;
 РЕГИСТРОВЫЕ ОПЕРАЦИИ И ОПЕРАЦИИ С ОТДЕЛЬНЫМИ
 РАЗРЯДАМИ РЕГИСТРА.
 ОПЕРАЦИИ С БИТАМИ
 ПРЕДСТАВЛЯЮТ СОБОЙ УСТАНОВКУ
 В "0" ИЛИ "1" ОДНОГО ИЗ РАЗРЯДОВ
 РГ.N В ЗАВИСИМОСТИ ОТ СИГНАЛОВ
 МИКРОКОМАНДЫ @I0-@I5.
 РЕГИСТРОВЫЕ ОПЕРАЦИИ ПРЕДСТАВЛЯЮТ
 СОБОЙ ОПЕРАЦИИ СО ВСЕМ СЛОВОМ,
 ЗАПИСАННЫМ В РГ.N.
 В ЗАВИСИМОСТИ ОТ СИГНАЛОВ @I0-@I5
 ВЫПОЛНЯЕТСЯ ОДНА ИЗ ЧЕТЫРЕХ РЕГИСТРОВЫХ
 ОПЕРАЦИЙ: ЗАПИСЬ СОДЕРЖИМОГО РГ.М В РГ.N,
 РЕГИСТРОВЫЙ ОБМЕН ИЛИ УСТАНОВКА ВСЕХ РАЗРЯДОВ
 РГ.N В "0" ИЛИ "1". ОПЕРАЦИИ ЗАГРУЗКИ РЕГИСТРА ПРЕДСТАВЛЯЮТ
 СОБОЙ ЗАПИСЬ ИНФОРМАЦИ В РГ.N СО ВХОДОВ
 ПРИЗНАКОВ СОСТОЯНИЯ #Б (IС, IN, IV, IZ). #М
#НА В РГ.М ИНФОРМАЦИЯ ПОСТУПАЕТ С ВЫХОДА
 ТРЕХВХОДОВОГО @M@U@X@M. В ЗАВИСИМОСТИ ОТ
 ЗНАЧЕНИЯ СИГНАЛОВ
 @I0-@I5 В РГ.М МОЖЕТ БЫТЬ
 ЗАПИСАНА ИНФОРМАЦИЯ СО ВХОДОВ ПРИЗНАКОВ
 СОСТОЯНИИЯ, С ВЫХОДОВ РГ.N
 ИЛИ С ДВУНАПРАВЛЕННОЙ ШИНЫ #Б У (УС, YN, YV, YZ).
 #М КРОМЕ ТОГО, В КАЖДЫЙ РАЗРЯД РГ.М
 МОЖЕТ БЫТЬ ЗАПИСАН "0" ИЛИ "1".
 ДЛЯ ВЫПОЛНЕНИЯ ЗАПИСИ НЕОБХОДИМО,
 ЧТОБЫ НА ВХОДЕ РАЗРЕШЕНИЯ ЗАПИСИ В РГ.М
 (/@С@Е@М) БЫЛ УСТАНОВЛЕН "0".
#НА РГ.М ВЫПОЛНЯЕТ ОПЕРАЦИИ С БИТАМИ, СО
 СЛОВАМИ И ОПЕРАЦИИ ЗАГРУЗКИ РГ.М
 СО ВХОДОВ #Б IС, IN, IV, IZ.
 #М @ОПЕРАЦИИ С БИТАМИ РГ.М ВЫПОЛНЯЕТ С ПОМОЩЬЮ
 СИГНАЛОВ РАЗРЕШЕНИЯ ЗАПИСИ ПРИЗНАКОВ
#Б (/ЕС, /EN, /EV, /EZ).
 #М ПРИ "1" НА ВХОДЕ РАЗРЕШЕНИЯ ЗАПИСИ
 ПРИЗНАКА ЗАПРЕЩАЕТСЯ ЗАПИСЬ В СООТВЕТСТВУЮЩИЙ
 РАЗРЯД РГ.М. ПРИ "1" НА ВХОДЕ /@С@Е@М
 ЗАПРЕЩАЕТСЯ ЗАПИСЬ ВО ВСЕ РАЗРЯДЫ
 РГ.М.
#НА ИНФОРМАЦИЯ С ВЫХОДОВ РГ.N, РГ.М
 ИЛИ СО ВХОДОВ ПРИЗНАКОВ СОСТОЯНИЯ ЧЕРЕЗ
 ВЫХОДНОЙ МУЛЬТИПЛЕКСОР
 ПЕРЕДАЕТСЯ НА ДВУНАПРАВЛЕННУЮ
 ТРЕХСТАБИЛЬНУЮ ШИНУ @У.
 ЕСЛИ НА ВХОДАХ @I0-@I5 НУЛИ,
 ТО ШИНА @У ЯВЛЯЕТСЯ ВХОДНОЙ
 НЕЗАВИСИМО ОТ СИГНАЛА РАЗРЕШЕНИЯ
 ВЫВОДА ИНФОРМАЦИИ (/@О@Е@У).
 В ОСТАЛЬНЫХ СЛУЧАЯХ ШИНА @У
 ЯВЛЯЕТСЯ ВЫХОДНОЙ.
#НА #Б БЛОК ПРОВЕРКИ УСЛОВИЯ #М СОСТОИТ
 ИЗ СХЕМЫ ПРОВЕРКИ УСЛОВИЯ, МУЛЬТИПЛЕКСОРА СО СХЕМОЙ
 УПРАВЛЕНИЯ ПОЛЯРНОСТЬЮ И ПРЕДНАЗНАЧЕН
 ДЛЯ ФОРМИРОВАНИЯ ВЫХОДНОГО СИГНАЛА КОДА УСЛОВИЯ.
 ПОД ДЕЙСТВИЕМ СИГНАЛОВ @I3-@I0
 БЛОК ВЫПОЛНЯЕТ 16 ОПЕРАЦИЙ, РЕЗУЛЬТАТ
 КОТОРЫХ ПЕРЕДАЕТСЯ НА ВЫХОД КОДА УСЛОВИЯ (@С@Т).
 ВЫБОР ОПЕРАНДОВ ДЛЯ ВЫПОЛНЕНИЯ
 ОПЕРАЦИЙ В БЛОКЕ ОСУЩЕСТВЛЯЕТСЯ ПОД ДЕЙСТВИЕМ СИГНАЛОВ
 МИКРОКОМАНДЫ @I4, @I5.
#НА 4 ВЫПОЛНЯЕМЫЕ БЛОКОМ
 ПРОВЕРКИ УСЛОВИЯ ОПЕРАЦИИ ПРЕДСТАВЛЯЮТ
 СОБОЙ ПЕРЕДАЧУ ОДНОГО ИЗ
 ПРИЗНАКОВ СОСТОЯНИЯ НА ВЫХОД @С@Т.
 ДРУГИЕ 4 ОПЕРАЦИИ ИСПОЛЬЗУЮТСЯ
 ПОСЛЕ ОКОНЧАНИЯ ОПЕРАЦИЙ ВЫЧИТАНИЯ
 (@А-@В) В @А@Л@У
 ДЛЯ ВЫПОЛНЕНИЯ УСЛОВИЙ
 @А=@В, @А/=@В, @А>=@В И Т.Д.
 ПРИ ЭТОМ ЧИСЛА @А И @В
 МОГУТ БЫТЬ ПРЕДСТАВЛЕНЫ В ДОПОЛНИТЕЛЬНОМ
 КОДЕ ИЛИ КАК ЧИСЛА БЕЗ ЗНАКА.
 ЗАТЕМ РЕЗУЛЬТАТ ОДНОЙ ИЗ ЭТИХ
 8 ОПЕРАЦИЙ ВЫБИРАЕТСЯ МУЛЬТИПЛЕКСОРОМ
 ДЛЯ ПЕРЕДАЧИ НА ВХОД СХЕМЫ УПРАВЛЕНИЯ
 ПОЛЯРНОСТЬЮ, КОТОРАЯ ПРИ НЕОБХОДИМОСТИ
 ИНВЕРТИРУЕТ ЭТОТ РЕЗУЛЬТАТ.
 ПОЭТОМУ ОСТАЛЬНЫЕ 8 ОПЕРАЦИЙ,
 ВЫПОЛНЯЕМЫХ БЛОКОМ, ПРЕДСТАВЛЯЮТ СОБОЙ
 ИНВЕРСИЮ ПЕРВЫХ 8 ОПЕРАЦИЙ.
 РЕЗУЛЬТАТ ПРОВЕРКИ УСЛОВИЯ
 С ВЫХОДА СХЕМЫ УПРАВЛЕНИЯ
 ПОЛЯРНОСТЬЮ ПОСТУПАЕТ
 НА ШИНУ @С@Т, УПРАВЛЯЕМУЮ
 СИГНАЛОМ РАЗРЕШЕНИЯ КОДА УСЛОВИЯ (/@О@Е@С@Т).
#НА #Б БЛОК УПРАВЛЕНИЯ ПЕРЕНОСОМ #М ФОРМИРУЕТ
 СИГНАЛ ВХОДНОГО ПЕРЕНОСА @С0 ПОД
 ДЕЙСТВИЕМ СИГНАЛОВ МИКРОКОМАНДЫ @I12, @I11, @I5, @I3-@I1.
 ПРИ ЭТОМ В КАЧЕСТВЕ ВХОДНОГО ПЕРЕНОСА
 ВЫБИРАЕТСЯ ОДИН ИЗ 7 ИСТОЧНИКОВ
 #Б ("0", "1", СХ, NС, МС, /NС, /МС), #М ЧТО
 ПОЗВОЛЯЕТ ЛЕГКО РЕАЛИЗОВАТЬ
 ОПЕРАЦИИ СЛОЖЕНИЯ И ВЫЧИТАНИЯ
 ЧИСЕЛ ОБЫЧНОЙ И ДВОЙНОЙ ДЛИНЫ.
#НА #Б БЛОК УПРАВЛЕНИЯ СДВИГАМИ #М ПРЕДНАЗНАЧЕН
 ДЛЯ ОРГАНИЗАЦИИ
 АРИФМЕТИЧЕСКИХ, ЛОГИЧЕСКИХ И ЦИКЛИЧЕСКИХ
 СДВИГОВ В ЗАВИСИМОСТИ ОТ СИГНАЛОВ МИКРОКОМАНДЫ @I6-@I10.
 СИГНАЛ @I10 ОПРЕДЕЛЯЕТ НАПРАВЛЕНИЕ СДВИГА.
#НА #Б БЛОК УПРАВЛЕНИЯ #М ПОД
 ДЕЙСТВИЕМ СИГНАЛОВ МИКРОКОМАНДЫ @I0-@I12
 ФОРМИРУЕТ ВНУТРЕННИЕ СИГНАЛЫ,
 УПРАВЛЯЮЩИЕ БЛОКАМИ @С@У@С@С.
#НА _
#А0 #Ц ИСПОЛЬЗОВАНИЕ СИГНАЛОВ
#НА ВЫХОДЫ ПРИЗНАКОВ СОСТОЯНИЯ
 СТАРШЕЙ #Б МПС С4, OVR, F3, Z #М СОЕДИНЕНЫ
 С СООТВЕТСТВУЮЩИМИ
 ВХОДАМИ ПРИЗНАКОВ СОСТОЯНИЯ @С@У@С@С.
 ПРИ ЭТОМ СТАРШЕЙ МОЖЕТ СЧИТАТЬСЯ
 @М@П@С, СОДЕРЖАЩАЯ 32-28 ИЛИ
 64-60 РАЗРЯДЫ В ЗАВИСИМОСТИ ОТ ТИПА ОПЕРАЦИЙ,
 ПРОИЗВОДИМЫХ В @А@Л@У. ДВУНАПРАВЛЕННАЯ
 ШИНА #Б У (УС, YN, YV, YZ)
 #М СОЕДИНЕНА ЧЕРЕЗ @Ш@Ф СО
 ВХОДНОЙ ШИНОЙ @D @Ц@П ДЛЯ
 ВЫДАЧИ ИНФОРМАЦИИ ИЗ @С@У@С@С,
 И С ВЫХОДНОЙ ШИНОЙ @У ДЛЯ ЧТЕНИЯ
 ИНФОРМАЦИИ.
 ВЫХОД КОДА УСЛОВИЯ @С@Т
 ПОДАЕТСЯ
 НА МУЛЬТИПЛЕКСОР УСЛОВИЙ.
 ВХОДЫ #Б /СЕМ, /EZ, /ЕС, /EN, /EV, СХ, /ОЕСТ
 #М ЗАЗЕМЛЕНЫ.
 УПРАВЛЕНИЕ ВХОДОМ /@S@E ОСУЩЕСТВЛЯЕТСЯ
 ИНВЕРСНЫМ СИГНАЛОМ @I8 @М@П@С,
 @I10 СОЕДИНЯЕТСЯ СО ВХОДОМ @I7 @М@П@С.
 СИГНАЛАМИ #Б /СЕМ &И /CEN #М УПРАВЛЯЕТ
 МИКРОПРОГРАММА.
#НОВСЦ
#НА #НА #Б
#А0 #Ц 6.5.ОБРАБОТКА ПРЕРЫВАНИЙ НА МИКРОУРОВНЕ
#НА ПРИ ЗАПРОСЕ ПРЕРЫВАНИЯ ПРОИСХОДИТ
 ЗАМЕНА АДРЕСА СЛЕДУЮЩЕЙ МИКРОКОМАНДЫ НА
 ФИКСИРОВАННЫЙ АДРЕС МИКРОПРОГРАММЫ ВХОДА
 В ПРЕРЫВАНИЕ. МИКРОПРОГРАММА
 ВХОДА В ПРЕРЫВАНИЕ УСТАНАВЛИВАЕТ МАСКУ
 НА ЗАПРОС ПРЕРЫВАНИЙ,
 ЗАПИСЫВАЕТ АДРЕС
 ПРЕРВАННОЙ МИКРОПРОГРАММЫ В СТЕК.
 ПОСЛЕ ЧЕГО ПРОИЗВОДИТСЯ
 ПЕРЕДАЧА УПРАВЛЕНИЯ МИКРОПРОГРАММЕ САМОГО
 ПРИОРИТЕТНОГО ПРЕРЫВАНИЯ И СБРОС ВСЕХ
 ПРЕРЫВАНИЙ И МАСКИ.
#НА ПРЕРЫВАНИЯ ДЕЛЯТСЯ НА 2 ГРУППЫ:
 "ПСЕВДО" И ВСЕ ОСТАЛЬНЫЕ (ВНЕШНИЕ И
 ВНУТРЕННИЕ).
#НА В СЛУЧАЕ ВНЕШНИХ И ВНУТРЕННИХ ПРЕРЫВАНИЙ
 ВЫПОЛНЕНИЕ ПРОГРАММЫ БУДЕТ ПРОДОЛЖАТЬСЯ,
 НАЧИНАЯ С ВЫБОРКИ КОМАНДНОГО СЛОВА.
 ПОЭТОМУ МИКРОПРОГРАММА ВХОДА В ПРЕРЫВАНИЕ
 ДОЛЖНА ДЕЛАТЬ СБРОС СТЕКА (КОМАНДОЙ @C@J@P@P
 ПРОИЗВОДИТСЯ ВЫБОРКА АДРЕСА ИЗ СТЕКА
 КАК МИНИМУМ 2 РАЗА!). ЗАТЕМ
 ПРОИЗВОДИТСЯ СМЕНА РАБОЧЕЙ ГРУППЫ РЕГИСТРОВ
 С ПЕРЕДАЧЕЙ УПРАВЛЕНИЯ ПРОГРАММЕ
 ОБРАБОТКИ СООТВЕТСТВУЮЩЕГО ПРЕРЫВАНИЯ
 СОГЛАСНО ВЕКТОРУ ПРЕРЫВАНИЙ.
#НА В СЛУЧАЕ ПСЕВДОПРЕРЫВАНИЙ ОБРАБОТКА ИХ
 ПРОИСХОДИТ НА МИКРОПРОГРАММНОМ УРОВНЕ И ЗАКАНЧИВАЕТСЯ
 ПЕРЕДАЧЕЙ УПРАВЛЕНИЯ ПО АДРЕСУ,
 ВЫБИРАЕМОМУ ИЗ СТЕКА,
 А ВЫПОЛНЕНИЕ МИКРОПРОГРАММЫ ПРОДОЛЖАЕТСЯ С ПРЕРВАННОГО МЕСТА.
#НА #НА
#ПЕРН ПСЕВДОПРЕРЫВАНИЯ ОТ @П@П ПРИ ЧТЕНИИ И ЗАПИСИ РЕГИСТРОВ @Ц@П.
#А0 СЧИТЫВАНИЕ ИЛИ ЗАПИСЬ ПУЛЬТОВЫМ ПРОЦЕССОРОМ
 СОДЕРЖИМОГО РЕГИСТРОВ @Ц@П
 ПРОИСХОДИТ ЧЕРЕЗ @О@З@У ОБМЕНА С @П@П.
 В ЭТИХ ПРЕРЫВАНИЯХ МИКРОПРОГРАММА ИМИТИРУЕТ
 КОМАНДЫ #Б RMOD &И WMOD, #М А ИМЕННО:
#А3 - ЧЕРЕЗ ПРЕОБРАЗОВАТЕЛЬ
 НАЧАЛЬНОГО АДРЕСА СЧИТЫВАЕТ СОДЕРЖИМОЕ АДРЕСНОГО
 РЕГИСТРА, УСТАНОВЛЕННОГО @П@П, И ОПРЕДЕЛЯЕТ
 ЗАПРАШИВАЕМУЮ ГРУППУ РЕГИСТРОВ @Ц@П;
#А3 - СЧИТЫВАЕТ (ЗАПИСЫВАЕТ)
 УКАЗАННЫЙ РЕГИСТР В @О@З@У @П@П.
#А3 - ПРОИЗВОДИТ ВОЗВРАТ ИЗ ПСЕВДОПРЕРЫВАНИЯ.
#ПЕРН ПСЕВДОПРЕРЫВАНИЕ @H@A@L@T (ОСТАНОВ).
#А0 ПРОИСХОДИТ ПО ЗАПРОСУ ОТ @П@П
 (6 РАЗРЯД СТАУСНОГО РЕГИСТРА @Ц@П), ПРИ
 ЗАДАНИИ РЕЖИМА
 ОСТАНОВА ПО АДРЕСУ (4 РАЗРЯД СТАТУСНОГО РЕГИСТРА) В СЛУЧАЕ
 СОВПАДЕНИЯ ЗАДАННОГО АДРЕСА С ТЕКУЩИМ И ПО
 КОМАНДЕ "ОСТАНОВ".
 В МОМЕНТ ВХОДА В ПСЕВДОПРЕРЫВАНИЕ
 МИКРОПРОГРАММА СБРАСЫВАЕТ ТРИГГЕР "ПУСК"
 (ДЛЯ НАДЕЖНОСТИ) И
 ЖДЕТ ЕГО УСТАНОВКИ
 ПУЛЬТОВЫМ ПРОЦЕССОРОМ.
 ПОСЛЕ УСТАНОВКИ ТРИГГЕРА МИКРОПРОГРАММА СНОВА СБРАСЫВАЕТ ЕГО
 И ПЕРЕДАЕТ УПРАВЛЕНИЕ ПО АДРЕСУ,
 ВЫБИРАЕМОМУ ИЗ СТЕКА.
#НОВСЦ #НА #Б
#А0 #Ц 6.6. СТАТУСНЫЙ РЕГИСТР___@Ц_@П #М
#НА В @Ц@П УСТАНОВЛЕН СТАТУСНЫЙ РЕГИСТР, УПРАВЛЯЕМЫЙ
 @П@П. ЗНАЧЕНИЕ ОТДЕЛЬНЫХ РАЗРЯДОВ СТАТУСНОГО РЕГИСТРА:
#ПЕРН 1_-_ПОЛНЫЙ ОСТАНОВ @Ц@П (ДЛЯ ДОСТУПА К #Б ОЗУ, ПЗУ МП) ("0").#М
#ПЕРН 2_-_12-ЫЙ РАЗРЯД АДРЕСА МИКРОПРОГРАММНОЙ ПАМЯТИ
 ПРИ ОБРАЩЕНИИ К НЕЙ @I8080.
#ПЕРН 3_-_12-ЫЙ РАЗРЯД АДРЕСА МИКРОПРОГРАММНОЙ ПАМЯТИ
 ПРИ БЕЗУСЛОВНОМ ПЕРЕХОДЕ, ИНИЦИИРОВАННОМ @I8080.
#ПЕРН 4_-_БЛОКИРОВКА ОСТАНОВА ПО АДРЕСУ ("1")
#ПЕРН 5_-_ИДЕТ НА МУЛЬТИПЛЕКСОР УСЛОВИЙ @Ц@П
#ПЕРН 6_-_HALT ("1"), УСТАНАВЛИВАЕМЫЙ ИЗ @Ц@П
#ПЕРН 7_-_ПРИ ЗАПИСИ - СБРОС #Б HALT ЦП; #М ПРИ ЧТЕНИИ - "1".
#ПЕРН 8_-_@H@A@L@T, УСТАНАВЛИВАЕМЫЙ ИЗ @П@П.
#НА #НА ПУЛЬТОВОЙ ПРОЦЕССОР ИМЕЕТ ВОЗМОЖНОСТЬ
 УПРАВЛЯТЬ СОСТОЯНИЕМ @Ц@П ЧЕРЕЗ СТАТУСНЫЙ РЕГИСТР,
 РЕАЛИЗУЯ ФУНКЦИИ "ПУЛЬТОВОЙ ОТЛАДКИ":
#ПЕРН ОСТАНОВ - СБРОС 6 РАЗРЯДА СТАТУСНОГО РЕГИСТРА @Ц@П
 (РЕЖИМ @H@A@L@T), ВЫЗЫВАЮЩЕГО
 ПСЕВДОПРЕРЫВАНИЕ @H@A@L@T.
#ПЕРН ПУСК - УСТАНОВКА 6 РАЗРЯДА СТАТУСНОГО РЕГИСТРА
 И УСТАНОВКА ТГ. П@У@С@К, СБРАСЫВАЕМОГО МИКРОПРОГРАММОЙ.
#ПЕРН ШАГ - В РЕЖИМЕ "ОСТАНОВ" - УСТАНОВКА
 ТГ. #Б ПУСК, #М СБРАСЫВАЕМОГО
 МИКРОПРОГРАММОЙ.
#НА #А0 #Б #ВС7 _
#Ц РАЗРЯДЫ 2 РЕГИСТРА _Б_О_П_П,
#А0 #Ц УСТАНАВЛИВАЕМЫЕ МИКРОПРОГРАММОЙ, И ИХ ЗНАЧЕНИЕ: #М
#А0 1Р.= 1 - ОСТАНОВ, УСТАНОВЛЕННЫЙ @П@П;
#А0 2Р.= 1 - КОМАНДА "ОСТАНОВ";
#А0 3Р.= 1 - ПРЕРЫВАНИЕ В ПРЕРЫВАНИИИ (@П@О@П=1 И ЛЮБОЕ ВНУТРЕННЕЕ
 ИЛИ ВНЕШНЕЕ ПРЕРЫВАНИЕ); #Б
#А0 4Р.= 1 - "TIME-OUT" ОЗУ (INT3);
#А0 5Р.= 1 - "TIME-OUT" #М ШИНЫ (@I@N@T4);
#А0 6Р.= 1 - МНОГОКРАТНАЯ ОШИБКА (@I@N@T2);
#А0 7Р.= 1 - ОСТАНОВ ПО АДРЕСУ ИЛИ ОТСУТСТВУЮЩЕЕ ПРЕРЫВАНИЕ
#Б (INT6,25); #М
#А0 8Р.= 1 - СООБЩЕНИЕ ОТ @Ц@П ПУЛЬТОВОМУ ПОЦЕССОРУ (КОМАНДА @W@M@O@D).
#НА #НА #Б #ВС8 _
#А0 #Ц 6.7. АДРЕСАЦИЯ РЕГИСТРОВ И ПАМЯТИ @Ц@П
#А0 #Ц ДЛЯ ДОСТУПА ИЗ @П@П И КОМАНДАМИ #Б RMOD &И WMOD
#НА ВЕСЬ СПИСОК РЕГИСТРОВ И ПАМЯТИ @Ц@П ДОСТУПЕН
 ТОЛЬКО @П@П.
 КОМАНДАМ #Б WMOD &И RMOD #М ДОСТУПНЫ ТОЛЬКО
 НЕКОТОРЫЕ ИЗ НИХ (ПОКА). #А0 _ #А3 ОБОЗНАЧЕНИЯ: #А0 _
#А0 @R_-_РЕГИСТР (ПАМЯТЬ) МОЖНО ПРОЧИТАТЬ КОМАНДОЙ @R@M@O@D;
#А0 @W_-_МОЖНО ЗАПИСАТЬ В РЕГИСТР (ПАМЯТЬ)
 КОМАНДОЙ @W@M@O@D;
#А0 @I_-_МОЖНО ЗАПИСАТЬ В РЕГИСТР (ПАМЯТЬ) ИЗ @П@П;
#А0 @О_-_МОЖНО ПРОЧИТАТЬ РЕГИСТР (ПАМЯТЬ) В @П@П.
#НА #Б РЕГИСТРЫ И ПАМЯТЬ ЦП
 #М ИМЕЮТ СЛЕДУЮЩИЕ ВОСЬМЕРИЧНЫЕ
 АДРЕСА (В СКОБКАХ ПРИВЕДЕНЫ ШЕСТНАДЦАТЕРИЧНЫЕ
 ЭКВИВАЛЕНТЫ):
#А0 _
#А0 000_0000_:_000_1777_(00000_:_003FF)_-_@О@З@У МОДИФИКАТОРОВ; RWIO;
#А0 ______________________________________ЗАП-@У, ЧТ-@D, 32 РАЗРЯДА
#А0 000_2000_:_000_3777_(00400_:_007FF)_-_РЕГИСТРЫ
#А0 ______________________________________ПРИПИСКИ/ЗАЩИТЫ; RWIO;
#А0 ______________________________________ЗАП/ЧТ_-_@У, 20 РАЗРЯДОВ #Б
#А0 000_4000_:_000_5777_(00800_:_00BFF)_-_БОБР, БИЗМ; #М RWIO;
#А0 ______________________________________ЗАП/ЧТ_-_@D, 2,3 РАЗРЯДЫ
#А0 000_6000_:_000_7777_(00С00_:_00FFF)_-_ПРИЗНАКИ @Б@М@С@П; RWIO;
#А0 ______________________________________ЗАП/ЧТ_-_@D, 1 РАЗРЯД
#А0 001_0000_:_001_1777_(01000_:_013FF)_-_ОЗУ0 ПРИОРИТ.СТР.; RWIO
#А0 001_2000_:_001_3777_(01400_:_017FF)_-_ОЗУ1 ПРИОРИТ.СТР.; RWIO
#А0 ______________________________________ЗП-@У, ЧТ-@D,11-20 РАЗРЯДЫ
#А0 001_4000_:_001_5777_(01800_:_01BFF)_-_РЕГИСТРЫ
#А0 001_6000_:_001_7777_(01С00_:_01FFF)_-_РЕГИСТРЫ
#А0 002_0000_:_000_1777_(02000_:_023FF)_-_
#А0 002_2000_:_002_3777_(02400_:_027FF)_-_
#А0 002_4000_:_002_5777_(02800_:_02BFF)_-_
#А0 002_6000_:_002_7777_(02С00_:_02FFF)_-_
#А0 003_0000_:_003_1777_(03000_:_033FF)_-_
#А0 003_2000_:_003_3777_(03400_:_037FF)_-_
#А0 003_4000_:_003_5777_(03800_:_03BFF)_-_КЭШ КОМАНД; IО
#А0 003_6000_:_003_7777_(03С00_:_03FFF)_-_КЭШ ОПЕРАНДОВ; IО
#А0 _
#А3 ПРИ ОБРАЩЕНИЯХ К КЭШУ АДРЕС ЗАДАЕТСЯ СЛЕДУЮЩИМ ОБРАЗОМ:
#А0 1_-10 РАЗРЯДЫ - НОМЕР СЛОВА В СТРАНИЦЕ;
#А0 11-20 РАЗРЯДЫ - КЭШ КОМАНД ИЛИ ОПЕРАНДОВ;
#А0 21-30 РАЗРЯДЫ - НОМЕР СТРАНИЦЫ.
#А3 ТАКИМ ОБРАЗОМ, 30-21,10-1 РАЗРЯДЫ ЕСТЬ ПОЛНЫЙ
 20-РАЗРЯДНЫЙ АДРЕС, НЕОБХОДИМЫЙ ДЛЯ ОБРАЩЕНИЯ
 К КЭШУ И ЭКВИВАЛЕНТНЫЙ АДРЕСУ ПО ПАМЯТИ.
 ЗНАКОВЫЙ РАЗРЯД АДРЕСА РАЗМНОЖАЕТСЯ В МИКРОПРОГРАММЕ АВТОМАТИЧЕСКИ.
#А3 АДРЕСА КЭШ КОМАНД И ОПЕРАНДОВ "ПРИПИСАНЫ", Т.&Е. &ЕСЛИ
 @Б@П=1, ЗАДАЕТСЯ ФИЗ.&АДРЕС; ЕСЛИ @Б@П=0 - МАТ.&АДРЕС
 С УЧЕТОМ ПРИПИСКИ!
#А0 _#Б #А3 РЕГИСТРЫ: #М
#А0 _
#А0 001_4000_(01800)_-_СУММАТОР (64 РАЗРЯДА); IО
#А0 001_4001_(01801)_-_РЕГИСТР МЛАДШИХ РАЗРЯДОВ (64 РАЗРЯДА); IО
#А0 001_4002_(01802)_-_@Г@Р@П (64 РАЗРЯДА); RWIO
#ПЧ 001_4003_(01803)_-_@С@Ч@А@С (32 РАЗРЯДА); ОДНОВРЕМЕННО
 ПРОИСХОДИТ ВЫБОРКА КОМАНДНОГО СЛОВА В РЕГИСТР КОМАНД
 (@R@G1); @П@П@К, @Т@К@К И @Р@О@П НЕ МЕНЯЮТСЯ. IО #СГ0
#А0 001_4004_(01804)_-_@Р@О@П (32 РАЗРЯДА); RWIO
#А0 001_4005_(01805)_-_@И@А@О@П (32 РАЗРЯДА); IО
#А0 001_4006_(01806)_-_HALF; IО
#А0 001_4007_(01807)_-_ВУТЕ; IО_______КОНСТАНТЫ
#А0 001_4010_(01808)_-_EXPN;_IО_____МИКРОПРОГРАММ
#А0 001_4011_(01809)_-_MANT;_IО_
#А0 001_4012_(0180А)_-_WR6;_IО
#А0 001_4013_(0180В)_-_WR5;_IО_________РАБОЧИЕ
#А0 001_4014_(0180С)_-_WR4; IО_________РЕГИСТРЫ
#А0 001_4015_(0180D)_-_WR3; IО_______МИКРОПРОГРАММ
#А0 001_4016_(0180Е)_-_WR2; IО
#А0 001_4017_(018OF)_-_Q; IО
#ПЧ 001_4020_(01810)_-_РЕГИСТР ФИЗИЧЕСКОГО АДРЕСА #Б ОЗУ (RG0
 БОИ #М ДАННЫХ), 64 РАЗРЯДА
 (ИСПОЛЬЗУЕТСЯ 20 РАЗРЯДОВ); IО
#ПЧ 001_4021_(01811)_-_РЕГИСТР КОМАНДЫ (@R@G1 @Б@О@И, 64 РАЗРЯДА); IО
#ПЧ 001_4022_(01812)_-_РЕГИСТР ОПЕРАНДА (@R@G2 @Б@О@И, 64 РАЗРЯДА); IО
#ПЧ 001_4023_(01813)_-_РЕГИСТР РЕЗ-ТА (@R@G3 @Б@О@И, 64 РАЗРЯДА); IО
#ПЧ 001_4024_(01814)_-_РЕГИСТР ТЕГА КОМАНДЫ (@R@G1 @Б@О@И ТЕГА)
 8 РАЗРЯДОВ; IО
#ПЧ 001_4025_(01815)_-_РЕГИСТР ТЕГА ОПЕРАНДА (@R@G2, 8 РАЗРЯДОВ); IО
#ПЧ 001_4026_(01816)_-_РЕГИСТР ТЕГА РЕЗУЛЬТАТА
 (СУММАТОРА, 8 РАЗРЯДОВ); ОДНОВРЕМЕННО ПИШЕТСЯ В @R@G3 И @Р@Р@Р; RWIO
#ПЧ 001_4027_(01817)_-_РЕГИСТР ИСПОЛНИТЕЛЬНОГО АДРЕСА;
 ЗАПИСЬ: 32 РАЗРЯДА ШИНЫ @У,
 ЧТЕНИЕ: 20 РАЗРЯДОВ ШИНЫ @D; IО
#ПЧ 001_4030_(01818)_-_РЕГИСТР НОМЕРА ГРУППЫ;
 ЗАПИСЬ: 6-10 РАЗРЯДЫ ШИНЫ @У,
 ЧТЕНИЕ: 6-11 РАЗРЯДЫ ШИНЫ @D; RWIO
#ПЧ 001_4031_(01819)_-_РЕГИСТР НОМЕРА ПРОЦЕССА;
 ЗАПИСЬ: 8 РАЗРЯДОВ ШИНЫ @У,
 ЧТЕНИЕ: 8 РАЗРЯДОВ ШИНЫ @D; RWIO
#ПЧ 001_4032_(0181А)_-_РЕГИСТР ФИЗИЧЕСКОЙ СТРАНИЦЫ ИЛИ
 АДРЕС @О@З@У ПРИЗНАКОВ @В@В@В И
 @О@З@У ПРИОРИТЕТОВ СТРАНИЦ (@Р@Ф@С);
 ЗАПИСЬ: 11-20 РАЗРЯДЫ ШИНЫ @У,
 ЧТЕНИЕ: 11-20 РАЗРЯДЫ ШИНЫ @D; IО
#ПЧ 001_4033_(0181В)_-_РЕГИСТР РЕЖИМОВ
 (ИСПОЛНИТЕЛЬНАЯ ЧАСТЬ);
 ЗАПИСЬ: 32 РАЗРЯДА ШИНЫ @У (ПОСТОЯННАЯ
 ЧАСТЬ @Р@Р И ТГ.&ПРИЗНАКОВ!);
 ЧТЕНИЕ: 3-5,28-30 РАЗРЯДЫ ШИНЫ @D (ТОЛЬКО
 ТГ.&ПРИЗНАКОВ!); IО
#ПЧ 001_4034_(0181С)_-_РЕГИСТР ПАРАМЕТРА СДВИГА,
 6 МЛАДШИХ РАЗРЯДОВ - ПАРАМЕТР СДВИГА,
 11-ЫЙ РАЗРЯД ЗАДАЕТ НАПРАВЛЕНИЕ;
 ЗАПИСЬ - С ШИНЫ @У; I
#ПЧ 001_4035_(0181D)_-_РЕГИСТР @К@О@П АРБИТРА
 (ДЛЯ ОСТАНОВА @П@П);
 ЗАПИСЬ: 4 РАЗРЯДА ШИНЫ @У,
 ЧТЕНИЕ: 4 РАЗРЯДА ШИНЫ @D; IО
#ПЧ 001_4036 (0181Е)_-_РЕГИСТР #Б N СУСС, (Z,N,С OVR); #М
 - МИКРОМАШИННЫЙ СТАТУСНЫЙ РЕГИСТР;
 ЗАПИСЬ: 7-10 РАЗРЯДЫ ШИНЫ @У,
 ЧТЕНИЕ: 7-10 РАЗРЯДЫ ШИНЫ @D:
 10Р.- Z, 9Р.- N, 8Р.- С, 7Р.- OVR; IО.
#ПЧ 001_4037_(0181F)_-_РЕГИСТР #Б М СУСС #М
 - РЕГИСТР ПРИЗНАКОВ РЕЗУЛЬТАТА, ИСПОЛНИТЕЛЬНАЯ ЧАСТЬ;
 У НЕАКТИВНОГО ПРОЦЕССА
 КОПИРУЕТСЯ В 7-10 РАЗРЯДЫ @Р@Р.
 ЗНАЧЕНИЕ РАЗРЯДОВ - АНАЛОГИЧНО РГ.N; IО
#ПЧ 001_6000_(01С00)_-_РЕГИСТР ПЕРЕДАЧИ СООБЩЕНИЯ ОТ @Ц@П К @П@П
 ПО ПОСЛЕДОВАТЕЛЬНОЙ ЛИНИИ СВЯЗИ;
 ЗАПИСЫВАЕТСЯ 8 РАЗРЯДОВ РГ.А В 0-Й РГ.Б@О@П@П
 И УСТАНАВЛИВАЕТСЯ ПРИЗНАК, ЧТО ТАМ ЕСТЬ ИНФОРМАЦИЯ.
 (ЗАПИСЬ В @Б@О@П@П ПО 8 РАЗРЯДОВ С ШИНЫ @У); W
#ПЧ 001_6000_(01С00)_-_ПРОПУСК КОМАНДЫ,
 С ВЫБОРКОЙ КОМАНДНОГО СЛОВА, ЕСЛИ НАДО; I
#ПЧ 001_6001_(01С01)_-_МНОЖИМОЕ, 64 РАЗРЯДА @У (ТОЛЬКО ЗАПИСЬ);
 ПОКА ОТСУТСТВУЕТ!
#ПЧ 001_6002_(01С02)_-_МНОЖИТЕЛЬ, 64 РАЗРЯДА (ТОЛЬКО ЗАПИСЬ);
 ПОКА ОТСУТСТВУЕТ!
#ПЧ 001_6003_(01С03)_-_ПРОИЗВЕДЕНИЕ, МЛАДШИЕ 64 РАЗРЯДА
 (ТОЛЬКО ЧТЕНИЕ); ПОКА ОТСУТСТВУЕТ!
#ПЧ 001_6004_(01С04)_-_ПРОИЗВЕДЕНИЕ, СТАРШИЕ 64 РАЗРЯДА
 (ТОЛЬКО ЧТЕНИЕ); ПОКА ОСТУТСТВУЕТ!
#ПЧ 001_6005_(01С05)_-_БЛОК ПОИСКА ЛЕВОЙ ЕДИНИЦЫ;
 ЧТЕНИЕ: 7 РАЗРЯДОВ ШИНЫ @D, ИЗ КОТОРЫХ
 6 МЛАДШИХ - ИНФРОМАЦИОННЫЕ, 7Р.- ФЛАГ; О
#ПЧ ___________________64Р.=_1_:_РЕЗУЛЬТАТ_-_0,_ФЛАГ_-_0
#ПЧ ___________________63Р.=_1_:_РЕЗУЛЬТАТ_-_1,_ФЛАГ_-_0
#ПЧ _____________________.___.___.___.___.___.___.___.
#ПЧ ____________________1Р.=_1_:_РЕЗУЛЬТАТ_-_63,_ФЛАГ_-_0
#ПЧ ____________________НЕТ_1__:_РЕЗУЛЬТАТ_-_63,_ФЛАГ_-_1.
#ПЧ 001_6006_(01С06)_-_
#ПЧ 001_6007_(01С07)_-_РЕЗУЛЬТАТ СДВИГА СУММАТОРА;
 ЧТЕНИЕ: 64 РАЗРЯДА @D; О
#ПЧ 001_6010_(01С08)_-_@К@О@П КОМАНДЫ (ПО УКАЗАТУЛЮ @Т@К@К), 8Р.@D
 (ТОЛЬКО ЧТЕНИЕ); О
#ПЧ 001_6011_(01С09)_-_АДРЕСНАЯ ЧАСТЬ КОМАНДЫ
 (ПО УКАЗАТЕЛЮ @Т@К@К), 32 РАЗРЯДА @D
  (ТОЛЬКО ЧТЕНИЕ); О
#ПЧ 001_6012_(01С0А)_-_ЗАПРОС НА КОРРЕКТИРОВКУ СПИСКОВ ПРИОРИТЕТОВ
 СТРАНИЦ: #Б ОЗУ БМСП, #М НАЧИНАЯ С АДРЕСА,
 ЗАДАННОГО В СУММАТОРЕ В 11-20 РАЗРЯДАХ,
 ЗАПОЛНЯЕТСЯ ЕДИНИЦАМИ
 (ПРИ ОБРАЩЕНИЯХ @П@П АДРЕС НАЧАЛА ЗАГРУЗКИ
 ЗАДАЕТСЯ В БАЙТАХ ДАННЫХ);
 В #Б ОЗУПС0 #М
 ПО АДРЕСУ 1 ЗАНОСИТСЯ "0"; WI
#ПЧ 001_6013_(01С0В)_-_УСТАНОВКА ОСТАНОВА - ЗАПИСЬ "0"
 (1 РАЗРЯД ШИНЫ @У) В @О@З@У
 ОСТАНОВА 0 (ДЛЯ ПУЛЬТОВОГО ОСТАНОВА).
 АДРЕС ОСТАНОВА ЗАДАЕТСЯ В БАЙТАХ ДАННЫХ
 @О@З@У ОБМЕНА С @П@П, 20 РАЗРЯДОВ.
 ЗНАЧЕНИЕ РЕГИСТРА @К@О@П АРБИТРА
 К ЭТОМУ МОМЕНТУ ДОЛЖНО БЫТЬ ОПРЕДЕЛЕНО; I
#ПЧ 001_6014_(01С0С)_-_СНЯТИЕ ОСТАНОВА - ЗАПИСЬ "1" В @О@З@У
 ОСТАНОВА 0; I
#ПЧ 001_6015_(01C0D)_-_УСТАНОВКА ОСТАНОВА - ЗАПИСЬ "0" В @О@З@У
 ОСТАНОВА 1; I
#ПЧ 001_6016_(01С0Е)_-_СНЯТИЕ ОСТАНОВА - ЗАПИСЬ "1" В @О@З@У
 ОСТАНОВА 1; I
#ПЧ 001_6017_(01C0F)_-_ЗАПИСЬ В РЕГИСТР КОМАНД (@R@G1)
 ЛЕВОЙ КОМАНДЫ; ЗАПИСЫВАЕМ 1-32 РАЗРЯДА ДАННЫХ ИЗ @П@П; I
#ПЧ 001_6020_(01С10)_-_ЗАПИСЬ В РЕГИСТР КОМАНД ПРАВОЙ КОМАНДЫ;
 1-32 РАЗРЯДЫ ДАННЫХ ИЗ @П@П; I
#ПЧ 001_6021_(01С11)_-_"ПУСК" @Ц@П, НАЧИНАЯ С ЛЕВОЙ КОМАНДЫ,
 ЗАПИСАННОЙ В РЕГИСТР КОМАНД; I
#ПЧ 001_6022_(01С12)_-_"ПУСК" @Ц@П, НАЧИНАЯ С ЛЕВОЙ КОМАНДЫ
 ПО ЗАДАННОМУ АДРЕСУ; I
#ПЧ 001_6023_(01С13)_-_УСТАНОВКА ПРОГРАММНОГО ПРЕРЫВАНИЯ:
  УСТАНАВЛИВАЕТСЯ
 ПРОГРАММНОЕ ПРЕРЫВАНИЕ
 С НОМЕРОМ 31, ПРОХОДЯЩЕЕ ПРИ НАЛИЧИИ @П@М@И
 И ОТСУТСТВИИ @Б@В@П. 41 РАЗРЯД @Г@Р@П УСТАНАВЛИВАЕТСЯ В "1".
 ИЗ @П@П ЗАПИСЫВАЕТСЯ ТОЛЬКО РАЗРЯД @Г@Р@П, Т.&К. &СБРОС @I@N@T31
 ПРОИСХОДИТ ОДНОВРЕМЕННО СО СБРОСОМ @I@N@T28! WI
#ПЧ 001_6024_(01С14)_-_РЕГИСТР СЧЕТНОГО ВРЕМЕНИ
 АКТИВНОГО ПРОЦЕССА,
 64 РАЗРЯДА; МЛАДШИЕ 16 РАЗРЯДОВ - В АППАРАТНОЙ ЧАСТИ ЧАСОВ,
 17-64 РАЗРЯДЫ - В @О@З@У МОДИФИКАТОРОВ АКТИВНОЙ ГРУППЫ.
 ЗАПИСЬ/ЧТЕНИЕ АППАРАТНОЙ ЧАСТИ -
 ПО 1 БАЙТУ С 1-8
 РАЗРЯДОВ ШИНЫ @D; RWIO
#ПЧ 001_6025_(01С15)_-_ТАЙМЕР СЧЕТНОГО ВРЕМЕНИ
 АКТИВНОГО ПРОЦЕССА,
 32 РАЗРЯДА; МЛАДШИЕ 16 РАЗРЯДОВ - В
 АППАРАТНОЙ ЧАСТИ ТАЙМЕРА, 17-32 РАЗРЯДЫ - В @О@З@У
 МОДИФИКАТОРОВ АКТИВНОЙ ГРУППЫ.
 ЗАПИСЬ/ЧТЕНИЕ - ПО 1 БАЙТУ
 С 1-8 РАЗРЯДОВ ШИНЫ @D; RWIO
#ПЧ 001_6026_(01С16)_-_ПРОВЕРКА СОСТОЯНИЯ @О@З@У ОБМЕНА
 #Б ЦП->ПП: С = 1, #М ЕСЛИ ЗАНЯТО; R
#ПЧ 001_6027_(01С17)_-_
#ПЧ 001_6030_(01С18)_-_УСТАНОВКА ВНЕШНЕГО
 ПРЕРЫВАНИЯ НА ШИНУ (@Ц@П ПОСЫЛАЕТ
 ВНЕШНЕЕ ПРЕРЫВАНИЕ, САМ ПРИ ЭТОМ НЕ ПРЕРЫВАЯСЬ); WI
#ПЧ 001_6031_(01С19)_-_СБРОС КЭШ'А; WI
#ПЧ 001_6032_(01С1А)_-_ЧТЕНИЕ НОМЕРА ПРОЦЕССОРА; RО
#ПЧ 001_6033_(01С1В)_-_
#ПЧ 001_6034_(01С1С)_-_
#ПЧ 001_6035_(01C1D)_-_
#ПЧ 001_6036_(01С1Е)_-_
#ПЧ 001_6037_(01C1F)_-_
#СГ0 #НА РЕГИСТРЫ #Б WR1,WR5,WR6,N #М
 И ИСПОЛНИТЕЛЬНОГО АДРЕСА ИСПОЛЬЗУЮТСЯ КАК
 РАБОЧИЕ ПРИ ОБРАЩЕНИЯХ @П@П.
#А0 #СГ0 #НА _
#НОВСЦ #НА #СГ0 #А0 #Ц #Б 7._З_А_М_Е_Ч_А_Н_И_Я #М #А0
#ПЕРН 1. В РЕЖИМЕ @B@T@R БИТ ЗАПРЕТА ЗАПИСИ В ТЕГЕ НЕ ПРОВЕРЯЕТСЯ
 НЕЗАВИСИМО ОТ @Б@П@Т@З.
#ПЕРН 2. ЕСЛИ КОМАНДЫ ЗАПИСЫВАЮТСЯ В @О@З@У (НАПРИМЕР,
 ЗАГРУЗЧИКОМ, ИЛИ САМА ПРОГРАММА МОДИФИЦИРУЕТ СВОИ КОМАНДЫ),
 ТО ПЕРЕД ИХ ИСПОЛНЕНИЕМ НАДО СДЕЛАТЬ #Б СБРОС КЭША, #М
 ИНАЧЕ МОЖЕТ СЛУЧИТЬСЯ, ЧТО БУДУТ ВЫБИРАТЬСЯ СТАРЫЕ КОМАНДЫ,
 БЫВШИЕ В @О@З@У НА ТЕХ ЖЕ АДРЕСАХ, И ОСЕВШИЕ В КЭШЕ.
#ПЕРН 3. ВРЕМЯ СБРОСА КЭША - 200 МИКРОСЕКУНД.
#ПЕРН 4. ЧИТАТЬ МОДИФИЦИРОВАННЫЕ СЛОВА ТОЛЬКО КОМАНДАМИ
 #Б RDMWR_! #М Т.&К. $МОДИФИЦИРОВАННОЕ СЛОВО В КЭШ НЕ ПОПАДАЕТ.
#ПЕРН 5. ПОСЛЕ СИГНАЛА "СБРОС КЭША" К НЕМУ НЕЛЬЗЯ ОБРАЩАТЬСЯ
 КОМАНДАМИ ТИПА @C@C@R@D ИЛИ @D@C@R@D, Т.&К. &ПРИ ЭТОМ ЗАВИСАЕТ
 АРБИТР (КЛИНЧ).
 НАДО СНАЧАЛА СДЕЛАТЬ ПУСТОЕ ОБРАЩЕНИЕ К @О@З@У,
 ЧТОБ "СБРОС КЭША" СБРОСИЛСЯ.
#ПЕРН 6. INT11 - ЗАПРЕТ ЗАПИСИ В ТЕГЕ ПРИ @Б@П@Т@З=0
 ПРОИСХОДИТ ПЕРЕД ЗАПИСЬЮ В @О@З@У, КОГДА
 ЗАПИСЬ В КЭШ УЖЕ ПРОИЗОШЛА.
 ПОЛУЧАЕТСЯ НЕСООТВЕТСТВИЕ МЕЖДУ @О@З@У И КЭШОМ_!
 ПОЭТОМУ ПРИ INT11 В МИКРОПРОГРАММЕ СРАЗУ ЖЕ СБРАСЫВАЕТСЯ КЭШ.
#ПЕРН 7. ЧАСЫ "ТИКАЮТ" С ЧАСТОТОЙ 1 МИКРОСЕКУНДА;
 ТАЙМЕР - 10 МИКРОСЕКУНД.
#ПЕРН 8. НЕЛЬЗЯ ЧИТАТЬ/ПИСАТЬ ДЛИТЕЛЬНОЕ ВРЕМЯ В РЕЖИМЕ @B@T@R,
 ИНАЧЕ БУДЕТ "TIME-OUT"_!
#ПЕРН 9. INT32 ПРИ ВОЗНИКНОВЕНИИ ЛЮБОГО ПРЕРЫВАНИЯ И @П@О@П=1:
 ЕСЛИ ПРОТАЛКИВАТЬ ПРОГРАММУ ДАЛЬШЕ, УБРАВ "ОСТАНОВ",
 НАДО СБРОСИТЬ И ЭТО ПРЕРЫВАНИЕ (ОНО ПРИ СБРОСЕ ТГ.@H@A@L@T
 НЕ СБРАСЫВАЕТСЯ_!).    ИНАЧЕ ОНО СНОВА "СОРВЕТ".
#ПЕРН 10. ПРИ ЗАПИСИ В @О@З@У ОСТАНОВА 0,1
 СИГНАЛ #Б YDEV=SТОРМ0,1 #М ЯВЛЯЕТСЯ ОДНОВРЕМЕННО
 СИГНАЛОМ ВЫБОРКИ И ЗАПИСИ.
 @W@R@Y ПРИ ЭТОМ - ЛИШНЕЕ, ТОЛЬКО ЧТОБ НЕ РУГАЛСЯ МИКРОАССЕМБЛЕР.
#ПЕРН 11. АНАЛОГИЧНО - СБРОС @П@И@А СИГНАЛОМ @D@D@E@V3 :
 ДОБАВЛЯЕМ СИГНАЛ ЗАПИСИ @W@R@D.
#ПЕРН 12. СБРОС КЭША - ЭТО ЗАПИСЬ _3FF_ В @О@З@У НОМЕРОВ
 СТРАНИЦ КЭША. ВО ВРЕМЯ СБРОСА КЭША И ПОСЛЕ СБРОСА,
 КОГДА ИЗ @О@З@У НОМЕРОВ СТРАНИЦ ВЫБИРАЕТСЯ _3FF_,
 АРБИТР ОБРАЩАЕТСЯ К @О@З@У.
 В КОМАНДАХ ЧТЕНИЯ КЭША ПОСЛЕ СБРОСА ИЛИ ПРИ НЕСОВПАДЕНИИ
 НОМЕРА СТРАНИЦЫ, ЧТЕНИЯ ИЗ КЭША НЕ ПРОИСХОДИТ,
 ДАННЫЕ В @Б@О@И НЕ ИЗМЕНЯЮТСЯ.
#ПЕРН 13. ОБРАЩЕНИЯ К @О@З@У ЕСТЬ ВСЕГДА:
 ПРИ ЗАПИСИ, В РЕЖИМАХ @B@T@R И @R@D@M@W@R.
 ЗАПИСЬ В КЭШ ОПЕРАНДОВ ПРОИСХОДИТ ПРИ ЗАПИСИ (@D@W@R)
 И ПРИ ЧТЕНИИ ОПЕРАНДА (@D@R@D);
 А КЭШ КОМАНД - ТОЛЬКО ПРИ #Б ВКС (FЕТСН). #М
#КР
*END F
*END F
